{"version":3,"sources":["actiontypes/index.js","reducers/auth.js","reducers/arms.js","reducers/bosses.js","reducers/cards.js","reducers/games.js","reducers/gods.js","reducers/matches.js","reducers/pets.js","reducers/sessions.js","reducers/teams.js","reducers/titles.js","reducers/universes.js","reducers/abyss.js","reducers/vaults.js","reducers/index.js","store.js","actions/auth/auth.js","assets/images/pcg_logo.png","assets/images/spinner.gif","components/isLoading/spinner.js","components/auth/login.js","UTIL/config.js","components/widgets/arm_widget.js","components/widgets/card_widget.js","components/widgets/title_widget.js","components/widgets/pet_widget.js","components/landing/landing.js","components/navigation/navbar.js","components/navigation/sidebar.js","components/STATE/index.js","components/cards/newcard.js","actions/cards.js","components/cards/updatecard.js","components/arms/updatearm.js","actions/arms.js","components/arms/newarm.js","actions/universes.js","components/universe/newuniverse.js","components/universe/updateuniverse.js","components/titles/updatetitle.js","actions/titles.js","components/titles/newtitle.js","actions/abyss.js","components/abyss/newabyss.js","components/abyss/updateabyss.js","components/pets/updatepet.js","actions/pets.js","components/pets/newpet.js","App.js","logo.svg","index.js"],"names":["LOGIN_SUCCESS","LOGOUT","USER_LOADED","GET_ALL_CARDS","GET_CARD","ADD_CARD","DELETE_CARD","UPDATE_CARD","GET_PETS","ADD_PET","DELETE_PET","UPDATE_PET","GET_TITLES","ADD_TITLE","DELETE_TITLE","UPDATE_TITLE","GET_ARMS","ADD_ARM","DELETE_ARM","UPDATE_ARM","GET_MATCHES","ADD_MATCH","DELETE_MATCH","UPDATE_MATCH","GET_VAULTS","ADD_VAULT","DELETE_VAULT","UPDATE_VAULT","GET_ABYSS","ADD_ABYSS","DELETE_ABYSS","UPDATE_ABYSS","GET_UNIVERSES","ADD_UNIVERSE","DELETE_UNIVERSE","UPDATE_UNIVERSE","GET_BOSSES","ADD_BOSS","DELETE_BOSS","UPDATE_BOSS","GET_TEAMS","ADD_TEAM","DELETE_TEAM","UPDATE_TEAM","GET_GAMES","ADD_GAME","DELETE_GAME","UPDATE_GAME","GET_GODS","ADD_GOD","DELETE_GOD","UPDATE_GOD","GET_SESSIONS","ADD_SESSION","DELETE_SESSION","UPDATE_SESSION","initialState","isAuthenticated","loading","user","arms","alert","bosses","cards","games","matches","pets","sessions","teams","titles","universes","abyss","vaults","combineReducers","auth","state","action","type","payload","gods","middleWare","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","logout","dispatch","a","axios","get","res","console","log","loadUser","data","error","Spinner","alt","src","spinner","style","width","margin","display","position","right","connect","login","then","catch","err","window","location","href","withRouter","history","useEffect","push","className","logo","Form","onSubmit","e","preventDefault","value","arm","useState","setArm","ARM","ability","Object","keys","ABILITIES","infliction","card","setCard","CARD","PATH","HLT","STAM","title","settitle","TITLE","pet","setPet","updated_disname","DISNAME","replace","selectedPet","petList","PETS","PET","values","power","LVL","BOND","to","onClick","document","body","classList","toggle","as","Dropdown","alignRight","Toggle","Trans","NAME","AVATAR","Menu","Divider","Item","evt","querySelector","props","menuState","setMenuState","onRouteChanged","remove","forEach","i","path","obj","isPathActive","pathname","startsWith","querySelectorAll","el","addEventListener","contains","add","id","IS_ADMIN","cardInitialState","RPATH","GIF","RNAME","PRICE","TOURNAMENT_REQUIREMENTS","MOVESET","ATK","DEF","TYPE","TIER","PASS","SPD","VUL","UNIVERSE","COLLECTION","HAS_COLLECTION","STOCK","AVAILABLE","DESCRIPTIONS","EXCLUSIVE","armInitialState","universeInitialState","CROWN_TALES","HAS_CROWN_TALES","PREREQUISITE","UTITLE","UARM","DTITLE","DARM","DPET","UPET","UNIVERSE_BOSS","abyssInitialState","FLOOR","ENEMIES","BANNED_CARDS","BANNED_TITLES","BANNED_ARMS","BANNED_UNIVERSES","BANNED_TIERS","BANNED_PETS","SPECIAL_BUFF","titleInitialState","petInitialState","enhancements","arm_enhancements","saveCard","post","universe","setUniverse","DESC","TEXT","desc","setData","validated","setValidated","show","setShow","ABILITY","POWER","PASSIVE_TYPE","passive","setPassive","pass_ability","toString","pass_power","pass_type","passive_Object","MOVE1_ABILITY","MOVE1_POWER","MOVE2_ABILITY","MOVE2_POWER","MOVE3_ABILITY","MOVE3_POWER","ENHANCER_ABILITY","ENHANCER_POWER","ENHANCEMENT_TYPE","moves","setMoves","move1Object","move2Object","move3Object","enhancerObject","onChangeHandler","target","name","valueAsNumber","checked","radio","currentTarget","passiveHandler","moveHandler","universeSelector","map","label","universeHandler","enhancementSelector","enhancement","submission_alert_dom","Alert","variant","onSubmitHandler","checkValidity","stopPropagation","card_update_data","setTimeout","styleSheet","input","base","color","noValidate","Row","Group","Col","md","controlId","Label","onChange","options","styles","Control","Feedback","required","disabled","sm","Check","hidden","Boolean","Button","updateCard","deleteCard","delete","cardData","setCardData","modalShow","setModalShow","handleClose","cardSelector","cardHandler","passive_ability","passive_power","passive_enhancement","move1_abilit","move1_powe","move2_abilit","move2_powe","move3_abilit","move3_powe","move_enhancer_abilit","move_enhancer_powe","move_enhancer_typ","movesArray","onDeleteHandler","Modal","onHide","Header","closeButton","Title","Footer","updateArm","deleteArm","armData","setArmData","ABILITY_TYPE","setAbility","abililty_Object","armSelector","armHandler","abilities_Object","arm_update_data","saveArm","saveUniverse","updateUniverse","deleteUniverse","universePrereqSelector","universePrereqHandler","updateTitle","deleteTitle","titleData","setTitleData","titleSelector","titleHandler","title_update_data","saveTitle","saveAbyss","setTitle","tier","UNI_TIER","tiers","bannedUniverseHandler","uniList","uni","includes","tierSelector","tierHandler","tierList","ti","petSelector","enemyPetHandler","bannedPetHandler","p","enemyTitleHandler","bannedTitleHandler","titleList","t","enemyArmHandler","bannedArmHandler","armList","enemyHandler","enemyList","bannedCardsHandler","cardList","c","classNamePrefix","isMulti","updateAbyss","abyssData","setAbyssUpdate","abyssFloorSelector","floorHandler","floor","updatePet","deletePet","petData","setPetData","ability_Object","abilityHandler","petHandler","ability_ability","ability_power","ability_enhancement","pet_update_data","savePet","ability_type","App","component","Sidebar","Navbar","exact","Login","Landing","NewCard","UpdateCard","NewArm","UpdateArm","NewAbyss","UpdateAbyss","NewUniverse","UpdateUniverse","NewTitle","UpdateTitle","NewPet","UpdatePet","ReactDOM","render","getElementById"],"mappings":"oOACaA,EAAgB,gBAEhBC,EAAS,SAOTC,EAAc,cAEdC,EAAgB,gBAChBC,EAAW,WACXC,EAAW,WACXC,EAAc,cACdC,EAAc,cAEdC,EAAW,WACXC,EAAU,UACVC,EAAa,aACbC,EAAa,aAEbC,EAAa,aACbC,EAAY,YACZC,EAAe,eACfC,EAAe,eAEfC,EAAW,WACXC,EAAU,UACVC,EAAa,aACbC,EAAa,aAGbC,EAAc,cACdC,EAAY,YACZC,EAAe,eACfC,EAAe,eAEfC,EAAa,aACbC,EAAY,YACZC,EAAe,eACfC,EAAe,eAEfC,EAAY,YACZC,EAAY,YACZC,EAAe,eACfC,EAAe,eAEfC,EAAgB,gBAChBC,EAAe,eACfC,EAAkB,kBAClBC,EAAkB,kBAElBC,EAAa,aACbC,EAAW,WACXC,EAAc,cACdC,EAAc,cAEdC,EAAY,YACZC,EAAW,WACXC,EAAc,cACdC,GAAc,cAEdC,GAAY,YACZC,GAAW,WACXC,GAAc,cACdC,GAAc,cAEdC,GAAW,WACXC,GAAU,UACVC,GAAa,aACbC,GAAa,aAEbC,GAAe,eACfC,GAAc,cACdC,GAAiB,iBACjBC,GAAiB,iBCrEtBC,GAAe,CACnBC,iBAAiB,EACjBC,SAAS,EACTC,KAAM,MCJJH,GAAe,CACjBI,KAAM,KACNF,SAAS,EACTG,MAAO,MCHLL,GAAe,CACjBM,OAAQ,KACRJ,SAAS,EACTG,MAAO,MCFLL,GAAe,CACjBO,MAAO,KACPL,SAAS,EACTG,MAAO,KACPJ,gBAAiB,MCLfD,GAAe,CACjBQ,MAAO,KACPN,SAAS,EACTG,MAAO,MCHLL,GAAe,CACjBM,OAAQ,KACRJ,SAAS,EACTG,MAAO,MCHLL,GAAe,CACjBS,QAAS,KACTP,SAAS,EACTG,MAAO,MCHLL,GAAe,CACjBU,KAAM,KACNR,SAAS,EACTG,MAAO,MCHLL,GAAe,CACjBW,SAAU,KACVT,SAAS,EACTG,MAAO,MCHLL,GAAe,CACjBY,MAAO,KACPV,SAAS,EACTG,MAAO,MCHLL,GAAe,CACjBa,OAAQ,KACRX,SAAS,EACTG,MAAO,MCHLL,GAAe,CACjBc,UAAW,KACXZ,SAAS,EACTG,MAAO,MCHLL,GAAe,CACjBe,MAAO,KACPb,SAAS,EACTG,MAAO,MCHLL,GAAe,CACjBgB,OAAQ,KACRd,SAAS,EACTG,MAAO,MCMIY,6BAAgB,CAC3BC,KdHa,WAAyC,IAA/BC,EAA8B,uDAAtBnB,GAAcoB,EAAQ,uCAC7CC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QACd,OAAQD,GACN,KAAK3E,EACH,OAAO,2BAAKyE,GAAZ,IAAmBlB,iBAAiB,EAAMC,SAAS,EAAOC,KAAMmB,IAElE,KAAK9E,EACH,OAAO,uCAAK2E,GAAUG,GAAtB,IAA+BrB,iBAAiB,EAAMC,SAAS,IACjE,KAAKzD,EACH,OAAO,2BAAK0E,GAAZ,IAAmBlB,iBAAiB,EAAOC,SAAS,IACtD,QACE,OAAOF,KcPXI,KbLW,WAAyC,IAA/Be,EAA8B,uDAAtBnB,GAAcoB,EAAQ,uCAC3CC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QACd,OAAQD,GACJ,KAAK7D,EACD,OAAO,2BAAK2D,GAAZ,IAAmBf,KAAMkB,EAASpB,SAAS,IAC/C,KAAKzC,EAEL,KAAKC,EAEL,KAAKC,EACD,OAAO,2BAAKwD,GAAZ,IAAmBd,MAAOiB,IAC9B,QACI,OAAOtB,KaNfM,OZNW,WAAyC,IAA/Ba,EAA8B,uDAAtBnB,GAAcoB,EAAQ,uCAC3CC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QACd,OAAQD,GACJ,KAAKzC,EACD,OAAO,2BAAKuC,GAAZ,IAAmBb,OAAQgB,EAASpB,SAAS,IACjD,KAAKrB,EAEL,KAAKC,EAEL,KAAKC,EACD,OAAO,2BAAKoC,GAAZ,IAAmBd,MAAOiB,IAC9B,QACI,OAAOtB,KYLfO,MXLW,WAAyC,IAA/BY,EAA8B,uDAAtBnB,GAAcoB,EAAQ,uCAC3CC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QACd,OAAQD,GACJ,KAAK1E,EAEL,KAAKC,EACD,OAAO,2BAAKuE,GAAZ,IAAmBZ,MAAOe,EAASpB,SAAS,EAAOD,iBAAiB,IACxE,KAAKpD,EAEL,KAAKC,EAEL,KAAKC,EACD,OAAO,2BAAKoE,GAAZ,IAAmBd,MAAOiB,IAC9B,QACI,OAAOtB,KWRfQ,MVRW,WAAyC,IAA/BW,EAA8B,uDAAtBnB,GAAcoB,EAAQ,uCAC3CC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QACd,OAAQD,GACJ,KAAKjC,GACD,OAAO,2BAAK+B,GAAZ,IAAmBX,MAAOc,EAASpB,SAAS,IAChD,KAAKb,GAEL,KAAKC,GAEL,KAAKC,GACD,OAAO,2BAAK4B,GAAZ,IAAmBd,MAAOiB,IAC9B,QACI,OAAOtB,KUHfuB,KTTW,WAAyC,IAA/BJ,EAA8B,uDAAtBnB,GAAcoB,EAAQ,uCAC3CC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QACd,OAAQD,GACJ,KAAK7B,GACD,OAAO,2BAAK2B,GAAZ,IAAmBb,OAAQgB,EAASpB,SAAS,IACjD,KAAKT,GAEL,KAAKC,GAEL,KAAKC,GACD,OAAO,2BAAKwB,GAAZ,IAAmBd,MAAOiB,IAC9B,QACI,OAAOtB,KSFfS,QRVW,WAAyC,IAA/BU,EAA8B,uDAAtBnB,GAAcoB,EAAQ,uCAC3CC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QACd,OAAQD,GACJ,KAAKzD,EACD,OAAO,2BAAKuD,GAAZ,IAAmBV,QAASa,EAASpB,SAAS,IAClD,KAAKrC,EAEL,KAAKC,EAEL,KAAKC,EACD,OAAO,2BAAKoD,GAAZ,IAAmBd,MAAOiB,IAC9B,QACI,OAAOtB,KQDfU,KPXW,WAAyC,IAA/BS,EAA8B,uDAAtBnB,GAAcoB,EAAQ,uCAC3CC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QACd,OAAQD,GACJ,KAAKrE,EACD,OAAO,2BAAKmE,GAAZ,IAAmBT,KAAMY,EAASpB,SAAS,IAC/C,KAAKjD,EAEL,KAAKC,EAEL,KAAKC,EACD,OAAO,2BAAKgE,GAAZ,IAAmBd,MAAOiB,IAC9B,QACI,OAAOtB,KOAfW,SNZW,WAAyC,IAA/BQ,EAA8B,uDAAtBnB,GAAcoB,EAAQ,uCAC3CC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QACd,OAAQD,GACJ,KAAKzB,GACD,OAAO,2BAAKuB,GAAZ,IAAmBR,SAAUW,EAASpB,SAAS,IACnD,KAAKL,GAEL,KAAKC,GAEL,KAAKC,GACD,OAAO,2BAAKoB,GAAZ,IAAmBd,MAAOiB,IAC9B,QACI,OAAOtB,KMCfY,MLbW,WAAyC,IAA/BO,EAA8B,uDAAtBnB,GAAcoB,EAAQ,uCAC3CC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QACd,OAAQD,GACJ,KAAKrC,EACD,OAAO,2BAAKmC,GAAZ,IAAmBP,MAAOU,EAASpB,SAAS,IAChD,KAAKjB,EAEL,KAAKC,EAEL,KAAKC,GACD,OAAO,2BAAKgC,GAAZ,IAAmBd,MAAOiB,IAC9B,QACI,OAAOtB,KKEfa,OJdW,WAAyC,IAA/BM,EAA8B,uDAAtBnB,GAAcoB,EAAQ,uCAC3CC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QACd,OAAQD,GACJ,KAAKjE,EACD,OAAO,2BAAK+D,GAAZ,IAAmBN,OAAQS,EAASpB,SAAS,IACjD,KAAK7C,EAEL,KAAKC,EAEL,KAAKC,EACD,OAAO,2BAAK4D,GAAZ,IAAmBd,MAAOiB,IAC9B,QACI,OAAOtB,KIGfc,UHfW,WAAyC,IAA/BK,EAA8B,uDAAtBnB,GAAcoB,EAAQ,uCAC3CC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QACd,OAAQD,GACJ,KAAK7C,EACD,OAAO,2BAAK2C,GAAZ,IAAmBL,UAAWQ,EAASpB,SAAS,IACpD,KAAKzB,EAEL,KAAKC,EAEL,KAAKC,EACD,OAAO,2BAAKwC,GAAZ,IAAmBd,MAAOiB,IAC9B,QACI,OAAOtB,KGIfgB,ODhBW,WAAyC,IAA/BG,EAA8B,uDAAtBnB,GAAcoB,EAAQ,uCAC3CC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QACd,OAAQD,GACJ,KAAKrD,EACD,OAAO,2BAAKmD,GAAZ,IAAmBH,OAAQM,EAASpB,SAAS,IACjD,KAAKjC,EAEL,KAAKC,EAEL,KAAKC,EACD,OAAO,2BAAKgD,GAAZ,IAAmBd,MAAOiB,IAC9B,QACI,OAAOtB,KCKfe,MFjBW,WAAyC,IAA/BI,EAA8B,uDAAtBnB,GAAcoB,EAAQ,uCAC3CC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,QACd,OAAQD,GACJ,KAAKjD,EACD,OAAO,2BAAK+C,GAAZ,IAAmBJ,MAAOO,EAASpB,SAAS,IAChD,KAAK7B,EAEL,KAAKC,EAEL,KAAKC,EACD,OAAO,2BAAK4C,GAAZ,IAAmBd,MAAOiB,IAC9B,QACI,OAAOtB,OGlBbwB,GAAa,CAACC,KAQLC,GANDC,sBACZC,GALmB,GAOnBC,8BAAoBC,kBAAe,WAAf,EAAmBN,M,iECe5BO,GAAS,2DAAM,WAAOC,GAAP,gBAAAC,EAAA,+EAEFC,KAAMC,IAAI,gBAFR,OAEdC,EAFc,OAGpBC,QAAQC,IAAIF,GACZJ,EAAS,CACLX,KAAM5E,EACN6E,QAASc,IANO,gDAUpBC,QAAQC,IAAR,MAVoB,yDAAN,uDAeTC,GAAW,2DAAM,WAAOP,GAAP,gBAAAC,EAAA,+EAEJC,KAAMC,IAAI,cAFN,OAEhBC,EAFgB,OAGtBJ,EAAS,CACLX,KAAM3E,EACN4E,QAASc,EAAII,OALK,gDAQtBH,QAAQI,MAAR,MACAT,EAAS,CACLX,KjBpDc,eiB0CI,yDAAN,uD,mBC1CT,OAA0B,qCCA1B,OAA0B,oCCe1BqB,GAZC,WACZ,OACI,6BACI,yBACIC,IAAI,UACJC,IAAKC,GACLC,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAAQC,QAAS,QAASC,SAAU,WAAYC,MAAO,aC8DzFC,iBAJS,SAACjC,GAAD,MAAY,CAClCD,KAAMC,EAAMD,QAG0B,CAAEmC,MJ5DrB,2DAAM,WAAOrB,GAAP,UAAAC,EAAA,sDACvB,IACIC,KAAMC,IAAI,SACLmB,MAAK,SAAClB,GACHC,QAAQC,IAAIF,MAEfmB,OAAM,SAACC,GACJC,OAAOC,SAASC,KKlBZ,qMLmBJtB,QAAQC,IAAI,0BAEtB,MAAOkB,GACLnB,QAAQC,IAAIkB,GAXO,2CAAN,wDI4DNJ,CAAoCQ,cA9DrC,SAAC,GAA8B,IAA5BP,EAA2B,EAA3BA,MAAOnC,EAAoB,EAApBA,KAAM2C,EAAc,EAAdA,QAE5BC,qBAAU,WACJ5C,EAAKjB,iBACP4D,EAAQE,KAAK,OAEd,CAAC7C,IAOJ,OAAOA,EAAKjB,gBACV,kBAAC,GAAD,MAEE,6BACE,yBAAK+D,UAAU,kDACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,oCACb,yBAAKA,UAAU,cACb,yBACEpB,IAAKqB,GACLtB,IAAI,UAGR,iDACA,wBAAIqB,UAAU,qBAAd,uBACA,kBAACE,GAAA,EAAD,CAAMF,UAAU,OAAOG,SArBpB,SAACC,GAChBA,EAAEC,iBACFhB,MAoBc,yBAAKW,UAAU,QACb,4BACE3C,KAAK,SACLiD,MAAM,QACNN,UAAU,qEAHZ,sB,QEaLZ,iBALS,SAACjC,GAAD,MAAY,CAChCoD,IAAKpD,EAAMf,KACXc,KAAMC,EAAMD,QAGDkC,EAjDI,SAAC,GAAY,IAAXZ,EAAU,EAAVA,KACVtC,EAAiBsC,EAAjBtC,QAASC,EAAQqC,EAARrC,KAChB,EAAsBqE,mBAAS,CAC3BD,IAAK,GACLrE,SAAS,IAFb,oBAAOqE,EAAP,KAAYE,EAAZ,KAaA,GATAX,qBAAU,WACF5D,GACAgC,KAAMC,IAAN,sBAAyBhC,EAAKqC,KAAKkC,MAC9BpB,MAAK,SAAClB,GACHqC,EAAO,CAACF,IAAKnC,EAAKlC,SAAS,SAGxC,KAECqE,EAAIrE,QACJ,IAAIyE,EAAUC,OAAOC,KAAKN,EAAIA,IAAI/B,KAAKsC,UAAU,IAAI,GACjDC,EAAaR,EAAIA,IAAI/B,KAAKsC,UAAU,GAAGH,GAE/C,OAAOzE,GAAWqE,EAAIrE,QAAU,8BAC5B,yBAAK8D,UAAU,gEACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAd,OACA,yBAAKA,UAAU,YACX,yBAAKA,UAAU,eACX,uBAAGA,UAAU,wCAEjB,yBAAKA,UAAU,cACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,iDAAiDO,EAAIA,IAAI/B,KAAKkC,QAIxF,uBAAGV,UAAU,wBACT,uBAAGA,UAAU,qBAAqB,cAAY,SAC7CW,EAFL,MAEiBI,SCGtB3B,iBALS,SAACjC,GAAD,MAAY,CAChC6D,KAAM7D,EAAMZ,MACZW,KAAMC,EAAMD,QAGDkC,EAvCK,SAAC,GAAY,IAAXZ,EAAU,EAAVA,KACXtC,EAAiBsC,EAAjBtC,QAASC,EAAQqC,EAARrC,KAChB,EAAwBqE,mBAAS,CAC7BQ,KAAM,GACN9E,SAAS,IAFb,oBAAO8E,EAAP,KAAaC,EAAb,KAaA,OATAnB,qBAAU,WACF5D,GACAgC,KAAMC,IAAN,uBAA0BhC,EAAKqC,KAAK0C,OAC/B5B,MAAK,SAAClB,GACH6C,EAAQ,CAACD,KAAM5C,EAAKlC,SAAS,SAG1C,IAEIA,GAAW8E,EAAK9E,QAAU,8BAC7B,yBAAK8D,UAAU,gEACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,WAAWpB,IAAKoC,EAAKA,KAAKxC,KAAK2C,OAC9C,yBAAKnB,UAAU,aACX,yBAAKA,UAAU,YACX,wBAAIA,UAAU,cAAc7D,EAAKqC,KAAK0C,OAE1C,uBAAGlB,UAAU,wBACT,uBAAGA,UAAU,qBAAqB,cAAY,SADlD,WACsEgB,EAAKA,KAAKxC,KAAK4C,IACjF,6BACA,uBAAGpB,UAAU,qBAAqB,cAAY,SAHlD,YAGuEgB,EAAKA,KAAKxC,KAAK6C,YCuB3FjC,iBALS,SAACjC,GAAD,MAAY,CAChCmE,MAAOnE,EAAMN,OACbK,KAAMC,EAAMD,QAGDkC,EAjDM,SAAC,GAAY,IAAXZ,EAAU,EAAVA,KACZtC,EAAiBsC,EAAjBtC,QAASC,EAAQqC,EAARrC,KAChB,EAA0BqE,mBAAS,CAC/Bc,MAAO,GACPpF,SAAS,IAFb,oBAAOoF,EAAP,KAAcC,EAAd,KAaA,GATAzB,qBAAU,WACF5D,GACAgC,KAAMC,IAAN,wBAA2BhC,EAAKqC,KAAKgD,QAChClC,MAAK,SAAClB,GACHmD,EAAS,CAACD,MAAOlD,EAAKlC,SAAS,SAG5C,KAECoF,EAAMpF,QACN,IAAIyE,EAAUC,OAAOC,KAAKS,EAAMA,MAAM9C,KAAKsC,UAAU,IAAI,GACrDC,EAAaO,EAAMA,MAAM9C,KAAKsC,UAAU,GAAGH,GAEnD,OAAOzE,GAAWoF,EAAMpF,QAAU,8BAC9B,yBAAK8D,UAAU,gEACX,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAd,SACA,yBAAKA,UAAU,YACX,yBAAKA,UAAU,eACX,uBAAGA,UAAU,wCAEjB,yBAAKA,UAAU,cACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,iDAAiDsB,EAAMA,MAAM9C,KAAKgD,UAI5F,uBAAGxB,UAAU,wBACT,uBAAGA,UAAU,qBAAqB,cAAY,SAC7CW,EAFL,MAEiBI,SCmBtB3B,iBALS,SAACjC,GAAD,MAAY,CAChC6D,KAAM7D,EAAMZ,MACZW,KAAMC,EAAMD,QAGDkC,EAvDI,SAAC,GAAY,IAAXZ,EAAU,EAAVA,KACVtC,EAAiBsC,EAAjBtC,QAASC,EAAQqC,EAARrC,KAChB,EAAsBqE,mBAAS,CAC3BiB,IAAK,GACLvF,SAAS,IAFb,oBAAOuF,EAAP,KAAYC,EAAZ,KAeA,GAXA5B,qBAAU,WACN,IAAI5D,EAAQ,CACR,IACIyF,EADUxF,EAAKqC,KAAKoD,QACMC,QAAQ,IAAK,OAC3C3D,KAAMC,IAAN,uBAA0BwD,IACrBrC,MAAK,SAAClB,GACHsD,EAAO,CAACD,IAAKrD,EAAKlC,SAAS,UAGxC,KAECuF,EAAIvF,QAAQ,CACZ,IACI4F,EADAC,EAAUN,EAAIA,IAAIjD,KAAKwD,KAE3B,IAAK,IAAIP,KAAOM,EACTA,EAAQN,GAAR,MAAwBtF,EAAKqC,KAAKyD,MACjCH,EAAcC,EAAQN,IAG9B,IAAId,EAAUC,OAAOC,KAAKiB,GAAa,GACnCf,EAAaH,OAAOsB,OAAOJ,GAAa,GACxCK,EAASL,EAAYM,IAAMN,EAAYO,KAAQtB,EAEvD,OAAO7E,GAAWuF,EAAIvF,QAAU,8BAC5B,yBAAK8D,UAAU,gEACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,WAAWpB,IAAKkD,EAAYX,OAC3C,yBAAKnB,UAAU,aACX,yBAAKA,UAAU,YACX,wBAAIA,UAAU,cAAc7D,EAAKqC,KAAKyD,MAE1C,uBAAGjC,UAAU,wBACT,uBAAGA,UAAU,qBAAqB,cAAY,SADlD,UACqE8B,EAAYM,IAC7E,6BACA,uBAAGpC,UAAU,qBAAqB,cAAY,SAHlD,SAGoE8B,EAAYO,KAC5E,6BACA,uBAAGrC,UAAU,qBAAqB,cAAY,SAAYW,EAL9D,MAK0EwB,SCiB/E/C,iBALS,SAACjC,GAAD,MAAY,CAClCD,KAAMC,EAAMD,KACZX,MAAOY,EAAMZ,SAGyB,GAAzB6C,CAA6BQ,cAlD5B,SAAC,GAA6B,IAA3B1C,EAA0B,EAA1BA,KAAa2C,GAAa,EAApBtD,MAAoB,EAAbsD,SAE9B,EAAoCW,oBAAS,GAA7C,8BAgBA,OARAV,qBAAU,WACH5C,EAAKjB,iBACR4D,EAAQE,KAAK,YAEd,CAAC7C,IAKA,6BACE,yBAAK8C,UAAU,OACX,kBAAC,GAAD,CAAaxB,KAAMtB,IACnB,kBAAC,GAAD,CAAYsB,KAAMtB,IAClB,kBAAC,GAAD,CAAcsB,KAAMtB,IACpB,kBAAC,GAAD,CAAYsB,KAAMtB,KAEtB,yBAAK8C,UAAU,OACb,yBAAKA,UAAU,oEACb,yBAAKA,UAAU,gC,oBCyFZZ,iBAJS,SAACjC,GAAD,MAAY,CAClCD,KAAMC,EAAMD,QAG0B,CAAEa,WAA3BqB,CAAqCQ,cAtHrC,SAAC,GAA+B,IAA7B1C,EAA4B,EAA5BA,KAAMa,EAAsB,EAAtBA,OAAQ8B,EAAc,EAAdA,QACPA,EAAbH,SAKRI,qBAAU,WACF5C,EAAKjB,iBACL4D,EAAQE,KAAK,YAElB,IAsBH,OAAQ7C,EAAKjB,iBAAoBiB,EAAKf,KAGlC,yBAAK6D,UAAU,wCACX,yBAAKA,UAAU,mFACf,kBAAC,KAAD,CAAMA,UAAU,+BAA+BsC,GAAG,KAC9C,yBACA1D,IAAKqB,GACLtB,IAAI,WAIR,yBAAKqB,UAAU,4DACf,4BACIA,UAAU,mCACV3C,KAAK,SACLkF,QAAS,kBAAMC,SAASC,KAAKC,UAAUC,OAAO,uBAE9C,0BAAM3C,UAAU,kBAEpB,wBAAIA,UAAU,qBAId,wBAAIA,UAAU,+BACV,yBAAK4C,GAAG,KAAK5C,UAAU,8BACvB,yBAAK4C,GAAG,KAAK5C,UAAU,uBAMvB,kBAAC6C,GAAA,EAAD,CAAUC,YAAU,EAACF,GAAG,KAAK5C,UAAU,YACvC,kBAAC6C,GAAA,EAASE,OAAV,CACIH,GAAG,IACH5C,UAAU,oCAEV,yBAAKA,UAAU,kBACf,uBAAGA,UAAU,8CACP9C,EAAKjB,gBAAkB,kBAAC+G,GAAA,EAAD,KAAQ9F,EAAKf,KAAKqC,KAAKyE,MAAgB,yCAC9D/F,EAAKjB,gBAAkB,yBAAK2C,IAAK1B,EAAKf,KAAKqC,KAAK0E,OAAQlD,UAAU,oCAA2C,gCAEnH,uBAAGA,UAAU,0CAIjB,kBAAC6C,GAAA,EAASM,KAAV,CAAenD,UAAU,6DACrB,kBAAC6C,GAAA,EAASO,QAAV,MACA,kBAACP,GAAA,EAASQ,KAAV,CACA1D,KAAK,KACL4C,QAAS,SAACe,GAAD,OAASA,EAAIjD,kBACtBL,UAAU,gBAEV,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,uCACf,uBAAGA,UAAU,iCAGjB,yBAAKA,UAAU,wBACX,uBAAGA,UAAU,uBAAuBuC,QAzErC,SAACnC,GAChBA,EAAEC,iBACFtC,MAwEgB,kBAAC,KAAD,CAAMuE,GAAG,SAAStC,UAAU,YAAW,kBAACgD,GAAA,EAAD,oBAI3C,kBAACH,GAAA,EAASO,QAAV,SAKR,4BACIpD,UAAU,kEACV3C,KAAK,SACLkF,QAtGY,WACpBC,SAASe,cAAc,sBAAsBb,UAAUC,OAAO,YAuGtD,0BAAM3C,UAAU,mCAzExB,kC,SCkTOZ,iBAJS,SAACjC,GAAD,MAAY,CAClCD,KAAMC,EAAMD,QAG0B,CAAEa,WAA3BqB,CAAqCQ,cAvVpC,SAAC4D,GACf,IAAQtG,EAASsG,EAATtG,KAER,EAAkCsD,mBAAS,IAA3C,oBAAOiD,EAAP,KAAkBC,EAAlB,KAGMC,EAAiB,WACrBnB,SAASe,cAAc,YAAYb,UAAUkB,OAAO,UACpDhD,OAAOC,KAAK4C,GAAWI,SAAQ,SAACC,GAC9BJ,EAAa,gBAAGI,GAAI,OAGA,CACpB,CAAEC,KAAM,QAAS5G,MAAO,gBACxB,CAAE4G,KAAM,YAAa5G,MAAO,mBAC5B,CAAE4G,KAAM,eAAgB5G,MAAO,sBAC/B,CAAE4G,KAAM,iBAAkB5G,MAAO,wBACjC,CAAE4G,KAAM,UAAW5G,MAAO,kBAC1B,CAAE4G,KAAM,QAAS5G,MAAO,gBACxB,CAAE4G,KAAM,SAAU5G,MAAO,iBACzB,CAAE4G,KAAM,UAAW5G,MAAO,kBAC1B,CAAE4G,KAAM,cAAe5G,MAAO,qBAC9B,CAAE4G,KAAM,eAAgB5G,MAAO,sBAC/B,CAAE4G,KAAM,iBAAkB5G,MAAO,wBACjC,CAAE4G,KAAM,aAAc5G,MAAO,0BAC7B,CAAE4G,KAAM,WAAY5G,MAAO,oBAGf0G,SAAQ,SAACG,GACjBC,EAAaD,EAAID,OACnBL,EAAa,gBAAGM,EAAI7G,OAAQ,QAK5B8G,EAAe,SAACF,GACpB,OAAOP,EAAM9D,SAASwE,SAASC,WAAWJ,IAmC5C,OAhCAjE,qBAAU,WACR,GAAI5C,EAAKf,KAAM,CACbwH,IAEA,IAAMlB,EAAOD,SAASe,cAAc,QACpCf,SAAS4B,iBAAiB,sBAAsBP,SAAQ,SAACQ,GACvDA,EAAGC,iBAAiB,aAAa,WAC3B7B,EAAKC,UAAU6B,SAAS,sBAC1BF,EAAG3B,UAAU8B,IAAI,iBAGrBH,EAAGC,iBAAiB,YAAY,WAC1B7B,EAAKC,UAAU6B,SAAS,sBAC1BF,EAAG3B,UAAUkB,OAAO,uBAM3B,IAEH9D,qBAAU,WACJ5C,EAAKf,MACHqH,EAAM9D,SAASwE,WAAaV,EAAM3D,QAAQH,SAASwE,UACrDP,MAIH,IAIKzG,EAAKjB,iBAAoBiB,EAAKf,KAGlC,yBAAK6D,UAAU,4BAA4ByE,GAAG,WAC5C,yBAAKzE,UAAU,8FACb,uBAAGA,UAAU,2BAA2BL,KAAK,KAA7C,qBAGA,uBAAGK,UAAU,gCAAgCL,KAAK,KAChD,yBACEf,IAAKqB,GACLtB,IAAI,WAIV,wBAAIqB,UAAU,OACZ,wBAAIA,UAAU,oBACZ,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,gBACb,wBAAIA,UAAU,2BACX9C,EAAKjB,gBAAkB,kBAAC+G,GAAA,EAAD,KAAQ9F,EAAKf,KAAKqC,KAAKyE,MAAgB,0CAEjE,8BACE,kBAACD,GAAA,EAAD,0BAKR,wBAAIhD,UAAU,yBACZ,0BAAMA,UAAU,YACd,kBAACgD,GAAA,EAAD,qBAGJ,wBACEhD,UACEiE,EAAa,KACT,6BACA,uBAGN,kBAAC,KAAD,CAAMjE,UAAU,WAAWsC,GAAG,KAC5B,0BAAMtC,UAAU,aACd,uBAAGA,UAAU,yBAEf,0BAAMA,UAAU,cACd,kBAACgD,GAAA,EAAD,mBAIN,wBACEhD,UACEiE,EAAa,WACT,6BACA,uBAGN,kBAAC,KAAD,CAAMjE,UAAU,WAAWsC,GAAG,WAC5B,0BAAMtC,UAAU,aACd,uBAAGA,UAAU,oBAEf,0BAAMA,UAAU,cAAhB,YAIJ,wBACEA,UACEiE,EAAa,UACT,6BACA,uBAGN,kBAAC,KAAD,CAAMjE,UAAU,WAAWsC,GAAG,UAC5B,0BAAMtC,UAAU,aACd,uBAAGA,UAAU,qBAEf,0BAAMA,UAAU,cACd,kBAACgD,GAAA,EAAD,iBAKN,wBACEhD,UACEiE,EAAa,WACT,6BACA,uBAGN,kBAAC,KAAD,CAAMjE,UAAU,WAAWsC,GAAG,WAC5B,0BAAMtC,UAAU,aACd,uBAAGA,UAAU,8BAEf,0BAAMA,UAAU,cACd,kBAACgD,GAAA,EAAD,kBAKN,wBACEhD,UACEiE,EAAa,SACT,6BACA,uBAGN,kBAAC,KAAD,CAAMjE,UAAU,WAAWsC,GAAG,SAC5B,0BAAMtC,UAAU,aACd,uBAAGA,UAAU,qBAEf,0BAAMA,UAAU,cACd,kBAACgD,GAAA,EAAD,gBAKN,wBACEhD,UACEiE,EAAa,SACT,6BACA,uBAGN,kBAAC,KAAD,CAAMjE,UAAU,WAAWsC,GAAG,SAC5B,0BAAMtC,UAAU,aACd,uBAAGA,UAAU,qBAEf,0BAAMA,UAAU,cACd,kBAACgD,GAAA,EAAD,gBAIN,wBACEhD,UACEiE,EAAa,UACT,6BACA,uBAGN,kBAAC,KAAD,CAAMjE,UAAU,WAAWsC,GAAG,UAC5B,0BAAMtC,UAAU,aACd,uBAAGA,UAAU,qBAEf,0BAAMA,UAAU,cACd,kBAACgD,GAAA,EAAD,iBAKL9F,EAAKf,KAAKqC,KAAKkG,SAChB,wBACE1E,UACEiE,EAAa,YACT,6BACA,uBAGN,kBAAC,KAAD,CAAMjE,UAAU,WAAWsC,GAAG,YAC5B,0BAAMtC,UAAU,aACd,uBAAGA,UAAU,qBAEf,0BAAMA,UAAU,cACd,kBAACgD,GAAA,EAAD,oBAIJ,+BAED9F,EAAKf,KAAKqC,KAAKkG,SAChB,wBACE1E,UACEiE,EAAa,WACT,6BACA,uBAGN,kBAAC,KAAD,CAAMjE,UAAU,WAAWsC,GAAG,WAC5B,0BAAMtC,UAAU,aACd,uBAAGA,UAAU,qBAEf,0BAAMA,UAAU,cACd,kBAACgD,GAAA,EAAD,mBAIJ,+BAED9F,EAAKf,KAAKqC,KAAKkG,SAChB,wBACE1E,UACEiE,EAAa,WACT,6BACA,uBAGN,kBAAC,KAAD,CAAMjE,UAAU,WAAWsC,GAAG,WAC5B,0BAAMtC,UAAU,aACd,uBAAGA,UAAU,qBAEf,0BAAMA,UAAU,cACd,kBAACgD,GAAA,EAAD,mBAIJ,+BAED9F,EAAKf,KAAKqC,KAAKkG,SAChB,wBACE1E,UACEiE,EAAa,aACT,6BACA,uBAGN,kBAAC,KAAD,CAAMjE,UAAU,WAAWsC,GAAG,aAC5B,0BAAMtC,UAAU,aACd,uBAAGA,UAAU,qBAEf,0BAAMA,UAAU,cACd,kBAACgD,GAAA,EAAD,qBAIJ,+BAED9F,EAAKf,KAAKqC,KAAKkG,SAChB,wBACE1E,UACEiE,EAAa,gBACT,6BACA,uBAGN,kBAAC,KAAD,CAAMjE,UAAU,WAAWsC,GAAG,gBAC5B,0BAAMtC,UAAU,aACd,uBAAGA,UAAU,qBAEf,0BAAMA,UAAU,cACd,kBAACgD,GAAA,EAAD,wBAIJ,+BAED9F,EAAKf,KAAKqC,KAAKkG,SAChB,wBACE1E,UACEiE,EAAa,aACT,6BACA,uBAGN,kBAAC,KAAD,CAAMjE,UAAU,WAAWsC,GAAG,aAC5B,0BAAMtC,UAAU,aACd,uBAAGA,UAAU,qBAEf,0BAAMA,UAAU,cACd,kBAACgD,GAAA,EAAD,qBAIJ,iCAnQR,kC,+CC/ES2B,I,OAAmB,CAC5BxD,KAAM,GACNyD,MAAO,GACPC,IAAK,GACL5B,KAAM,GACN6B,MAAO,GACPC,MAAO,KACPC,wBAAyB,EACzBC,QAAS,GACT7D,IAAK,KACLC,KAAM,IACN6D,IAAK,GACLC,IAAK,GACLC,KAAM,EACNC,KAAM,EACNC,KAAM,GACNC,IAAK,EACLC,KAAK,EACLC,SAAU,GACVC,WAAY,MACZC,eAAgB,KAChBC,MAAO,GACPC,WAAW,EACXC,aAAc,GACdC,WAAW,IAGFC,GAAkB,CAC3BtF,IAAK,GACLqE,MAAO,KACPC,wBAAyB,EACzBlE,UAAW,GACX2E,SAAU,GACVC,WAAY,MACZE,MAAO,GACPC,WAAW,EACXE,WAAW,GAGFE,GAAuB,CAChCzE,MAAO,GACPL,KAAM,GACN+E,YAAa,GACbC,iBAAiB,EACjBC,aAAc,GACdC,OAAQ,GACRC,KAAM,GACNC,OAAQ,GACRC,KAAM,GACNnB,KAAM,EACNoB,KAAM,GACNC,KAAM,GACNC,cAAe,IAGNC,GAAoB,CAC7BC,MAAO,EACPC,QAAS,GACTC,aAAc,GACdC,cAAe,GACfC,YAAa,GACbC,iBAAkB,GAClBC,aAAc,GACdC,YAAa,GACb5F,MAAO,GACPd,IAAK,GACLuB,IAAK,GACLoF,aAAc,GAGLC,GAAoB,CAC7B9F,MAAO,GACPuD,MAAO,KACPC,wBAAyB,EACzBlE,UAAW,GACX2E,SAAU,GACVC,WAAY,MACZE,MAAO,GACPC,WAAW,EACXE,WAAW,GAGFwB,GAAkB,CAC3BtF,IAAK,GACLd,KAAM,GACNsE,SAAU,GACVrD,IAAK,EACLtB,UAAW,GACX4E,WAAY,MACZG,WAAW,EACXE,WAAW,GAGFyB,GAAe,CACxB,MACA,MACA,OACA,MACA,OACA,QACA,OACA,SACA,OACA,QACA,OACA,UACA,SACA,SACA,UACA,QACA,OACA,QACA,YACA,SACA,OACA,OACA,QACA,WACA,eAGSC,GAAmB,CAC5B,MACA,MACA,OACA,MACA,eACA,iBACA,WACA,QCgnBWrI,iBALS,SAACjC,GAAD,MAAY,CAChCD,KAAMC,EAAMD,KACZX,MAAOY,EAAMZ,SAGuB,CAACmL,SC9sBjB,SAAC1G,GAAD,gDAAU,WAAOhD,GAAP,gBAAAC,EAAA,sEAE1BI,QAAQC,IAAI0C,GAFc,SAGR9C,KAAMyJ,KAAK,mBAAoB3G,GAHvB,OAGpB5C,EAHoB,OAI1BJ,EAAS,CACLX,KAAMxE,EACNyE,QAASc,IAEbJ,EAASO,MARiB,gDAU1BF,QAAQI,MAAR,MAV0B,yDAAV,wDD8sBTW,EAvuBQ,SAAC,GAAsC,IAArClC,EAAoC,EAApCA,KAAsBwK,GAAc,EAA9BnL,MAA8B,EAAvBsD,QAAuB,EAAd6H,UAC3C,EAAiClH,mBAAS,CACtCoH,SAAU,GACV1L,SAAS,IAFb,oBAAOY,EAAP,KAAkB+K,EAAlB,KAIA,EAAwBrH,mBAAS,CAC7BsH,KAAM,GACNC,KAAM,KAFV,oBAAOC,EAAP,KAKA,GALA,KAKwBxH,mBAASmE,KAAjC,oBAAOnG,EAAP,KAAayJ,EAAb,KACA,EAAkCzH,oBAAS,GAA3C,oBAAO0H,EAAP,KAAkBC,EAAlB,KACA,EAAwB3H,oBAAS,GAAjC,oBAAO4H,EAAP,KAAaC,EAAb,KACA,EAA8B7H,mBAAS,CACnC8H,QAAS,GACTC,MAAO,GACPC,aAAc,KAHlB,oBAAOC,EAAP,KAAgBC,EAAhB,KAMIC,EAAeF,EAAQH,QAAQM,WAC/BC,EAAaJ,EAAQF,MACrBO,EAAYL,EAAQD,aAEpBO,EAAiB,GACrBA,EAFeJ,GAEYE,EAC3BE,EAAc,KAAWD,EAEzB,MAA0BtI,mBAAS,CAC/BwI,cAAe,GACfC,YAAa,KACbC,cAAe,GACfC,YAAa,KACbC,cAAe,GACfC,YAAa,KACbC,iBAAkB,GAClBC,eAAgB,KAChBC,iBAAkB,KATtB,oBAAOC,EAAP,KAAcC,EAAd,KAYIC,EAAc,GACdC,EAAc,GACdC,EAAc,GACdC,EAAiB,GAGd3I,EAA4M3C,EAA5M2C,KAAMyD,EAAsMpG,EAAtMoG,MAAOC,EAA+LrG,EAA/LqG,IAAK5B,EAA0LzE,EAA1LyE,KAAM6B,EAAoLtG,EAApLsG,MAAOC,EAA6KvG,EAA7KuG,MAAyC3D,GAAoI5C,EAAtKwG,wBAAsKxG,EAA7IyG,QAA6IzG,EAApI4C,KAAKC,EAA+H7C,EAA/H6C,KAAM6D,EAAyH1G,EAAzH0G,IAAKC,EAAoH3G,EAApH2G,IAAWE,GAAyG7G,EAA/G4G,KAA+G5G,EAAzG6G,MAAYE,GAA6F/G,EAAnG8G,KAAmG9G,EAA7F+G,KAAoBG,GAAyElH,EAAxFgH,IAAwFhH,EAAnFiH,SAAmFjH,EAAzEkH,YAAYC,GAA6DnH,EAA7DmH,eAC/IqD,IAD4MxK,EAA7CoH,MAA6CpH,EAAtCqH,UAAsCrH,EAA3BsH,aAA2BtH,EAAbuH,UACtD0D,EAAzIT,eAAeC,GAA0HQ,EAA1HR,YAAaC,GAA6GO,EAA7GP,cAAeC,GAA8FM,EAA9FN,YAAaC,GAAiFK,EAAjFL,cAAeC,GAAkEI,EAAlEJ,YAAaC,GAAqDG,EAArDH,iBAAiBE,GAAoCC,EAApCD,iBAAkBD,GAAkBE,EAAlBF,eAC3H,eAAIE,KACHE,EAAYX,IAAiBC,GAC7BU,EAAW,KAAW,GAEtBC,EAAYV,IAAiBC,GAC7BS,EAAW,KAAW,GAEtBC,EAAYT,IAAiBC,GAC7BQ,EAAW,KAAW,GAGtBC,EAAeR,IAAoBC,GACnCO,EAAc,KAAW,GACzBA,EAAc,KAAWN,IAG7B1J,qBAAU,WAKF5C,EAAKhB,SACLgC,KAAMC,IAAI,oBACLmB,MAAK,SAAClB,GACHyJ,EAAY,CAACD,SAAUxJ,EAAII,KAAMtC,SAAS,SAGrD,CAACgB,IAEN,IAAM6M,GAAkB,SAAC3J,GAErB,GADAiI,GAAQ,GACc,WAAlBjI,EAAE4J,OAAO3M,KACT4K,EAAQ,2BACDzJ,GADA,mBAEF4B,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAOE,sBAE3B,IAA0B,IAArB9J,EAAE4J,OAAOG,UAAyC,IAArB/J,EAAE4J,OAAOG,SAAuC,wBAAjB/J,EAAE4J,OAAOC,KAO7EhC,EAAQ,2BACDzJ,GADA,mBAEF4B,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAO1J,aAT+E,CAC7G,IAAM8J,EAA+B,UAAvBhK,EAAEiK,cAAc5F,GAC9BwD,EAAQ,2BACDzJ,GADA,IAEHmH,eAAgByE,OAkC5B/L,QAAQC,IAAI0J,EAAKF,MAEjB,IAcMwC,GAAiB,SAAClK,GACE,WAAlBA,EAAE4J,OAAO3M,KACTqL,EAAW,2BACJD,GADG,mBAELrI,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAOE,iBAG9BxB,EAAW,2BACJD,GADG,mBAELrI,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAO1J,UAKhCiK,GAAc,SAACnK,GACK,WAAlBA,EAAE4J,OAAO3M,KACTqM,EAAS,2BACFD,GADC,mBAEHrJ,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAOE,iBAG9BR,EAAS,2BACFD,GADC,mBAEHrJ,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAO1J,SAIlCqJ,EAAYX,IAAiBC,GAC7BU,EAAW,KAAW,GAEtBC,EAAYV,IAAiBC,GAC7BS,EAAW,KAAW,GAEtBC,EAAYT,IAAiBC,GAC7BQ,EAAW,KAAW,GAGtBC,EAAeR,IAAoBC,GACnCO,EAAc,KAAW,GACzBA,EAAc,KAAWN,IAG7B,IAAI1M,EAAUZ,QACV,IAAIsO,GAAmB1N,EAAU8K,SAAS6C,KAAI,SAAA7C,GAC1C,MAAO,CACHtH,MAAOsH,EAASpG,MAAOkJ,MAAM,GAAD,OAAK9C,EAASpG,WAI9CmJ,GAAkB,SAACvK,GACPA,EAAE,GACdtD,EAAU8K,SAAS6C,KAAI,SAAA7C,GACfxH,EAAEE,QAAUsH,EAASpG,OACrByG,EAAQ,2BACDzJ,GADA,IAEHiH,SAAUmC,EAASpG,aAOvC,IAAIoJ,GAAsBpD,GAAaiD,KAAI,SAAAI,GACvC,MAAO,CACHvK,MAAOuK,EAAaH,MAAM,GAAD,OAAKG,OA8BlCC,GAAuB,kBAACC,GAAA,EAAD,CAAO3C,KAAMA,EAAM4C,QAAQ,WAA3B,IADD,WACC,KACrBC,GAAe,yCAAG,WAAO7K,GAAP,gBAAAnC,EAAA,0DAES,IADhBmC,EAAEiK,cACNa,gBAFW,gBAGhB9K,EAAEC,iBACFD,EAAE+K,kBACF9C,GAAQ,GACRF,GAAa,GANG,8BAQhBA,GAAa,GACb/H,EAAEC,iBAEF4H,EAAQ,2BACDzJ,GADA,IAEHyG,QAAS,CAAC0E,EAAaC,EAAaC,EAAaC,OAGjDsB,EAAmB5M,GACN8G,KAAO,CAACyD,GACzBqC,EAAiBnG,QAAU,CAAC0E,EAAaC,EAAaC,EAAaC,GAlBnD,UAoBEpC,EAASlJ,GApBX,eAsBhByJ,EAAQtD,IACR0G,YAAW,WAAMhD,GAAQ,KAAQ,KAvBjB,4CAAH,sDA4BfiD,GAAa,CACfC,MAAO,SAACC,EAAMrO,GAAP,mBAAC,eACDqO,GADA,IAEHC,MAAO,YAIf,OAAOvO,EAAKhB,SAAWY,EAAUZ,QAC7B,kBAAC,GAAD,MAEI,6BACI,yBAAK8D,UAAU,eACX,wBAAIA,UAAU,cAAd,6BAIJ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,kBAACE,GAAA,EAAD,CAAMwL,YAAU,EAACxD,UAAWA,EAAW/H,SAAU8K,IAC7C,kBAAC/K,GAAA,EAAKyL,IAAN,KACI,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,KAAY,gDACZ,kBAAC,KAAD,CACIC,SAAUtB,GACVuB,QACI1B,GAEJ2B,OAAQb,KAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,sBAGR,kBAACnM,GAAA,EAAKyL,IAAN,KACI,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,aACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOa,EACP8K,SAAUlC,GACVE,KAAK,OACLqC,UAAQ,EACRjP,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAEJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,sBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOsE,EACPqF,KAAK,QACLgC,SAAUlC,GACVuC,UAAQ,EACRjP,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,qBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOuE,EACPoF,KAAK,MACLgC,SAAUlC,GACVuC,UAAQ,EACRjP,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,aACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAO2C,EACPgH,KAAK,OACLgC,SAAUlC,GACVuC,UAAQ,EACRjP,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,sBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOwE,EACPmF,KAAK,QACLgC,SAAUlC,GACV1M,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,cACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOyE,EACPkF,KAAK,QACLgC,SAAUlC,GACVuC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,eACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOc,EACP6I,KAAK,MACLgC,SAAUlC,GACVuC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,gBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACIG,UAAQ,EACRjM,MAAOe,EACP4I,KAAK,OACLgC,SAAUlC,GACVuC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,eACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAO4E,EACP+E,KAAK,MACLgC,SAAUlC,GACVuC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,gBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAO6E,EACP8E,KAAK,MACLgC,SAAUlC,GACVuC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,cACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOiF,EACP0E,KAAK,MACLgC,SAAUlC,GACVuC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,aACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAO+E,EACP4E,KAAK,OACLgC,SAAUlC,GACVuC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,wBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOmI,EAAQH,QACf2B,KAAK,UACLgC,SAAU3B,GACVgC,UAAQ,EACRjP,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,sBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOmI,EAAQF,MACf0B,KAAK,QACLgC,SAAU3B,GACVgC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBACtC,kBAAC7L,GAAA,EAAK8L,MAAN,qBACI,kBAAC,KAAD,CACIC,SA5RZ,SAAC7L,GACjBA,EAAE,GACdoH,GAAaiD,KAAI,SAAAI,GACTzK,EAAEE,QAAUuK,GACZnC,EAAW,2BACJD,GADG,IAEND,aAAcqC,SAuRcqB,QACItB,GAEJ0B,UAAQ,EACRH,OAAQb,KAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,sBACA,kBAACH,GAAA,EAAD,CAAKW,GAAI,IACL,kBAACtM,GAAA,EAAKuM,MAAN,CACAR,SAAUlC,GACV1M,KAAK,QACLqN,MAAM,MACNT,KAAK,uBACLxF,GAAG,OACH0F,SAA8B,IAAnBxE,KAEX,kBAACzF,GAAA,EAAKuM,MAAN,CACAR,SAAUlC,GACV1M,KAAK,QACLqN,MAAM,KACNT,KAAK,uBACLxF,GAAG,QACH0F,SAA8B,IAAnBxE,OAKnB,kBAACzF,GAAA,EAAK0L,MAAN,CAAYc,QAAS/G,GAAgB/C,GAAIiJ,KAAKC,GAAG,KAAKC,UAAU,sBAChE,kBAAC7L,GAAA,EAAK8L,MAAN,gBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACQ9L,MAAOoF,EACPuE,KAAK,aACLgC,SAAUlC,GACV1M,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,sBAMR,kBAACnM,GAAA,EAAKyL,IAAN,KACI,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,KAAKC,UAAU,sBAC/B,kBAAC7L,GAAA,EAAK8L,MAAN,sBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAO0I,GACPiB,KAAK,gBACLgC,SAAU1B,GACV+B,UAAQ,EACRjP,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAGR,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,cACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAO2I,GACPgB,KAAK,cACLgC,SAAU1B,GACV+B,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,KAAKC,UAAU,sBAC/B,kBAAC7L,GAAA,EAAK8L,MAAN,uBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAO4I,GACPe,KAAK,gBACLgC,SAAU1B,GACV+B,UAAQ,EACRjP,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAGR,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,cACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAO6I,GACPc,KAAK,cACLgC,SAAU1B,GACV+B,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,KAAKC,UAAU,sBAC/B,kBAAC7L,GAAA,EAAK8L,MAAN,wBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAO8I,GACPa,KAAK,gBACLgC,SAAU1B,GACV+B,UAAQ,EACRjP,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAGR,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,cACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAO+I,GACPY,KAAK,cACLgC,SAAU1B,GACV+B,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,oBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOgJ,GACPW,KAAK,mBACLgC,SAAU1B,GACV+B,UAAQ,EACRjP,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBACtC,kBAAC7L,GAAA,EAAK8L,MAAN,yBACI,kBAAC,KAAD,CACIC,SA9Zf,SAAC7L,GACdA,EAAE,GACdoH,GAAaiD,KAAI,SAAAI,GACTzK,EAAEE,QAAUuK,GACZnB,EAAS,2BACFD,GADC,IAEJD,iBAAkBqB,SAyZUqB,QACItB,GAEJ0B,UAAQ,EACRH,OAAQb,KAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,cACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOiJ,GACPU,KAAK,iBACLgC,SAAU1B,GACV+B,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,oBAEA,kBAAC9L,GAAA,EAAKkM,QAAN,CACIxJ,GAAG,SACH6B,GAAG,6BACHwH,SA1hBnB,SAAC7L,GACtB6H,EAAQ,2BACDzJ,GADA,IAEHqH,UAAW8G,QAAQvM,EAAE4J,OAAO1J,YAyhBQ,4BAAQA,OAAO,EAAM2J,KAAK,QAA1B,OACA,4BAAQ3J,MAAO,GAAI2J,KAAK,SAAxB,QAIJ,kBAAC/J,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBACtC,kBAAC7L,GAAA,EAAK8L,MAAN,oBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACIxJ,GAAG,SACH6B,GAAG,6BACHwH,SA/hBnB,SAAC7L,GACtB6H,EAAQ,2BACDzJ,GADA,IAEHuH,UAAW4G,QAAQvM,EAAE4J,OAAO1J,YA8hBQ,4BAAQA,OAAO,EAAM2J,KAAK,QAA1B,OACA,4BAAQ3J,MAAO,GAAI2J,KAAK,SAAxB,SAIZ,kBAAC2C,GAAA,EAAD,CAAQvP,KAAK,UAAb,eACA,6BACA,6BACA,kBAAC,KAAD,CAAMiF,GAAG,gBAAe,kBAACsK,GAAA,EAAD,CAAQ5B,QAAQ,WAAhB,iBACxB,6BACA,6BACCF,Y,UEmItB1L,I,MAAAA,cALS,SAACjC,GAAD,MAAY,CAChCD,KAAMC,EAAMD,KACZX,MAAOY,EAAMZ,SAGuB,CAACsQ,WD1wBf,SAAC7L,GAAD,gDAAU,WAAOhD,GAAP,gBAAAC,EAAA,sEAE5BI,QAAQC,IAAI0C,GAFgB,SAGV9C,KAAMyJ,KAAK,sBAAuB3G,GAHxB,OAGtB5C,EAHsB,OAI5BJ,EAAS,CACLX,KAAMxE,EACNyE,QAASc,IAEbJ,EAASO,MARmB,gDAU5BF,QAAQI,MAAR,MAV4B,yDAAV,uDC0wB2BqO,WD5vB3B,SAAC9L,GAAD,gDAAU,WAAOhD,GAAP,gBAAAC,EAAA,+EAGVC,KAAM6O,OAAO,sBAAuB,CAACvO,KAAMwC,IAHjC,OAGtB5C,EAHsB,OAI5BJ,EAAS,CACLX,KAAMvE,EACNwE,QAASc,IAEbJ,EAASO,MARmB,gDAU5BF,QAAQI,MAAR,MAV4B,yDAAV,wDC4vBXW,EAhzBW,SAAC,GAAoD,IAAnDlC,EAAkD,EAAlDA,KAAsB2P,GAA4B,EAA5CtQ,MAA4C,EAArCsD,QAAqC,EAA5BgN,YAAYC,EAAgB,EAAhBA,WAC1D,EAAiCtM,mBAAS,CACtCoH,SAAU,GACV1L,SAAS,IAFb,oBAAOY,EAAP,KAAkB+K,EAAlB,KAIA,EAAgCrH,mBAAS,CACrCtE,SAAS,IADb,oBAAO8Q,EAAP,KAAiBC,EAAjB,KAGA,EAAkCzM,oBAAS,GAA3C,oBAAO0M,EAAP,KAAkBC,EAAlB,KACMC,EAAc,kBAAMD,GAAa,IAEvC,EAAwB3M,mBAASmE,IAAjC,oBAAOnG,EAAP,KAAayJ,EAAb,KACA,EAAkCzH,oBAAS,GAA3C,oBAAO0H,EAAP,KAAkBC,EAAlB,KACA,EAAwB3H,oBAAS,GAAjC,oBAAO4H,EAAP,KAAaC,EAAb,KACA,EAA8B7H,mBAAS,CACnC8H,QAAS,GACTC,MAAO,GACPC,aAAc,KAHlB,oBAAOC,EAAP,KAAgBC,EAAhB,KAKA,EAA0BlI,mBAAS,CAC/BwI,cAAe,KACfC,YAAa,KACbC,cAAe,KACfC,YAAa,KACbC,cAAe,KACfC,YAAa,KACbC,iBAAkB,KAClBC,eAAgB,KAChBC,iBAAkB,OATtB,oBAAOC,EAAP,KAAcC,EAAd,KAYIC,EAAc,GACdC,EAAc,GACdC,EAAc,GACdC,EAAiB,GAGjBnB,EAAeF,EAAQH,QAAQM,WAC/BC,EAAaJ,EAAQF,MACrBO,EAAYL,EAAQD,aAEpBO,EAAiB,GACrBA,EAFeJ,GAEYE,EAC3BE,EAAc,KAAWD,EAEzB,IAAO3H,EAA4M3C,EAA5M2C,KAAMyD,EAAsMpG,EAAtMoG,MAAOC,EAA+LrG,EAA/LqG,IAAK5B,EAA0LzE,EAA1LyE,KAAM6B,EAAoLtG,EAApLsG,MAAOC,EAA6KvG,EAA7KuG,MAAyC3D,IAAoI5C,EAAtKwG,wBAAsKxG,EAA7IyG,QAA6IzG,EAApI4C,KAAKC,GAA+H7C,EAA/H6C,KAAM6D,GAAyH1G,EAAzH0G,IAAKC,GAAoH3G,EAApH2G,IAAWE,IAAyG7G,EAA/G4G,KAA+G5G,EAAzG6G,MAAYE,IAA6F/G,EAAnG8G,KAAmG9G,EAA7F+G,KAAoBG,IAAyElH,EAAxFgH,IAAwFhH,EAAnFiH,SAAmFjH,EAAzEkH,YAAYC,GAA6DnH,EAA7DmH,eAC/IqD,IAD4MxK,EAA7CoH,MAA6CpH,EAAtCqH,UAAsCrH,EAA3BsH,aAA2BtH,EAAbuH,UACtD0D,EAAzIT,eAAeC,GAA0HQ,EAA1HR,YAAaC,GAA6GO,EAA7GP,cAAeC,GAA8FM,EAA9FN,YAAaC,GAAiFK,EAAjFL,cAAeC,GAAkEI,EAAlEJ,YAAaC,GAAqDG,EAArDH,iBAAiBE,GAAoCC,EAApCD,iBAAkBD,GAAkBE,EAAlBF,eAC3H,eAAIE,KACHE,EAAYX,IAAiBC,GAC7BU,EAAW,KAAW,GAEtBC,EAAYV,IAAiBC,GAC7BS,EAAW,KAAW,GAEtBC,EAAYT,IAAiBC,GAC7BQ,EAAW,KAAW,GAGtBC,EAAeR,IAAoBC,GACnCO,EAAc,KAAW,GACzBA,EAAc,KAAWN,IAG7B1J,qBAAU,WACF5C,EAAKhB,UACLgC,KAAMC,IAAI,oBACLmB,MAAK,SAAClB,GACHyJ,EAAY,CAACD,SAAUxJ,EAAII,KAAMtC,SAAS,OAGlDgC,KAAMC,IAAI,gBACLmB,MAAK,SAAClB,GACH6O,EAAY,CAACzO,KAAMJ,EAAII,KAAMtC,SAAS,UAGjD,CAACgB,IAEN,IAAM6M,GAAkB,SAAC3J,GAErB,GADAiI,GAAQ,GACc,WAAlBjI,EAAE4J,OAAO3M,KACT4K,EAAQ,2BACDzJ,GADA,mBAEF4B,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAOE,sBAE3B,IAA0B,IAArB9J,EAAE4J,OAAOG,UAAyC,IAArB/J,EAAE4J,OAAOG,SAAuC,wBAAjB/J,EAAE4J,OAAOC,KAO7EhC,EAAQ,2BACDzJ,GADA,mBAEF4B,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAO1J,aAT+E,CAC7G,IAAM8J,EAA+B,UAAvBhK,EAAEiK,cAAc5F,GAC9BwD,EAAQ,2BACDzJ,GADA,IAEHmH,eAAgByE,OAyBtBE,GAAiB,SAAClK,GACE,WAAlBA,EAAE4J,OAAO3M,KACTqL,EAAW,2BACJD,GADG,mBAELrI,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAOE,iBAG9BxB,EAAW,2BACJD,GADG,mBAELrI,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAO1J,UAchCiK,GAAc,SAACnK,GACK,WAAlBA,EAAE4J,OAAO3M,KACTqM,EAAS,2BACFD,GADC,mBAEHrJ,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAOE,iBAG9BR,EAAS,2BACFD,GADC,mBAEHrJ,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAO1J,UAKtC,IAAIxD,EAAUZ,QACaY,EAAU8K,SAAS6C,KAAI,SAAA7C,GAC1C,MAAO,CACHtH,MAAOsH,EAASpG,MAAOkJ,MAAM,GAAD,OAAK9C,EAASpG,WAiBtD,IAAIoJ,GAAsBpD,GAAaiD,KAAI,SAAAI,GACvC,MAAO,CACHvK,MAAOuK,EAAaH,MAAM,GAAD,OAAKG,OA4BtC,IAAImC,EAAS9Q,QACT,IAAImR,GAAeL,EAASxO,KAAKiM,KAAI,SAAAzJ,GACjC,MAAO,CACHV,MAAOU,EAAKiC,KAAMyH,MAAM,GAAD,OAAK1J,EAAKiC,UAIrCqK,GAAc,SAAClN,GACHA,EAAE,GACd4M,EAASxO,KAAKiM,KAAI,SAAAzJ,GACd,GAAIZ,EAAEE,QAAUU,EAAKiC,KAAM,CAEvB,IAAIsK,EAAkB3M,OAAOC,KAAKG,EAAKsE,KAAK,IAAI,GAC5CkI,EAAgB5M,OAAOsB,OAAOlB,EAAKsE,KAAK,IAAI,GAC5CmI,EAAsBzM,EAAKsE,KAAK,GAAV,KAC1BoD,EAAW,2BACJD,GADG,IAENH,QAASiF,EACThF,MAAOiF,EACPhF,aAAciF,KAIlB,IAAI9E,EAAeF,EAAQH,QAAQM,WAC/BC,EAAaJ,EAAQF,MACrBO,EAAYL,EAAQD,aAEpBO,EAAiB,GACrBA,EAFeJ,GAEYE,EAC3BE,EAAc,KAAWD,EAGzB,IAAI4E,EAAe9M,OAAOC,KAAKG,EAAKiE,QAAQ,IAAI,GAC5C0I,EAAa/M,OAAOsB,OAAOlB,EAAKiE,QAAQ,IAAI,GAC5C2I,EAAehN,OAAOC,KAAKG,EAAKiE,QAAQ,IAAI,GAC5C4I,EAAajN,OAAOsB,OAAOlB,EAAKiE,QAAQ,IAAI,GAE5C6I,EAAelN,OAAOC,KAAKG,EAAKiE,QAAQ,IAAI,GAC5C8I,EAAanN,OAAOsB,OAAOlB,EAAKiE,QAAQ,IAAI,GAE5C+I,EAAwBpN,OAAOC,KAAKG,EAAKiE,QAAQ,IAAI,GACrDgJ,EAAsBrN,OAAOsB,OAAOlB,EAAKiE,QAAQ,IAAI,GACrDiJ,EAAqBtN,OAAOsB,OAAOlB,EAAKiE,QAAQ,IAAI,GAGxDyE,EAAS,2BACFD,GADC,IAEJT,cAAe0E,EACfzE,YAAa0E,EACbzE,cAAe0E,EACfzE,YAAa0E,EACbzE,cAAe0E,EACfzE,YAAa0E,EACbzE,iBAAkB0E,EAClBzE,eAAgB0E,EAChBzE,iBAAkB0E,KAKtB,IAAIvE,EAAc,GACdC,EAAc,GACdC,EAAc,GACdC,EAAiB,GAErBH,EAAY+D,GAAgBC,EAC5BhE,EAAW,KAAW,GAEtBC,EAAYgE,GAAgBC,EAC5BjE,EAAW,KAAW,GAEtBC,EAAYiE,GAAgBC,EAC5BlE,EAAW,KAAW,GAGtBC,EAAekE,GAAwBC,EACvCnE,EAAc,KAAW,GACzBA,EAAc,KAAWoE,EAEzB,IAAIC,EAAa,GACjBA,EAAWpO,KAAK4J,EAAaC,EAAaC,EAAaC,GACvD7B,EAAQ,2BACDzJ,GADA,IAEH2C,KAAMH,EAAKG,KACXyD,MAAO5D,EAAK4D,MACZC,IAAK7D,EAAK6D,IACV5B,KAAMjC,EAAKiC,KACX6B,MAAO9D,EAAK8D,MACZC,MAAO/D,EAAK+D,MACZC,wBAAyBhE,EAAKgE,wBAC9B5D,IAAKJ,EAAKI,IACVC,KAAML,EAAKK,KACX6D,IAAKlE,EAAKkE,IACVC,IAAKnE,EAAKmE,IACVC,KAAMpE,EAAKoE,KACXC,KAAMrE,EAAKqE,KACXE,IAAKvE,EAAKuE,IACVC,IAAKxE,EAAKwE,IACVF,KAAM,CAACyD,GACP9D,QAASkJ,EACT1I,SAAUzE,EAAKyE,SACfC,WAAY1E,EAAK0E,WACjBC,eAAgB3E,EAAK2E,eACrBC,MAAO5E,EAAK4E,MACZC,UAAW7E,EAAK6E,UAChBC,aAAc9E,EAAK8E,aACnBC,UAAW/E,EAAK+E,kBAOpC,IACI+E,GAAuB,kBAACC,GAAA,EAAD,CAAO3C,KAAMA,EAAM4C,QAAQ,WAA3B,IADD,WACC,KACrBC,GAAe,yCAAG,WAAO7K,GAAP,gBAAAnC,EAAA,0DAES,IADhBmC,EAAEiK,cACNa,gBAFW,gBAGhB9K,EAAEC,iBACFD,EAAE+K,kBACF9C,GAAQ,GACRF,GAAa,GANG,8BAShBA,GAAa,GACb/H,EAAEC,iBAEF4H,EAAQ,2BACDzJ,GADA,IAEHyG,QAAS,CAAC0E,EAAaC,EAAaC,EAAaC,OAIjDsB,EAAmB5M,GACN8G,KAAO,CAACyD,GACzBqC,EAAiBnG,QAAU,CAAC0E,EAAaC,EAAaC,EAAaC,GAEnEzL,QAAQC,IAAI8M,GAtBI,UAuBEyB,EAAWzB,GAvBb,2DAAH,sDA6BfgD,GAAe,yCAAG,WAAOhO,GAAP,UAAAnC,EAAA,6DACPmC,EAAEiK,cACfjK,EAAEC,iBACW7B,EAAKyE,KAHE,SAIF6J,EAAWtO,GAJT,cAKpB2O,GAAa,GALO,2CAAH,sDAQf7B,GAAa,CACfC,MAAO,SAACC,EAAMrO,GAAP,mBAAC,eACDqO,GADA,IAEHC,MAAO,YAKf,OAAOvO,EAAKhB,SAAW8Q,EAAS9Q,QAC5B,kBAAC,GAAD,MAEI,6BACI,yBAAK8D,UAAU,eACX,wBAAIA,UAAU,cAAd,iBAIJ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,kBAACE,GAAA,EAAD,CAAMwL,YAAU,EAACxD,UAAWA,EAAW/H,SAAU8K,IAC7C,kBAAC/K,GAAA,EAAKyL,IAAN,KACI,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,KAAY,4CACZ,kBAAC,KAAD,CACIC,SAAUqB,GACVpB,QACImB,GAEJlB,OAAQb,KAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,sBAIR,kBAACnM,GAAA,EAAKyL,IAAN,KACI,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,aACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOa,EACP8K,SAAUlC,GACVE,KAAK,OACLqC,UAAQ,EACRjP,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAEJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,sBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOsE,EACPqF,KAAK,QACLgC,SAAUlC,GACVuC,UAAQ,EACRjP,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,qBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOuE,EACPoF,KAAK,MACLgC,SAAUlC,GACVuC,UAAQ,EACRjP,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,aACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAO2C,EACPgH,KAAK,OACLgC,SAAUlC,GACVuC,UAAQ,EACRjP,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,sBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOwE,EACPmF,KAAK,QACLgC,SAAUlC,GACV1M,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,cACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOyE,EACPkF,KAAK,QACLgC,SAAUlC,GACVuC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIR,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAC9B,kBAAC7L,GAAA,EAAK8L,MAAN,eACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOc,GACP6I,KAAK,MACLgC,SAAUlC,GACVuC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,gBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACIG,UAAQ,EACRjM,MAAOe,GACP4I,KAAK,OACLgC,SAAUlC,GACVuC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,eACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAO4E,GACP+E,KAAK,MACLgC,SAAUlC,GACVuC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,gBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAO6E,GACP8E,KAAK,MACLgC,SAAUlC,GACVuC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,cACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOiF,GACP0E,KAAK,MACLgC,SAAUlC,GACVuC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,aACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAO+E,GACP4E,KAAK,OACLgC,SAAUlC,GACVuC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,wBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOmI,EAAQH,QACf2B,KAAK,UACLgC,SAAU3B,GACVgC,UAAQ,EACRjP,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,sBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOmI,EAAQF,MACf0B,KAAK,QACLgC,SAAU3B,GACVgC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBACtC,kBAAC7L,GAAA,EAAK8L,MAAN,uBAA4BvD,EAAQD,cAChC,kBAAC,KAAD,CACIyD,SAxZZ,SAAC7L,GACjBA,EAAE,GACdoH,GAAaiD,KAAI,SAAAI,GACTzK,EAAEE,QAAUuK,GACZnC,EAAW,2BACJD,GADG,IAEND,aAAcqC,SAmZcqB,QACItB,GAEJ0B,UAAQ,EACRH,OAAQb,KAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,sBACA,kBAACH,GAAA,EAAD,CAAKW,GAAI,IACL,kBAACtM,GAAA,EAAKuM,MAAN,CACAR,SAAUlC,GACV1M,KAAK,QACLqN,MAAM,MACNT,KAAK,uBACLxF,GAAG,OACH0F,SAA8B,IAAnBxE,KAEX,kBAACzF,GAAA,EAAKuM,MAAN,CACAR,SAAUlC,GACV1M,KAAK,QACLqN,MAAM,KACNT,KAAK,uBACLxF,GAAG,QACH0F,SAA8B,IAAnBxE,OAKnB,kBAACzF,GAAA,EAAK0L,MAAN,CAAYc,QAAS/G,GAAgB/C,GAAIiJ,KAAKC,GAAG,KAAKC,UAAU,sBAChE,kBAAC7L,GAAA,EAAK8L,MAAN,gBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACQ9L,MAAOoF,GACPuE,KAAK,aACLgC,SAAUlC,GACV1M,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,sBAMR,kBAACnM,GAAA,EAAKyL,IAAN,KACI,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,KAAKC,UAAU,sBAC/B,kBAAC7L,GAAA,EAAK8L,MAAN,sBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAO0I,GACPiB,KAAK,gBACLgC,SAAU1B,GACV+B,UAAQ,EACRjP,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAGR,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,cACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAO2I,GACPgB,KAAK,cACLgC,SAAU1B,GACV+B,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,KAAKC,UAAU,sBAC/B,kBAAC7L,GAAA,EAAK8L,MAAN,uBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAO4I,GACPe,KAAK,gBACLgC,SAAU1B,GACV+B,UAAQ,EACRjP,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAGR,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,cACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAO6I,GACPc,KAAK,cACLgC,SAAU1B,GACV+B,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,KAAKC,UAAU,sBAC/B,kBAAC7L,GAAA,EAAK8L,MAAN,wBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAO8I,GACPa,KAAK,gBACLgC,SAAU1B,GACV+B,UAAQ,EACRjP,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAGR,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,cACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAO+I,GACPY,KAAK,cACLgC,SAAU1B,GACV+B,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,oBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOgJ,GACPW,KAAK,mBACLgC,SAAU1B,GACV+B,UAAQ,EACRjP,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBACtC,kBAAC7L,GAAA,EAAK8L,MAAN,2BAAgCxC,IAC5B,kBAAC,KAAD,CACIyC,SA3hBf,SAAC7L,GACdA,EAAE,GACdoH,GAAaiD,KAAI,SAAAI,GACTzK,EAAEE,QAAUuK,GACZnB,EAAS,2BACFD,GADC,IAEJD,iBAAkBqB,SAshBUqB,QACItB,GAEJ0B,UAAQ,EACRH,OAAQb,KAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,cACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOiJ,GACPU,KAAK,iBACLgC,SAAU1B,GACV+B,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,oBAEA,kBAAC9L,GAAA,EAAKkM,QAAN,CACIxJ,GAAG,SACH6B,GAAG,6BACHwH,SAjpBnB,SAAC7L,GACtB6H,EAAQ,2BACDzJ,GADA,IAEHqH,UAAW8G,QAAQvM,EAAE4J,OAAO1J,YAgpBQ,4BAAQA,OAAO,EAAM2J,KAAK,QAA1B,OACA,4BAAQ3J,MAAO,GAAI2J,KAAK,SAAxB,QAIJ,kBAAC/J,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBACtC,kBAAC7L,GAAA,EAAK8L,MAAN,oBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACIxJ,GAAG,SACH6B,GAAG,6BACHwH,SAtpBnB,SAAC7L,GACtB6H,EAAQ,2BACDzJ,GADA,IAEHuH,UAAW4G,QAAQvM,EAAE4J,OAAO1J,YAqpBQ,4BAAQA,OAAO,EAAM2J,KAAK,QAA1B,OACA,4BAAQ3J,MAAO,GAAI2J,KAAK,SAAxB,SAIZ,kBAAC2C,GAAA,EAAD,CAAQvP,KAAK,UAAb,eACA,6BACA,6BACA,kBAAC,KAAD,CAAMiF,GAAG,YAAW,kBAACsK,GAAA,EAAD,CAAQhK,GAAIiJ,KAAKC,GAAG,IAAId,QAAQ,mBAAhC,aACpB,6BACA,6BACCF,GAED,kBAAC8B,GAAA,EAAD,CAAQrK,QArwBrB,kBAAM4K,GAAa,IAqwBuBvK,GAAIiJ,KAAKC,GAAG,IAAId,QAAQ,UAArD,UAEA,kBAACqD,GAAA,EAAD,CAAOjG,KAAM8E,EAAWoB,OAAQlB,GAC5B,kBAACiB,GAAA,EAAME,OAAP,CAAcC,aAAW,GACzB,kBAACH,GAAA,EAAMI,MAAP,iDAEA,kBAACJ,GAAA,EAAMK,OAAP,KACA,kBAAC9B,GAAA,EAAD,CAAQ5B,QAAQ,YAAYzI,QAAS6K,GAArC,SAGA,kBAACR,GAAA,EAAD,CAAQ5B,QAAQ,SAASzI,QAAS6L,IAAlC,2BCzazBhP,iBALS,SAACjC,GAAD,MAAY,CAChCD,KAAMC,EAAMD,KACZX,MAAOY,EAAMZ,SAGuB,CAACoS,UC5UhB,SAACpO,GAAD,gDAAS,WAAOvC,GAAP,gBAAAC,EAAA,+EAERC,KAAMyJ,KAAK,qBAAsBpH,GAFzB,OAEpBnC,EAFoB,OAG1BJ,EAAS,CACLX,KAAM1D,EACN2D,QAASc,IAEbJ,EAASO,MAPiB,gDAS1BF,QAAQI,MAAR,MAT0B,yDAAT,uDD4U2BmQ,UC/T3B,SAACrO,GAAD,gDAAS,WAAOvC,GAAP,gBAAAC,EAAA,sEAG1BI,QAAQC,IAAIiC,GAHc,SAIRrC,KAAM6O,OAAO,qBAAsB,CAACvO,KAAM+B,IAJlC,OAIpBnC,EAJoB,OAK1BJ,EAAS,CACLX,KAAM3D,EACN4D,QAASc,IAEbJ,EAASO,MATiB,gDAW1BF,QAAQI,MAAR,MAX0B,yDAAT,wDD+TVW,EAjXU,SAAC,GAA2C,IAA1ClC,EAAyC,EAAzCA,KAAeyR,GAA0B,EAAnC9O,QAAmC,EAA1B8O,WAAWC,EAAe,EAAfA,UACjD,EAAiCpO,mBAAS,CACtCoH,SAAU,GACV1L,SAAS,IAFb,oBAAOY,EAAP,KAAkB+K,EAAlB,KAKA,EAA8BrH,mBAAS,CACnCtE,SAAS,IADb,oBAAO2S,EAAP,KAAgBC,EAAhB,KAIA,EAAwBtO,mBAASwF,IAAjC,oBAAOxH,EAAP,KAAayJ,EAAb,KACA,EAAkCzH,oBAAS,GAA3C,oBAAO0M,EAAP,KAAkBC,EAAlB,KACMC,EAAc,kBAAMD,GAAa,IAEvC,EAAkC3M,oBAAS,GAA3C,oBAAO0H,EAAP,KAAkBC,EAAlB,KACA,EAAwB3H,oBAAS,GAAjC,oBAAO4H,EAAP,KAAaC,EAAb,KACA,EAA8B7H,mBAAS,CACnC+H,MAAO,GACPwG,aAAc,KAFlB,oBAAOpO,EAAP,KAAgBqO,EAAhB,KAKInG,EAAalI,EAAQ4H,MACrBO,EAAYnI,EAAQoO,aACpBE,EAAkB,GACtBA,EAAgBnG,GAAaD,EAYzBrK,EATAkC,IADJ,IAEIqE,EAQAvG,EARAuG,MAKAa,GAGApH,EAPAwG,wBAOAxG,EANAsC,UAMAtC,EALAiH,SAKAjH,EAJAkH,WAIAlH,EAHAoH,OAGApH,EAFAqH,UAEArH,EADAuH,UAGJjG,qBAAU,WACF5C,EAAKhB,UACLgC,KAAMC,IAAI,oBACLmB,MAAK,SAAClB,GACHyJ,EAAY,CAACD,SAAUxJ,EAAII,KAAMtC,SAAS,OAGlDgC,KAAMC,IAAI,eACLmB,MAAK,SAAClB,GACH0Q,EAAW,CAACtQ,KAAMJ,EAAII,KAAMtC,SAAS,UAGhD,CAACgB,IAEN,IAAM6M,EAAkB,SAAC3J,GAErB,GADAiI,GAAQ,GACc,WAAlBjI,EAAE4J,OAAO3M,KACT4K,EAAQ,2BACDzJ,GADA,mBAEF4B,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAOE,sBAE3B,IAA0B,IAArB9J,EAAE4J,OAAOG,UAAyC,IAArB/J,EAAE4J,OAAOG,SAAuC,wBAAjB/J,EAAE4J,OAAOC,KAO7EhC,EAAQ,2BACDzJ,GADA,mBAEF4B,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAO1J,aAT+E,CAC7G,IAAM8J,EAA+B,UAAvBhK,EAAEiK,cAAc5F,GAC9BwD,EAAQ,2BACDzJ,GADA,IAEHmH,eAAgByE,OAkC5B,IAAItN,EAAUZ,QACaY,EAAU8K,SAAS6C,KAAI,SAAA7C,GAC1C,MAAO,CACHtH,MAAOsH,EAASpG,MAAOkJ,MAAM,GAAD,OAAK9C,EAASpG,WAiBtD,IAAIqN,EAAQ3S,QACR,IAAIgT,EAAcL,EAAQrQ,KAAKiM,KAAI,SAAAlK,GAC/B,MAAO,CACHD,MAAOC,EAAIG,IAAKgK,MAAM,GAAD,OAAKnK,EAAIG,SAIlCyO,EAAa,SAAC/O,GACFA,EAAE,GACdyO,EAAQrQ,KAAKiM,KAAI,SAAAlK,GACb,GAAIH,EAAEE,QAAUC,EAAIG,IAAK,CAErB,IAAIrD,EAAOuD,OAAOC,KAAKN,EAAIO,UAAU,IAAI,GACrCqB,EAAQvB,OAAOsB,OAAO3B,EAAIO,UAAU,IAAI,GAE5CkO,EAAW,2BACJrO,GADG,IAEN4H,MAAOpG,EACP4M,aAAc1R,KAGlB,IAAIwL,EAAalI,EAAQ4H,MAErB6G,EAAmB,GACvBA,EAFgBzO,EAAQ6H,cAEMK,EAE9BZ,EAAQ,2BACDzJ,GADA,IAEHkC,IAAKH,EAAIG,IACTqE,MAAOxE,EAAIwE,MACXC,wBAAyBzE,EAAIyE,wBAC7BlE,UAAW,CAACsO,GACZ3J,SAAUlF,EAAIkF,SACdC,WAAY,MACZE,MAAOrF,EAAIqF,MACXC,UAAWtF,EAAIsF,UACfE,UAAWxF,EAAIwF,kBAOnC,IAAI6E,EAAsBnD,GAAiBgD,KAAI,SAAAI,GAC3C,MAAO,CACHvK,MAAOuK,EAAaH,MAAM,GAAD,OAAKG,OAkBlCC,EAAuB,kBAACC,GAAA,EAAD,CAAO3C,KAAMA,EAAM4C,QAAQ,WAA3B,IADD,WACC,KACrBC,EAAe,yCAAG,WAAO7K,GAAP,gBAAAnC,EAAA,0DAES,IADhBmC,EAAEiK,cACNa,gBAFW,gBAGhB9K,EAAEC,iBACFD,EAAE+K,kBACF9C,GAAQ,GACRF,GAAa,GANG,8BAQhBA,GAAa,GACb/H,EAAEC,kBAEEgP,EAAkB7Q,GACNsC,UAAY,CAACmO,GAZb,UAaEN,EAAUU,GAbZ,eAehBpH,EAAQjC,IACRqF,YAAW,WAAMhD,GAAQ,KAAQ,KAhBjB,4CAAH,sDAqBf+F,EAAe,yCAAG,WAAOhO,GAAP,UAAAnC,EAAA,6DACPmC,EAAEiK,cACfjK,EAAEC,iBAFkB,SAGFuO,EAAUpQ,GAHR,cAIpB2O,GAAa,GAJO,2CAAH,sDAOf7B,EAAa,CACfC,MAAO,SAACC,EAAMrO,GAAP,mBAAC,eACDqO,GADA,IAEHC,MAAO,YAIf,OAAOvO,EAAKhB,SAAWY,EAAUZ,QAC7B,kBAAC,GAAD,MAEI,6BACI,yBAAK8D,UAAU,eACX,wBAAIA,UAAU,cAAd,eAIJ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,kBAACE,GAAA,EAAD,CAAMwL,YAAU,EAACxD,UAAWA,EAAW/H,SAAU8K,GAC7C,kBAAC/K,GAAA,EAAKyL,IAAN,KACI,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,KAAY,2CACZ,kBAAC,KAAD,CACIC,SAAUkD,EACVjD,QACIgD,EAEJ/C,OAAQb,IAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,sBAIR,kBAACnM,GAAA,EAAKyL,IAAN,KAEA,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAC9B,kBAAC7L,GAAA,EAAK8L,MAAN,cACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOK,EAAQ4H,MACf0B,KAAK,QACLgC,SAnKrB,SAAC7L,GACE,WAAlBA,EAAE4J,OAAO3M,MACT2R,EAAW,2BACJrO,GADG,mBAELP,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAOE,kBAgKMoC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBACtC,kBAAC7L,GAAA,EAAK8L,MAAN,eAAoBrL,EAAQoO,cACxB,kBAAC,KAAD,CACI9C,SAjGZ,SAAC7L,GACjBA,EAAE,GACdqH,GAAiBgD,KAAI,SAAAI,GACbzK,EAAEE,QAAUuK,GACZmE,EAAW,2BACJrO,GADG,IAENoO,aAAclE,SA4FcqB,QACItB,EAEJ0B,UAAQ,EACRH,OAAQb,IAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,cACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOyE,EACPkF,KAAK,QACLgC,SAAUlC,EACVuC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,cACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOsF,EACPqE,KAAK,QACLgC,SAAUlC,EACVuC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,oBAEA,kBAAC9L,GAAA,EAAKkM,QAAN,CACIxJ,GAAG,SACH6B,GAAG,6BACHwH,SAzOnB,SAAC7L,GACtB6H,EAAQ,2BACDzJ,GADA,IAEHqH,UAAW8G,QAAQvM,EAAE4J,OAAO1J,YAwOQ,4BAAQA,OAAO,EAAM2J,KAAK,QAA1B,OACA,4BAAQ3J,MAAO,GAAI2J,KAAK,SAAxB,QAIJ,kBAAC/J,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBACtC,kBAAC7L,GAAA,EAAK8L,MAAN,oBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACIxJ,GAAG,SACH6B,GAAG,6BACHwH,SA9OnB,SAAC7L,GACtB6H,EAAQ,2BACDzJ,GADA,IAEHuH,UAAW4G,QAAQvM,EAAE4J,OAAO1J,YA6OQ,4BAAQA,OAAO,EAAM2J,KAAK,QAA1B,OACA,4BAAQ3J,MAAO,GAAI2J,KAAK,SAAxB,SAIZ,kBAAC2C,GAAA,EAAD,CAAQvP,KAAK,UAAb,cACA,6BACA,6BACA,kBAAC,KAAD,CAAMiF,GAAG,WAAU,kBAACsK,GAAA,EAAD,CAAQhK,GAAIiJ,KAAKC,GAAG,IAAId,QAAQ,mBAAhC,YACnB,6BACA,6BACCF,EAED,kBAAC8B,GAAA,EAAD,CAAQrK,QAjUrB,kBAAM4K,GAAa,IAiUuBvK,GAAIiJ,KAAKC,GAAG,IAAId,QAAQ,UAArD,UAEA,kBAACqD,GAAA,EAAD,CAAOjG,KAAM8E,EAAWoB,OAAQlB,GAC5B,kBAACiB,GAAA,EAAME,OAAP,CAAcC,aAAW,GACzB,kBAACH,GAAA,EAAMI,MAAP,gDAEA,kBAACJ,GAAA,EAAMK,OAAP,KACA,kBAAC9B,GAAA,EAAD,CAAQ5B,QAAQ,YAAYzI,QAAS6K,GAArC,SAGA,kBAACR,GAAA,EAAD,CAAQ5B,QAAQ,SAASzI,QAAS6L,GAAlC,yBEzCzBhP,iBALS,SAACjC,GAAD,MAAY,CAChCD,KAAMC,EAAMD,KACZX,MAAOY,EAAMZ,SAGuB,CAAC+S,QDvRlB,SAAC/O,GAAD,gDAAS,WAAOvC,GAAP,gBAAAC,EAAA,+EAENC,KAAMyJ,KAAK,kBAAmBpH,GAFxB,OAElBnC,EAFkB,OAGxBJ,EAAS,CACLX,KAAM5D,EACN6D,QAASc,IAEbJ,EAASO,MAPe,gDASxBF,QAAQI,MAAR,MATwB,yDAAT,wDCuRRW,EA/SO,SAAC,GAA8B,IAA7BlC,EAA4B,EAA5BA,KAAeoS,GAAa,EAAtBzP,QAAsB,EAAbyP,SACnC,EAAiC9O,mBAAS,CACtCoH,SAAU,GACV1L,SAAS,IAFb,oBAAOY,EAAP,KAAkB+K,EAAlB,KAIA,EAAwBrH,mBAASwF,IAAjC,oBAAOxH,EAAP,KAAayJ,EAAb,KACA,EAAkCzH,oBAAS,GAA3C,oBAAO0H,EAAP,KAAkBC,EAAlB,KACA,EAAwB3H,oBAAS,GAAjC,oBAAO4H,EAAP,KAAaC,EAAb,KACA,EAA8B7H,mBAAS,CACnC+H,MAAO,GACPwG,aAAc,KAFlB,oBAAOpO,EAAP,KAAgBqO,EAAhB,KAKInG,EAAalI,EAAQ4H,MACrBO,EAAYnI,EAAQoO,aACpBE,EAAkB,GACtBA,EAAgBnG,GAAaD,EAE7B,IACInI,EASAlC,EATAkC,IACAqE,EAQAvG,EARAuG,MAKAa,GAGApH,EAPAwG,wBAOAxG,EANAsC,UAMAtC,EALAiH,SAKAjH,EAJAkH,WAIAlH,EAHAoH,OAGApH,EAFAqH,UAEArH,EADAuH,UAGJjG,qBAAU,WACF5C,EAAKhB,SACLgC,KAAMC,IAAI,oBACLmB,MAAK,SAAClB,GACHyJ,EAAY,CAACD,SAAUxJ,EAAII,KAAMtC,SAAS,SAGrD,CAACgB,IAEN,IAAM6M,EAAkB,SAAC3J,GAErB,GADAiI,GAAQ,GACc,WAAlBjI,EAAE4J,OAAO3M,KACT4K,EAAQ,2BACDzJ,GADA,mBAEF4B,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAOE,sBAE3B,IAA0B,IAArB9J,EAAE4J,OAAOG,UAAyC,IAArB/J,EAAE4J,OAAOG,SAAuC,wBAAjB/J,EAAE4J,OAAOC,KAO7EhC,EAAQ,2BACDzJ,GADA,mBAEF4B,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAO1J,aAT+E,CAC7G,IAAM8J,EAA+B,UAAvBhK,EAAEiK,cAAc5F,GAC9BwD,EAAQ,2BACDzJ,GADA,IAEHmH,eAAgByE,OAkC5B,IAAItN,EAAUZ,QACV,IAAIsO,EAAmB1N,EAAU8K,SAAS6C,KAAI,SAAA7C,GAC1C,MAAO,CACHtH,MAAOsH,EAASpG,MAAOkJ,MAAM,GAAD,OAAK9C,EAASpG,WAI9CmJ,EAAkB,SAACvK,GACPA,EAAE,GACdtD,EAAU8K,SAAS6C,KAAI,SAAA7C,GACfxH,EAAEE,QAAUsH,EAASpG,OACrByG,EAAQ,2BACDzJ,GADA,IAEHiH,SAAUmC,EAASpG,aAOvC,IAAIoJ,EAAsBnD,GAAiBgD,KAAI,SAAAI,GAC3C,MAAO,CACHvK,MAAOuK,EAAaH,MAAM,GAAD,OAAKG,OAkBlCC,EAAuB,kBAACC,GAAA,EAAD,CAAO3C,KAAMA,EAAM4C,QAAQ,WAA3B,IADD,WACC,KACrBC,EAAe,yCAAG,WAAO7K,GAAP,UAAAnC,EAAA,0DAES,IADhBmC,EAAEiK,cACNa,gBAFW,gBAGhB9K,EAAEC,iBACFD,EAAE+K,kBACF9C,GAAQ,GACRF,GAAa,GANG,8BAQhBA,GAAa,GACb/H,EAAEC,iBAEoB7B,EACNsC,UAAY,CAACmO,GAZb,UAcEK,EAAQ9Q,GAdV,eAgBhByJ,EAAQjC,IACRqF,YAAW,WAAMhD,GAAQ,KAAQ,KAjBjB,4CAAH,sDAsBfiD,EAAa,CACfC,MAAO,SAACC,EAAMrO,GAAP,mBAAC,eACDqO,GADA,IAEHC,MAAO,YAIf,OAAOvO,EAAKhB,SAAWY,EAAUZ,QAC7B,kBAAC,GAAD,MAEI,6BACI,yBAAK8D,UAAU,eACX,wBAAIA,UAAU,cAAd,4BAIJ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,kBAACE,GAAA,EAAD,CAAMwL,YAAU,EAACxD,UAAWA,EAAW/H,SAAU8K,GAC7C,kBAAC/K,GAAA,EAAKyL,IAAN,KACI,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,wBACA,kBAAC,KAAD,CACIC,SAAUtB,EACVuB,QACI1B,EAEJ2B,OAAQb,IAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,qBAEJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,aACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOI,EACPuL,SAAUlC,EACVE,KAAK,MACLqC,UAAQ,EACRjP,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,sBAIR,kBAACnM,GAAA,EAAKyL,IAAN,KAEA,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAC9B,kBAAC7L,GAAA,EAAK8L,MAAN,cACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOK,EAAQ4H,MACf0B,KAAK,QACLgC,SA9HrB,SAAC7L,GACE,WAAlBA,EAAE4J,OAAO3M,MACT2R,EAAW,2BACJrO,GADG,mBAELP,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAOE,kBA2HMoC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBACtC,kBAAC7L,GAAA,EAAK8L,MAAN,aACI,kBAAC,KAAD,CACIC,SAvGZ,SAAC7L,GACjBA,EAAE,GACdqH,GAAiBgD,KAAI,SAAAI,GACbzK,EAAEE,QAAUuK,GACZmE,EAAW,2BACJrO,GADG,IAENoO,aAAclE,SAkGcqB,QACItB,EAEJ0B,UAAQ,EACRH,OAAQb,IAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,cACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOyE,EACPkF,KAAK,QACLgC,SAAUlC,EACVuC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,cACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOsF,EACPqE,KAAK,QACLgC,SAAUlC,EACVuC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,oBAEA,kBAAC9L,GAAA,EAAKkM,QAAN,CACIxJ,GAAG,SACH6B,GAAG,6BACHwH,SApMnB,SAAC7L,GACtB6H,EAAQ,2BACDzJ,GADA,IAEHqH,UAAW8G,QAAQvM,EAAE4J,OAAO1J,YAmMQ,4BAAQA,OAAO,EAAM2J,KAAK,QAA1B,OACA,4BAAQ3J,MAAO,GAAI2J,KAAK,SAAxB,QAIJ,kBAAC/J,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBACtC,kBAAC7L,GAAA,EAAK8L,MAAN,oBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACIxJ,GAAG,SACH6B,GAAG,6BACHwH,SAzMnB,SAAC7L,GACtB6H,EAAQ,2BACDzJ,GADA,IAEHuH,UAAW4G,QAAQvM,EAAE4J,OAAO1J,YAwMQ,4BAAQA,OAAO,EAAM2J,KAAK,QAA1B,OACA,4BAAQ3J,MAAO,GAAI2J,KAAK,SAAxB,SAIZ,kBAAC2C,GAAA,EAAD,CAAQvP,KAAK,UAAb,cACA,6BACA,6BACA,kBAAC,KAAD,CAAMiF,GAAG,eAAc,kBAACsK,GAAA,EAAD,CAAQ5B,QAAQ,WAAhB,eACvB,6BACA,6BACCF,WChRxByE,GAAe,SAAC3H,GAAD,gDAAc,WAAO5J,GAAP,gBAAAC,EAAA,+EAEhBC,KAAMyJ,KAAK,uBAAwBC,GAFnB,OAE5BxJ,EAF4B,OAGlCJ,EAAS,CACLX,KAAM5C,EACN6C,QAASc,IAEbJ,EAASO,MAPyB,gDASlCF,QAAQI,MAAR,MATkC,yDAAd,uDC4LbW,iBALS,SAACjC,GAAD,MAAY,CAChCD,KAAMC,EAAMD,KACZX,MAAOY,EAAMZ,SAGuB,CAACgT,iBAA1BnQ,EAtMY,SAAC,GAAmC,IAAlClC,EAAiC,EAAjCA,KAAeqS,GAAkB,EAA3B1P,QAA2B,EAAlB0P,cACxC,EAAiC/O,mBAAS,CACtCoH,SAAU,GACV1L,SAAS,IAFb,oBAAOY,EAAP,KAAkB+K,EAAlB,KAIA,EAAwBrH,mBAASyF,IAAjC,oBAAOzH,EAAP,KAAayJ,EAAb,KACA,EAAkCzH,oBAAS,GAA3C,oBAAO0H,EAAP,KAAkBC,EAAlB,KACA,EAAwB3H,oBAAS,GAAjC,oBAAO4H,EAAP,KAAaC,EAAb,KAGI7G,EAaAhD,EAbAgD,MACAL,EAYA3C,EAZA2C,KACAiF,EAWA5H,EAXA4H,aACAf,EAUA7G,EAVA6G,KAUA7G,EATA0H,YASA1H,EARA2H,gBAQA3H,EAPA6H,OAOA7H,EANAkI,KAMAlI,EALA8H,KAKA9H,EAJA+H,OAIA/H,EAHAgI,KAGAhI,EAFAiI,KAEAjI,EADAmI,cAGJ7G,qBAAU,WACF5C,EAAKhB,SACLgC,KAAMC,IAAI,oBACLmB,MAAK,SAAClB,GACHyJ,EAAY,CAACD,SAAUxJ,EAAII,KAAMtC,SAAS,SAGvD,CAACgB,IAEJ,IAAM6M,EAAkB,SAAC3J,GACrBiI,GAAQ,GACc,WAAlBjI,EAAE4J,OAAO3M,KACT4K,EAAQ,2BACDzJ,GADA,mBAEF4B,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAOE,iBAG9BjC,EAAQ,2BACDzJ,GADA,mBAEF4B,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAO1J,UAMtC,IAAIxD,EAAUZ,QACV,IAAIsO,EAAmB1N,EAAU8K,SAAS6C,KAAI,SAAA7C,GAC1C,MAAO,CACHtH,MAAOsH,EAASpG,MAAOkJ,MAAM,GAAD,OAAK9C,EAASpG,WAI9CmJ,EAAkB,SAACvK,GACPA,EAAE,GACdtD,EAAU8K,SAAS6C,KAAI,SAAA7C,GACfxH,EAAEE,QAAUsH,EAASpG,OACrByG,EAAQ,2BACDzJ,GADA,IAEH4H,aAAcwB,EAASpG,aAO3C,IACIsJ,EAAuB,kBAACC,GAAA,EAAD,CAAO3C,KAAMA,EAAM4C,QAAQ,WAA3B,IADD,WACC,KACrBC,EAAe,yCAAG,WAAO7K,GAAP,UAAAnC,EAAA,0DAES,IADhBmC,EAAEiK,cACNa,gBAFW,gBAGhB9K,EAAEC,iBACFD,EAAE+K,kBACF9C,GAAQ,GACRF,GAAa,GANG,8BAQhBA,GAAa,GACb/H,EAAEC,iBATc,UAWEkP,EAAa/Q,GAXf,eAahByJ,EAAQhC,IACRoF,YAAW,WAAMhD,GAAQ,KAAQ,KAdjB,4CAAH,sDAmBfiD,EAAa,CACfC,MAAO,SAACC,EAAMrO,GAAP,mBAAC,eACDqO,GADA,IAEHC,MAAO,YAKf,OAAOvO,EAAKhB,QACR,kBAAC,GAAD,MAEI,6BACI,yBAAK8D,UAAU,eACX,wBAAIA,UAAU,cAAd,4BAIJ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,kBAACE,GAAA,EAAD,CAAMwL,YAAU,EAACxD,UAAWA,EAAW/H,SAAU8K,GAC7C,kBAAC/K,GAAA,EAAKyL,IAAN,KACI,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,sBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOkB,EACPyK,SAAUlC,EACVE,KAAK,QACLqC,UAAQ,EACRjP,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,uBAA4B5F,GAC5B,kBAAC,KAAD,CACI6F,SAAUtB,EACVuB,QACI1B,EAEJ2B,OAAQb,IAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,sBAKR,kBAACnM,GAAA,EAAKyL,IAAN,KAEA,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,KAAKC,UAAU,sBAC/B,kBAAC7L,GAAA,EAAK8L,MAAN,aACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOa,EACP8I,KAAK,OACLgC,SAAUlC,EACVuC,UAAQ,EACRjP,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,aACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAO+E,EACP4E,KAAK,OACLgC,SAAUlC,EACVuC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,sBAKR,kBAACO,GAAA,EAAD,CAAQvP,KAAK,UAAb,mBACA,6BACA,6BACA,kBAAC,KAAD,CAAMiF,GAAG,mBAAkB,kBAACsK,GAAA,EAAD,CAAQ5B,QAAQ,WAAhB,oBAC3B,6BACA,6BACCF,WC+EtB1L,iBALS,SAACjC,GAAD,MAAY,CAChCD,KAAMC,EAAMD,KACZX,MAAOY,EAAMZ,SAGuB,CAACgT,gBAAcC,eF1OzB,SAAC5H,GAAD,gDAAc,WAAO5J,GAAP,gBAAAC,EAAA,+EAElBC,KAAMyJ,KAAK,0BAA2BC,GAFpB,OAE9BxJ,EAF8B,OAGpCJ,EAAS,CACLX,KAAM1C,EACN2C,QAASc,IAEbJ,EAASO,MAP2B,gDASpCF,QAAQI,MAAR,MAToC,yDAAd,uDE0OyCgR,eF7NzC,SAAC7H,GAAD,gDAAc,WAAO5J,GAAP,gBAAAC,EAAA,+EAElBC,KAAM6O,OAAO,0BAA2B,CAACvO,KAAMoJ,IAF7B,OAE9BxJ,EAF8B,OAGpCJ,EAAS,CACLX,KAAM3C,EACN4C,QAASc,IAEbJ,EAASO,MAP2B,gDASpCF,QAAQI,MAAR,MAToC,yDAAd,wDE6NfW,EAjQe,SAAC,GAAqD,IAApDlC,EAAmD,EAAnDA,KAAesS,GAAoC,EAA7C3P,QAA6C,EAApC2P,gBAAgBC,EAAoB,EAApBA,eAC3D,EAAiCjP,mBAAS,CACtCoH,SAAU,GACV1L,SAAS,IAFb,oBAAOY,EAAP,KAAkB+K,EAAlB,KAKA,EAAwCrH,mBAAS,CAC7CtE,SAAS,IADb,oBAGA,GAHA,UAGwBsE,mBAASyF,KAAjC,oBAAOzH,EAAP,KAAayJ,EAAb,KACA,EAAkCzH,oBAAS,GAA3C,oBAAO0M,EAAP,KAAkBC,EAAlB,KACMC,EAAc,kBAAMD,GAAa,IAEvC,EAAkC3M,oBAAS,GAA3C,oBAAO0H,EAAP,KAAkBC,EAAlB,KACA,EAAwB3H,oBAAS,GAAjC,oBAAO4H,EAAP,KAAaC,EAAb,KAGI7G,EAaAhD,EAbAgD,MACAL,EAYA3C,EAZA2C,KACAiF,EAWA5H,EAXA4H,aACAf,EAUA7G,EAVA6G,KAUA7G,EATA0H,YASA1H,EARA2H,gBAQA3H,EAPA6H,OAOA7H,EANAkI,KAMAlI,EALA8H,KAKA9H,EAJA+H,OAIA/H,EAHAgI,KAGAhI,EAFAiI,KAEAjI,EADAmI,cAGJ7G,qBAAU,WACF5C,EAAKhB,SACLgC,KAAMC,IAAI,oBACLmB,MAAK,SAAClB,GACHyJ,EAAY,CAACD,SAAUxJ,EAAII,KAAMtC,SAAS,SAGvD,CAACgB,IAEJ,IAAM6M,EAAkB,SAAC3J,GACrBiI,GAAQ,GACc,WAAlBjI,EAAE4J,OAAO3M,KACT4K,EAAQ,2BACDzJ,GADA,mBAEF4B,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAOE,iBAG9BjC,EAAQ,2BACDzJ,GADA,mBAEF4B,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAO1J,UAMtC,IAAIxD,EAAUZ,QACV,IAAIsO,EAAmB1N,EAAU8K,SAAS6C,KAAI,SAAA7C,GAC1C,MAAO,CACHtH,MAAOsH,EAASpG,MAAOkJ,MAAM,GAAD,OAAK9C,EAASpG,WAI9CmJ,EAAkB,SAACvK,GACPA,EAAE,GACdtD,EAAU8K,SAAS6C,KAAI,SAAA7C,GACfxH,EAAEE,QAAUsH,EAASpG,OACrByG,EAAQ,2BACDzJ,GADA,IAEHgD,MAAOoG,EAASpG,MAChBL,KAAMyG,EAASzG,KACfiF,aAAcwB,EAASxB,aACvBf,KAAMuC,EAASvC,KACfa,YAAa0B,EAAS1B,YACtBC,gBAAiByB,EAASzB,gBAC1BE,OAAQuB,EAASvB,OACjBK,KAAMkB,EAASlB,KACfJ,KAAMsB,EAAStB,KACfC,OAAQqB,EAASrB,OACjBC,KAAMoB,EAASpB,KACfC,KAAMmB,EAASnB,KACfE,cAAeiB,EAASjB,qBAMpC+I,EAAyB5S,EAAU8K,SAAS6C,KAAI,SAAA7C,GAChD,MAAO,CACHtH,MAAOsH,EAASpG,MAAOkJ,MAAM,GAAD,OAAK9C,EAASpG,WAI9CmO,EAAwB,SAACvP,GACbA,EAAE,GACdtD,EAAU8K,SAAS6C,KAAI,SAAA7C,GACfxH,EAAEE,QAAUsH,EAASpG,OACrByG,EAAQ,2BACDzJ,GADA,IAEH4H,aAAcwB,EAASpG,aAO3C,IACIsJ,EAAuB,kBAACC,GAAA,EAAD,CAAO3C,KAAMA,EAAM4C,QAAQ,WAA3B,IADD,WACC,KACrBC,EAAe,yCAAG,WAAO7K,GAAP,UAAAnC,EAAA,0DAES,IADhBmC,EAAEiK,cACNa,gBAFW,gBAGhB9K,EAAEC,iBACFD,EAAE+K,kBACF9C,GAAQ,GACRF,GAAa,GANG,8BAQhBA,GAAa,GACb/H,EAAEC,iBACFhC,QAAQC,IAAIE,GAVI,UAWEgR,EAAehR,GAXjB,eAahByJ,EAAQhC,IACRoF,YAAW,WAAMhD,GAAQ,KAAQ,KAdjB,4CAAH,sDAmBf+F,EAAe,yCAAG,WAAOhO,GAAP,UAAAnC,EAAA,6DACPmC,EAAEiK,cACfjK,EAAEC,iBAFkB,SAGFoP,EAAejR,GAHb,cAIpB2O,GAAa,GAJO,2CAAH,sDAOf7B,EAAa,CACfC,MAAO,SAACC,EAAMrO,GAAP,mBAAC,eACDqO,GADA,IAEHC,MAAO,YAKf,OAAOvO,EAAKhB,SAAWY,EAAUZ,QAC7B,kBAAC,GAAD,MAEI,6BACI,yBAAK8D,UAAU,eACX,wBAAIA,UAAU,cAAd,4BAIJ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,kBAACE,GAAA,EAAD,CAAMwL,YAAU,EAACxD,UAAWA,EAAW/H,SAAU8K,GAC7C,kBAAC/K,GAAA,EAAKyL,IAAN,KACI,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,0BAA+BxK,GAC/B,kBAAC,KAAD,CACIyK,SAAUtB,EACVuB,QACI1B,EAEJ2B,OAAQb,IAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,uBAA4B5F,GAC5B,kBAAC,KAAD,CACI6F,SAAU0D,EACVzD,QACIwD,EAEJvD,OAAQb,IAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,sBAKR,kBAACnM,GAAA,EAAKyL,IAAN,KAEA,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,KAAKC,UAAU,sBAC/B,kBAAC7L,GAAA,EAAK8L,MAAN,aACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOa,EACP8I,KAAK,OACLgC,SAAUlC,EACVuC,UAAQ,EACRjP,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,aACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAO+E,EACP4E,KAAK,OACLgC,SAAUlC,EACVuC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,sBAKR,kBAACO,GAAA,EAAD,CAAQvP,KAAK,UAAb,mBACA,6BACA,6BACA,kBAAC,KAAD,CAAMiF,GAAG,gBAAe,kBAACsK,GAAA,EAAD,CAAQ5B,QAAQ,mBAAhB,iBACxB,6BACA,6BACCF,EAED,kBAAC8B,GAAA,EAAD,CAAQrK,QAnNrB,kBAAM4K,GAAa,IAmNuBvK,GAAIiJ,KAAKC,GAAG,IAAId,QAAQ,UAArD,UAEA,kBAACqD,GAAA,EAAD,CAAOjG,KAAM8E,EAAWoB,OAAQlB,GAC5B,kBAACiB,GAAA,EAAME,OAAP,CAAcC,aAAW,GACzB,kBAACH,GAAA,EAAMI,MAAP,gDAEA,kBAACJ,GAAA,EAAMK,OAAP,KACA,kBAAC9B,GAAA,EAAD,CAAQ5B,QAAQ,YAAYzI,QAAS6K,GAArC,SAGA,kBAACR,GAAA,EAAD,CAAQ5B,QAAQ,SAASzI,QAAS6L,GAAlC,yBCyIzBhP,iBALS,SAACjC,GAAD,MAAY,CAChCD,KAAMC,EAAMD,KACZX,MAAOY,EAAMZ,SAGuB,CAACqT,YC7Ud,SAACtO,GAAD,gDAAW,WAAOtD,GAAP,gBAAAC,EAAA,+EAEZC,KAAMyJ,KAAK,uBAAwBrG,GAFvB,OAExBlD,EAFwB,OAG9BJ,EAAS,CACLX,KAAM9D,EACN+D,QAASc,IAEbJ,EAASO,MAPqB,gDAS9BF,QAAQI,MAAR,MAT8B,yDAAX,uDD6U2BoR,YChU3B,SAACvO,GAAD,gDAAW,WAAOtD,GAAP,gBAAAC,EAAA,sEAG9BI,QAAQC,IAAIgD,GAHkB,SAIZpD,KAAM6O,OAAO,uBAAwB,CAACvO,KAAM8C,IAJhC,OAIxBlD,EAJwB,OAK9BJ,EAAS,CACLX,KAAM/D,EACNgE,QAASc,IAEbJ,EAASO,MATqB,gDAW9BF,QAAQI,MAAR,MAX8B,yDAAX,wDDgUZW,EAlXY,SAAC,GAA+C,IAA9ClC,EAA6C,EAA7CA,KAAe0S,GAA8B,EAAvC/P,QAAuC,EAA9B+P,aAAaC,EAAiB,EAAjBA,YACrD,EAAiCrP,mBAAS,CACtCoH,SAAU,GACV1L,SAAS,IAFb,oBAAOY,EAAP,KAAkB+K,EAAlB,KAKA,EAAkCrH,mBAAS,CACvCtE,SAAS,IADb,oBAAO4T,EAAP,KAAkBC,EAAlB,KAIA,EAAwBvP,mBAAS8G,IAAjC,oBAAO9I,EAAP,KAAayJ,EAAb,KACA,EAAkCzH,oBAAS,GAA3C,oBAAO0M,EAAP,KAAkBC,EAAlB,KACMC,EAAc,kBAAMD,GAAa,IAEvC,EAAkC3M,oBAAS,GAA3C,oBAAO0H,EAAP,KAAkBC,EAAlB,KACA,EAAwB3H,oBAAS,GAAjC,oBAAO4H,EAAP,KAAaC,EAAb,KACA,EAA8B7H,mBAAS,CACnC+H,MAAO,GACPwG,aAAc,KAFlB,oBAAOpO,EAAP,KAAgBqO,EAAhB,KAKInG,EAAalI,EAAQ4H,MACrBO,EAAYnI,EAAQoO,aACpBE,EAAkB,GACtBA,EAAgBnG,GAAaD,EAYzBrK,EATAgD,MADJ,IAEIuD,EAQAvG,EARAuG,MAKAa,GAGApH,EAPAwG,wBAOAxG,EANAsC,UAMAtC,EALAiH,SAKAjH,EAJAkH,WAIAlH,EAHAoH,OAGApH,EAFAqH,UAEArH,EADAuH,UAGJjG,qBAAU,WACF5C,EAAKhB,UACLgC,KAAMC,IAAI,oBACLmB,MAAK,SAAClB,GACHyJ,EAAY,CAACD,SAAUxJ,EAAII,KAAMtC,SAAS,OAGlDgC,KAAMC,IAAI,iBACLmB,MAAK,SAAClB,GACH2R,EAAa,CAACvR,KAAMJ,EAAII,KAAMtC,SAAS,UAGlD,CAACgB,IAEN,IAAM6M,EAAkB,SAAC3J,GAErB,GADAiI,GAAQ,GACc,WAAlBjI,EAAE4J,OAAO3M,KACT4K,EAAQ,2BACDzJ,GADA,mBAEF4B,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAOE,sBAE3B,IAA0B,IAArB9J,EAAE4J,OAAOG,UAAyC,IAArB/J,EAAE4J,OAAOG,SAAuC,wBAAjB/J,EAAE4J,OAAOC,KAO7EhC,EAAQ,2BACDzJ,GADA,mBAEF4B,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAO1J,aAT+E,CAC7G,IAAM8J,EAA+B,UAAvBhK,EAAEiK,cAAc5F,GAC9BwD,EAAQ,2BACDzJ,GADA,IAEHmH,eAAgByE,OAkC5B,IAAItN,EAAUZ,QACaY,EAAU8K,SAAS6C,KAAI,SAAA7C,GAC1C,MAAO,CACHtH,MAAOsH,EAASpG,MAAOkJ,MAAM,GAAD,OAAK9C,EAASpG,WAiBtD,IAAIsO,EAAU5T,QACV,IAAI8T,EAAgBF,EAAUtR,KAAKiM,KAAI,SAAAnJ,GACnC,MAAO,CACHhB,MAAOgB,EAAME,MAAOkJ,MAAM,GAAD,OAAKpJ,EAAME,WAIxCyO,EAAe,SAAC7P,GACJA,EAAE,GACd0P,EAAUtR,KAAKiM,KAAI,SAAAnJ,GACf,GAAIlB,EAAEE,QAAUgB,EAAME,MAAO,CAEzB,IAAInE,EAAOuD,OAAOC,KAAKS,EAAMR,UAAU,IAAI,GACvCqB,EAAQvB,OAAOsB,OAAOZ,EAAMR,UAAU,IAAI,GAE9CkO,EAAW,2BACJrO,GADG,IAEN4H,MAAOpG,EACP4M,aAAc1R,KAGlB,IAAIwL,EAAalI,EAAQ4H,MAErB6G,EAAmB,GACvBA,EAFgBzO,EAAQ6H,cAEMK,EAE9BZ,EAAQ,2BACDzJ,GADA,IAEHgD,MAAOF,EAAME,MACbuD,MAAOzD,EAAMyD,MACbC,wBAAyB1D,EAAM0D,wBAC/BlE,UAAW,CAACsO,GACZ3J,SAAUnE,EAAMmE,SAChBC,WAAY,MACZE,MAAOtE,EAAMsE,MACbC,UAAWvE,EAAMuE,UACjBE,UAAWzE,EAAMyE,kBAOrC,IAAI6E,EAAsBpD,GAAaiD,KAAI,SAAAI,GACvC,MAAO,CACHvK,MAAOuK,EAAaH,MAAM,GAAD,OAAKG,OAkBlCC,EAAuB,kBAACC,GAAA,EAAD,CAAO3C,KAAMA,EAAM4C,QAAQ,WAA3B,IADD,WACC,KACrBC,EAAe,yCAAG,WAAO7K,GAAP,gBAAAnC,EAAA,0DAES,IADhBmC,EAAEiK,cACNa,gBAFW,gBAGhB9K,EAAEC,iBACFD,EAAE+K,kBACF9C,GAAQ,GACRF,GAAa,GANG,8BAQhBA,GAAa,GACb/H,EAAEC,kBAEE6P,EAAoB1R,GACNsC,UAAY,CAACmO,GAC/B5Q,QAAQC,IAAI4R,GAbI,UAcEN,EAAYM,GAdd,eAgBhBjI,EAAQX,IACR+D,YAAW,WAAMhD,GAAQ,KAAQ,KAjBjB,4CAAH,sDAsBf+F,EAAe,yCAAG,WAAOhO,GAAP,UAAAnC,EAAA,6DACPmC,EAAEiK,cACfjK,EAAEC,iBAFkB,SAGFwP,EAAYrR,GAHV,cAIpB2O,GAAa,GAJO,2CAAH,sDAOf7B,EAAa,CACfC,MAAO,SAACC,EAAMrO,GAAP,mBAAC,eACDqO,GADA,IAEHC,MAAO,YAIf,OAAOvO,EAAKhB,SAAWY,EAAUZ,QAC7B,kBAAC,GAAD,MAEI,6BACI,yBAAK8D,UAAU,eACX,wBAAIA,UAAU,cAAd,iBAIJ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,kBAACE,GAAA,EAAD,CAAMwL,YAAU,EAACxD,UAAWA,EAAW/H,SAAU8K,GAC7C,kBAAC/K,GAAA,EAAKyL,IAAN,KACI,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,KAAY,6CACZ,kBAAC,KAAD,CACIC,SAAUgE,EACV/D,QACI8D,EAEJ7D,OAAQb,IAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,sBAIR,kBAACnM,GAAA,EAAKyL,IAAN,KAEA,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAC9B,kBAAC7L,GAAA,EAAK8L,MAAN,cACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOK,EAAQ4H,MACf0B,KAAK,QACLgC,SApKrB,SAAC7L,GACE,WAAlBA,EAAE4J,OAAO3M,MACT2R,EAAW,2BACJrO,GADG,mBAELP,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAOE,kBAiKMoC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBACtC,kBAAC7L,GAAA,EAAK8L,MAAN,eAAoBrL,EAAQoO,cACxB,kBAAC,KAAD,CACI9C,SAlGZ,SAAC7L,GACjBA,EAAE,GACdoH,GAAaiD,KAAI,SAAAI,GACTzK,EAAEE,QAAUuK,GACZmE,EAAW,2BACJrO,GADG,IAENoO,aAAclE,SA6FcqB,QACItB,EAEJ0B,UAAQ,EACRH,OAAQb,IAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,cACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOyE,EACPkF,KAAK,QACLgC,SAAUlC,EACVuC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,cACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOsF,EACPqE,KAAK,QACLgC,SAAUlC,EACVuC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,oBAEA,kBAAC9L,GAAA,EAAKkM,QAAN,CACIxJ,GAAG,SACH6B,GAAG,6BACHwH,SA1OnB,SAAC7L,GACtB6H,EAAQ,2BACDzJ,GADA,IAEHqH,UAAW8G,QAAQvM,EAAE4J,OAAO1J,YAyOQ,4BAAQA,OAAO,EAAM2J,KAAK,QAA1B,OACA,4BAAQ3J,MAAO,GAAI2J,KAAK,SAAxB,QAIJ,kBAAC/J,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBACtC,kBAAC7L,GAAA,EAAK8L,MAAN,oBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACIxJ,GAAG,SACH6B,GAAG,6BACHwH,SA/OnB,SAAC7L,GACtB6H,EAAQ,2BACDzJ,GADA,IAEHuH,UAAW4G,QAAQvM,EAAE4J,OAAO1J,YA8OQ,4BAAQA,OAAO,EAAM2J,KAAK,QAA1B,OACA,4BAAQ3J,MAAO,GAAI2J,KAAK,SAAxB,SAIZ,kBAAC2C,GAAA,EAAD,CAAQvP,KAAK,UAAb,gBACA,6BACA,6BACA,kBAAC,KAAD,CAAMiF,GAAG,aAAY,kBAACsK,GAAA,EAAD,CAAQhK,GAAIiJ,KAAKC,GAAG,IAAId,QAAQ,mBAAhC,cACrB,6BACA,6BACCF,EAED,kBAAC8B,GAAA,EAAD,CAAQrK,QAlUrB,kBAAM4K,GAAa,IAkUuBvK,GAAIiJ,KAAKC,GAAG,IAAId,QAAQ,UAArD,UAEA,kBAACqD,GAAA,EAAD,CAAOjG,KAAM8E,EAAWoB,OAAQlB,GAC5B,kBAACiB,GAAA,EAAME,OAAP,CAAcC,aAAW,GACzB,kBAACH,GAAA,EAAMI,MAAP,kDAEA,kBAACJ,GAAA,EAAMK,OAAP,KACA,kBAAC9B,GAAA,EAAD,CAAQ5B,QAAQ,YAAYzI,QAAS6K,GAArC,SAGA,kBAACR,GAAA,EAAD,CAAQ5B,QAAQ,SAASzI,QAAS6L,GAAlC,2BE1CzBhP,iBALS,SAACjC,GAAD,MAAY,CAChCD,KAAMC,EAAMD,KACZL,OAAQM,EAAMN,UAGsB,CAACsT,UDvRhB,SAAC7O,GAAD,gDAAW,WAAOtD,GAAP,gBAAAC,EAAA,+EAEVC,KAAMyJ,KAAK,oBAAqBrG,GAFtB,OAEtBlD,EAFsB,OAG5BJ,EAAS,CACLX,KAAMhE,EACNiE,QAASc,IAEbJ,EAASO,MAPmB,gDAS5BF,QAAQI,MAAR,MAT4B,yDAAX,wDCuRVW,EA/SS,SAAC,GAAgC,IAA/BlC,EAA8B,EAA9BA,KAAeiT,GAAe,EAAxBtQ,QAAwB,EAAfsQ,WACrC,EAAiC3P,mBAAS,CACtCoH,SAAU,GACV1L,SAAS,IAFb,oBAAOY,EAAP,KAAkB+K,EAAlB,KAIA,EAAwBrH,mBAAS8G,IAAjC,oBAAO9I,EAAP,KAAayJ,EAAb,KACA,EAAkCzH,oBAAS,GAA3C,oBAAO0H,EAAP,KAAkBC,EAAlB,KACA,EAAwB3H,oBAAS,GAAjC,oBAAO4H,EAAP,KAAaC,EAAb,KACA,EAA8B7H,mBAAS,CACnC+H,MAAO,GACPwG,aAAc,KAFlB,oBAAOpO,EAAP,KAAgBqO,EAAhB,KAKInG,EAAalI,EAAQ4H,MACrBO,EAAYnI,EAAQoO,aACpBE,EAAkB,GACtBA,EAAgBnG,GAAaD,EAE7B,IACIrH,EASAhD,EATAgD,MACAuD,EAQAvG,EARAuG,MAKAa,GAGApH,EAPAwG,wBAOAxG,EANAsC,UAMAtC,EALAiH,SAKAjH,EAJAkH,WAIAlH,EAHAoH,OAGApH,EAFAqH,UAEArH,EADAuH,UAGJjG,qBAAU,WACF5C,EAAKhB,SACLgC,KAAMC,IAAI,oBACLmB,MAAK,SAAClB,GACHyJ,EAAY,CAACD,SAAUxJ,EAAII,KAAMtC,SAAS,SAGrD,CAACgB,IAEN,IAAM6M,EAAkB,SAAC3J,GAErB,GADAiI,GAAQ,GACc,WAAlBjI,EAAE4J,OAAO3M,KACT4K,EAAQ,2BACDzJ,GADA,mBAEF4B,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAOE,sBAE3B,IAA0B,IAArB9J,EAAE4J,OAAOG,UAAyC,IAArB/J,EAAE4J,OAAOG,SAAuC,wBAAjB/J,EAAE4J,OAAOC,KAO7EhC,EAAQ,2BACDzJ,GADA,mBAEF4B,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAO1J,aAT+E,CAC7G,IAAM8J,EAA+B,UAAvBhK,EAAEiK,cAAc5F,GAC9BwD,EAAQ,2BACDzJ,GADA,IAEHmH,eAAgByE,OAkC5B,IAAItN,EAAUZ,QACV,IAAIsO,EAAmB1N,EAAU8K,SAAS6C,KAAI,SAAA7C,GAC1C,MAAO,CACHtH,MAAOsH,EAASpG,MAAOkJ,MAAM,GAAD,OAAK9C,EAASpG,WAI9CmJ,EAAkB,SAACvK,GACPA,EAAE,GACdtD,EAAU8K,SAAS6C,KAAI,SAAA7C,GACfxH,EAAEE,QAAUsH,EAASpG,OACrByG,EAAQ,2BACDzJ,GADA,IAEHiH,SAAUmC,EAASpG,aAOvC,IAAIoJ,EAAsBpD,GAAaiD,KAAI,SAAAI,GACvC,MAAO,CACHvK,MAAOuK,EAAaH,MAAM,GAAD,OAAKG,OAkBlCC,EAAuB,kBAACC,GAAA,EAAD,CAAO3C,KAAMA,EAAM4C,QAAQ,WAA3B,IADD,WACC,KACrBC,EAAe,yCAAG,WAAO7K,GAAP,UAAAnC,EAAA,0DAES,IADhBmC,EAAEiK,cACNa,gBAFW,gBAGhB9K,EAAEC,iBACFD,EAAE+K,kBACF9C,GAAQ,GACRF,GAAa,GANG,8BAQhBA,GAAa,GACb/H,EAAEC,iBAEsB7B,EACNsC,UAAY,CAACmO,GAZf,UAcEkB,EAAU3R,GAdZ,eAgBhByJ,EAAQX,IACR+D,YAAW,WAAMhD,GAAQ,KAAQ,KAjBjB,4CAAH,sDAsBfiD,EAAa,CACfC,MAAO,SAACC,EAAMrO,GAAP,mBAAC,eACDqO,GADA,IAEHC,MAAO,YAIf,OAAOvO,EAAKhB,SAAWY,EAAUZ,QAC7B,kBAAC,GAAD,MAEI,6BACI,yBAAK8D,UAAU,eACX,wBAAIA,UAAU,cAAd,8BAIJ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,kBAACE,GAAA,EAAD,CAAMwL,YAAU,EAACxD,UAAWA,EAAW/H,SAAU8K,GAC7C,kBAAC/K,GAAA,EAAKyL,IAAN,KACI,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,wBACA,kBAAC,KAAD,CACIC,SAAUtB,EACVuB,QACI1B,EAEJ2B,OAAQb,IAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,qBAEJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,aACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOkB,EACPyK,SAAUlC,EACVE,KAAK,QACLqC,UAAQ,EACRjP,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,sBAIR,kBAACnM,GAAA,EAAKyL,IAAN,KAEA,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAC9B,kBAAC7L,GAAA,EAAK8L,MAAN,cACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOK,EAAQ4H,MACf0B,KAAK,QACLgC,SA9HrB,SAAC7L,GACE,WAAlBA,EAAE4J,OAAO3M,MACT2R,EAAW,2BACJrO,GADG,mBAELP,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAOE,kBA2HMoC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBACtC,kBAAC7L,GAAA,EAAK8L,MAAN,aACI,kBAAC,KAAD,CACIC,SAvGZ,SAAC7L,GACjBA,EAAE,GACdoH,GAAaiD,KAAI,SAAAI,GACTzK,EAAEE,QAAUuK,GACZmE,EAAW,2BACJrO,GADG,IAENoO,aAAclE,SAkGcqB,QACItB,EAEJ0B,UAAQ,EACRH,OAAQb,IAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,cACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOyE,EACPkF,KAAK,QACLgC,SAAUlC,EACVuC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,cACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOsF,EACPqE,KAAK,QACLgC,SAAUlC,EACVuC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,oBAEA,kBAAC9L,GAAA,EAAKkM,QAAN,CACIxJ,GAAG,SACH6B,GAAG,6BACHwH,SApMnB,SAAC7L,GACtB6H,EAAQ,2BACDzJ,GADA,IAEHqH,UAAW8G,QAAQvM,EAAE4J,OAAO1J,YAmMQ,4BAAQA,OAAO,EAAM2J,KAAK,QAA1B,OACA,4BAAQ3J,MAAO,GAAI2J,KAAK,SAAxB,QAIJ,kBAAC/J,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBACtC,kBAAC7L,GAAA,EAAK8L,MAAN,oBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACIxJ,GAAG,SACH6B,GAAG,6BACHwH,SAzMnB,SAAC7L,GACtB6H,EAAQ,2BACDzJ,GADA,IAEHuH,UAAW4G,QAAQvM,EAAE4J,OAAO1J,YAwMQ,4BAAQA,OAAO,EAAM2J,KAAK,QAA1B,OACA,4BAAQ3J,MAAO,GAAI2J,KAAK,SAAxB,SAIZ,kBAAC2C,GAAA,EAAD,CAAQvP,KAAK,UAAb,gBACA,6BACA,6BACA,kBAAC,KAAD,CAAMiF,GAAG,iBAAgB,kBAACsK,GAAA,EAAD,CAAQ5B,QAAQ,WAAhB,iBACzB,6BACA,6BACCF,W,SChRxBsF,GAAY,SAACrT,GAAD,gDAAW,WAAOiB,GAAP,gBAAAC,EAAA,+EAEVC,KAAMyJ,KAAK,mBAAoB5K,GAFrB,OAEtBqB,EAFsB,OAG5BJ,EAAS,CACLX,KAAMhD,EACNiD,QAASc,IAEbJ,EAASO,MAPmB,gDAS5BF,QAAQI,MAAR,MAT4B,yDAAX,uDCwhBVW,iBALS,SAACjC,GAAD,MAAY,CAChCD,KAAMC,EAAMD,KACZL,OAAQM,EAAMN,UAGsB,CAACuT,cAA1BhR,EAliBS,SAAC,GAAgC,IAA/BlC,EAA8B,EAA9BA,KAAekT,GAAe,EAAxBvQ,QAAwB,EAAfuQ,WACrC,EAAiC5P,mBAAS,CACtCoH,SAAU,GACV1L,SAAS,IAFb,oBAAOY,EAAP,KAAkB+K,EAAlB,KAKA,EAAyBrH,mBAAS,CAC9BQ,KAAM,GACN9E,SAAS,IAFb,oBAAOK,EAAP,KAAc0E,EAAd,KAKA,EAAuBT,mBAAS,CAC5BiB,IAAK,GACLvF,SAAS,IAFb,oBAAOQ,EAAP,KAAagF,EAAb,KAKA,EAA2BlB,mBAAS,CAChCc,MAAO,GACPpF,SAAS,IAFb,oBAAOW,EAAP,KAAewT,EAAf,KAKA,EAAuB7P,mBAAS,CAC5BD,IAAK,GACLrE,SAAS,IAFb,oBAAOE,EAAP,KAAaqE,EAAb,KAKA,EAAyBD,mBAAS,CAC9B8P,KAAM,CACF,CAACC,SAAU,GACX,CAACA,SAAU,GACX,CAACA,SAAU,GACX,CAACA,SAAU,GACX,CAACA,SAAU,IAEfrU,SAAS,IARb,oBAAOsU,EAAP,KAaA,GAbA,KAawBhQ,mBAASoG,KAAjC,oBAAOpI,EAAP,KAAayJ,EAAb,KACA,EAAkCzH,oBAAS,GAA3C,oBAAO0H,EAAP,KAAkBC,EAAlB,KACA,EAAwB3H,oBAAS,GAAjC,oBAAO4H,EAAP,KAAaC,EAAb,KAGIxB,EAYArI,EAZAqI,MAWAQ,GACA7I,EAXAsI,QAWAtI,EAVAuI,aAUAvI,EATAwI,cASAxI,EARAyI,YAQAzI,EAPA0I,iBAOA1I,EANA2I,aAMA3I,EALA4I,YAKA5I,EAJAgD,MAIAhD,EAHAkC,IAGAlC,EAFAyD,IAEAzD,EADA6I,cAGJvH,qBAAU,WACF5C,EAAKhB,UACLgC,KAAMC,IAAI,oBACLmB,MAAK,SAAClB,GACHyJ,EAAY,CAACD,SAAUxJ,EAAII,KAAMtC,SAAS,OAGlDgC,KAAMC,IAAI,gBACLmB,MAAK,SAAClB,GACH6C,EAAQ,CAACD,KAAM5C,EAAII,KAAMtC,SAAS,OAG1CgC,KAAMC,IAAI,eACLmB,MAAK,SAAClB,GACHsD,EAAO,CAACD,IAAKrD,EAAII,KAAMtC,SAAS,OAGxCgC,KAAMC,IAAI,iBACLmB,MAAK,SAAClB,GACHiS,EAAS,CAAC/O,MAAOlD,EAAII,KAAMtC,SAAS,OAGxCgC,KAAMC,IAAI,eACTmB,MAAK,SAAClB,GACHqC,EAAO,CAACF,IAAKnC,EAAII,KAAMtC,SAAS,UAG3C,CAACgB,IAEN,IAAM6M,EAAkB,SAAC3J,GACrBiI,GAAQ,GACRJ,EAAQ,2BACDzJ,GADA,mBAEF4B,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAO1J,UAKlC,IAAIxD,EAAUZ,QACV,IAAIsO,EAAmB1N,EAAU8K,SAAS6C,KAAI,SAAA7C,GAC1C,MAAO,CACHtH,MAAOsH,EAASpG,MAAOkJ,MAAM,GAAD,OAAK9C,EAASpG,WAI9CiP,EAAwB,SAACrQ,GACzB,GAAQ,MAALA,EAAU,CACT,IADS,EACLE,EAAQF,EACNsQ,EAAU,GAFP,eAGQpQ,GAHR,IAGT,IAAI,EAAJ,qBAAuB,CAAC,IAAdqQ,EAAa,QACfnS,EAAK0I,iBAAiB0J,SAASD,IAC/BD,EAAQ3Q,KAAK4Q,EAAIrQ,QALhB,8BAQNoQ,GACCzI,EAAQ,2BACDzJ,GADA,IAEH0I,iBAAkBwJ,OAStC,IAAIF,EAAMtU,QACN,IAAI2U,EAAeL,EAAMF,KAAK7F,KAAI,SAAA6F,GAC9B,MAAO,CACHhQ,MAAOgQ,EAAKC,SAAU7F,MAAM,GAAD,OAAK4F,EAAKC,cAIzCO,EAAc,SAAC1Q,GACf,GAAQ,MAALA,EAAU,CACT,IADS,EACLE,EAAQF,EACN2Q,EAAW,GAFR,eAGOzQ,GAHP,IAGT,IAAI,EAAJ,qBAAsB,CAAC,IAAb0Q,EAAY,QACdxS,EAAK2I,aAAayJ,SAASI,IAC3BD,EAAShR,KAAKiR,EAAG1Q,QALhB,8BAQNyQ,GACC9I,EAAQ,2BACDzJ,GADA,IAEH2I,aAAc4J,OASlC,IAAIrU,EAAKR,QACL,IAAI+U,EAAcvU,EAAK+E,IAAIgJ,KAAI,SAAAhJ,GAC3B,MAAO,CACHnB,MAAOmB,EAAIQ,IAAKyI,MAAM,GAAD,OAAKjJ,EAAIQ,SAIlCiP,EAAkB,SAAC9Q,GACPA,EAAE,GACd1D,EAAK+E,IAAIgJ,KAAI,SAAAhJ,GACLrB,EAAEE,QAAUmB,EAAIQ,KAChBgG,EAAQ,2BACDzJ,GADA,IAEHyD,IAAKR,EAAIQ,WAMrBkP,EAAmB,SAAC/Q,GACpB,GAAQ,MAALA,EAAU,CACT,IADS,EACLE,EAAQF,EACN2B,EAAU,GAFP,eAGMzB,GAHN,IAGT,IAAI,EAAJ,qBAAqB,CAAC,IAAZ8Q,EAAW,QACb5S,EAAK4I,YAAYwJ,SAASQ,IAC1BrP,EAAQhC,KAAKqR,EAAE9Q,QALd,8BAQNyB,GACCkG,EAAQ,2BACDzJ,GADA,IAEH4I,YAAarF,OAQjC,IAAIlF,EAAOX,QACP,IAAI8T,EAAgBnT,EAAOyE,MAAMmJ,KAAI,SAAAnJ,GACjC,MAAO,CACHhB,MAAOgB,EAAME,MAAOkJ,MAAM,GAAD,OAAKpJ,EAAME,WAIxC6P,EAAoB,SAACjR,GACTA,EAAE,GACdvD,EAAOyE,MAAMmJ,KAAI,SAAAnJ,GACTlB,EAAEE,QAAUgB,EAAME,OAClByG,EAAQ,2BACDzJ,GADA,IAEHgD,MAAOF,EAAME,aAMzB8P,EAAqB,SAAClR,GACtB,GAAQ,MAALA,EAAU,CACT,IADS,EACLE,EAAQF,EACNmR,EAAY,GAFT,eAGMjR,GAHN,IAGT,IAAI,EAAJ,qBAAqB,CAAC,IAAZkR,EAAW,QACbhT,EAAKwI,cAAc4J,SAASY,IAC5BD,EAAUxR,KAAKyR,EAAElR,QALhB,8BAQNiR,GACCtJ,EAAQ,2BACDzJ,GADA,IAEHwI,cAAeuK,OAQnC,IAAInV,EAAKF,QACL,IAAIgT,GAAc9S,EAAKmE,IAAIkK,KAAI,SAAAlK,GAC3B,MAAO,CACHD,MAAOC,EAAIG,IAAKgK,MAAM,GAAD,OAAKnK,EAAIG,SAIlC+Q,GAAkB,SAACrR,GACPA,EAAE,GACdhE,EAAKmE,IAAIkK,KAAI,SAAAlK,GACLH,EAAEE,QAAUC,EAAIG,KAChBuH,EAAQ,2BACDzJ,GADA,IAEHkC,IAAKH,EAAIG,WAMrBgR,GAAmB,SAACtR,GACpB,GAAQ,MAALA,EAAU,CACT,IADS,EACLE,EAAQF,EACNuR,EAAU,GAFP,eAGMrR,GAHN,IAGT,IAAI,EAAJ,qBAAqB,CAAC,IAAZrC,EAAW,QACbO,EAAKyI,YAAY2J,SAAS3S,IAC1B0T,EAAQ5R,KAAK9B,EAAEqC,QALd,8BAQNqR,GACC1J,EAAQ,2BACDzJ,GADA,IAEHyI,YAAa0K,OAQjC,IAAIpV,EAAML,QACN,IAAImR,GAAe9Q,EAAMyE,KAAKyJ,KAAI,SAAAzJ,GAC9B,MAAO,CACHV,MAAOU,EAAKiC,KAAMyH,MAAM,GAAD,OAAK1J,EAAKiC,UAIrC2O,GAAe,SAACxR,GAChB,GAAQ,MAALA,EAAU,CACT,IADS,EACLE,EAAQF,EACNyR,EAAY,GAFT,eAGMvR,GAHN,IAGT,IAAI,EAAJ,qBAAqB,CAAC,IAAZF,EAAW,QACb5B,EAAKsI,QAAQ8J,SAASxQ,IACtByR,EAAU9R,KAAKK,EAAEE,QALhB,8BAQNuR,GACC5J,EAAQ,2BACDzJ,GADA,IAEHsI,QAAS+K,OAOrBC,GAAqB,SAAC1R,GACtB,GAAQ,MAALA,EAAU,CACT,IADS,EACLE,EAAQF,EACN2R,EAAW,GAFR,eAGMzR,GAHN,IAGT,IAAI,EAAJ,qBAAqB,CAAC,IAAZ0R,EAAW,QACbxT,EAAKuI,aAAa6J,SAASoB,IAC3BD,EAAShS,KAAKiS,EAAE1R,QALf,8BAQNyR,GACC9J,EAAQ,2BACDzJ,GADA,IAEHuI,aAAcgL,OAQlC,IACIjH,GAAuB,kBAACC,GAAA,EAAD,CAAO3C,KAAMA,EAAM4C,QAAQ,WAA3B,IADD,WACC,KACrBC,GAAe,yCAAG,WAAO7K,GAAP,UAAAnC,EAAA,0DAES,IADhBmC,EAAEiK,cACNa,gBAFW,gBAGhB9K,EAAEC,iBACFD,EAAE+K,kBACF9C,GAAQ,GACRF,GAAa,GANG,8BAQhBA,GAAa,GACb/H,EAAEC,iBATc,UAWE+P,EAAU5R,GAXZ,eAahByJ,EAAQrB,IACRyE,YAAW,WAAMhD,GAAQ,KAAQ,KAdjB,4CAAH,sDAmBfiD,GAAa,CACfC,MAAO,SAACC,EAAMrO,GAAP,mBAAC,eACDqO,GADA,IAEHC,MAAO,YAKf,OAAOvO,EAAKhB,SAAWY,EAAUZ,QAC7B,kBAAC,GAAD,MAEI,6BACI,yBAAK8D,UAAU,eACX,wBAAIA,UAAU,cAAd,8BAIJ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,kBAACE,GAAA,EAAD,CAAMwL,YAAU,EAACxD,UAAWA,EAAW/H,SAAU8K,IAC7C,kBAAC/K,GAAA,EAAKyL,IAAN,KAEI,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,cACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOuG,EACPoF,SAAUlC,EACVE,KAAK,QACLqC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,oBACA,kBAAC,KAAD,CACIC,SAAUoF,EACVnF,QAAS8D,EACThQ,UAAU,qBACViS,gBAAgB,SAChB9F,OAAQb,KAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,kBACA,kBAAC,KAAD,CACIC,SAAUwF,GACVvF,QAASgD,GACTlP,UAAU,qBACViS,gBAAgB,SAChB9F,OAAQb,KAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,kBACA,kBAAC,KAAD,CACIC,SAAUiF,EACVhF,QAAS+E,EACTjR,UAAU,qBACViS,gBAAgB,SAChB9F,OAAQb,KAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,qBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAO+G,EACP4E,SAAUlC,EACVE,KAAK,eACLqC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,sBAIR,kBAACnM,GAAA,EAAKyL,IAAN,KACA,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAC9B,kBAAC7L,GAAA,EAAK8L,MAAN,yBACA,kBAAC,KAAD,CACIC,SAAUwE,EACVyB,SAAO,EAEPhG,QAAS1B,EACTxK,UAAU,qBACViS,gBAAgB,SAChB9F,OAAQb,KAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,qBAEJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,8BACA,kBAAC,KAAD,CACIC,SAAU6E,EACVoB,SAAO,EACPhG,QAAS2E,EACT7Q,UAAU,qBACViS,gBAAgB,SAChB9F,OAAQb,KAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,sBAIR,kBAACnM,GAAA,EAAKyL,IAAN,KACA,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAC9B,kBAAC7L,GAAA,EAAK8L,MAAN,sBACA,kBAAC,KAAD,CACIC,SAAUqF,EACVY,SAAO,EAEPhG,QAAS8D,EACThQ,UAAU,qBACViS,gBAAgB,SAChB9F,OAAQb,KAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,qBAEJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,oBACA,kBAAC,KAAD,CACIC,SAAUyF,GACVQ,SAAO,EACPhG,QAASgD,GACTlP,UAAU,qBACViS,gBAAgB,SAChB9F,OAAQb,KAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,sBAIR,kBAACnM,GAAA,EAAKyL,IAAN,KACA,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAC9B,kBAAC7L,GAAA,EAAK8L,MAAN,qBACA,kBAAC,KAAD,CACIC,SAAU6F,GACVI,SAAO,EAEPhG,QAASmB,GACTrN,UAAU,qBACViS,gBAAgB,SAChB9F,OAAQb,KAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,qBAEJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,oBACA,kBAAC,KAAD,CACIC,SAAUkF,EACVe,SAAO,EACPhG,QAAS+E,EACTjR,UAAU,qBACViS,gBAAgB,SAChB9F,OAAQb,KAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,sBAIR,kBAACnM,GAAA,EAAKyL,IAAN,KACI,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,KAAKC,UAAU,sBACnC,kBAAC7L,GAAA,EAAK8L,MAAN,sBACA,kBAAC,KAAD,CACIC,SAAU2F,GACVM,SAAO,EACPhG,QAASmB,GACTrN,UAAU,qBACViS,gBAAgB,SAChB9F,OAAQb,KAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,sBAIR,kBAACO,GAAA,EAAD,CAAQvP,KAAK,UAAb,gBAMCyN,YC2DtB1L,iBALS,SAACjC,GAAD,MAAY,CAChCD,KAAMC,EAAMD,KACZL,OAAQM,EAAMN,UAGsB,CAACuT,aAAW+B,YFpjBzB,SAACpV,GAAD,gDAAW,WAAOiB,GAAP,gBAAAC,EAAA,+EAEZC,KAAMyJ,KAAK,sBAAuB5K,GAFtB,OAExBqB,EAFwB,OAG9BJ,EAAS,CACLX,KAAM9C,EACN+C,QAASc,IAEbJ,EAASO,MAPqB,gDAS9BF,QAAQI,MAAR,MAT8B,yDAAX,wDEojBZW,EA1kBY,SAAC,GAA6C,IAA5ClC,EAA2C,EAA3CA,KAA0BiV,GAAiB,EAArCtS,QAAqC,EAA5BuQ,UAA4B,EAAjB+B,aACnD,EAAiC3R,mBAAS,CACtCoH,SAAU,GACV1L,SAAS,IAFb,oBAAOY,EAAP,KAAkB+K,EAAlB,KAKA,EAAyBrH,mBAAS,CAC9BQ,KAAM,GACN9E,SAAS,IAFb,oBAAOK,EAAP,KAAc0E,EAAd,KAKA,EAAuBT,mBAAS,CAC5BiB,IAAK,GACLvF,SAAS,IAFb,oBAAOQ,EAAP,KAAagF,EAAb,KAKA,EAA2BlB,mBAAS,CAChCc,MAAO,GACPpF,SAAS,IAFb,oBAAOW,EAAP,KAAewT,EAAf,KAKA,EAAuB7P,mBAAS,CAC5BD,IAAK,GACLrE,SAAS,IAFb,oBAAOE,EAAP,KAAaqE,EAAb,KAKA,EAAyBD,mBAAS,CAC9B8P,KAAM,CACF,CAACC,SAAU,GACX,CAACA,SAAU,GACX,CAACA,SAAU,GACX,CAACA,SAAU,GACX,CAACA,SAAU,IAEfrU,SAAS,IARb,oBAAOsU,EAAP,KAWA,GAXA,KAWoChQ,mBAAS,CACzCtE,SAAS,KADb,oBAAOkW,EAAP,KAAkBC,EAAlB,KAMA,EAAwB7R,mBAASoG,IAAjC,oBAAOpI,EAAP,KAAayJ,EAAb,KACA,EAAkCzH,oBAAS,GAA3C,oBAAO0H,EAAP,KAAkBC,EAAlB,KACA,EAAwB3H,oBAAS,GAAjC,oBAAO4H,EAAP,KAAaC,EAAb,KAcIhB,GACA7I,EAZAqI,MAYArI,EAXAsI,QAWAtI,EAVAuI,aAUAvI,EATAwI,cASAxI,EARAyI,YAQAzI,EAPA0I,iBAOA1I,EANA2I,aAMA3I,EALA4I,YAKA5I,EAJAgD,MAIAhD,EAHAkC,IAGAlC,EAFAyD,IAEAzD,EADA6I,cAGJvH,qBAAU,WACF5C,EAAKhB,UACLgC,KAAMC,IAAI,oBACLmB,MAAK,SAAClB,GACHyJ,EAAY,CAACD,SAAUxJ,EAAII,KAAMtC,SAAS,OAGlDgC,KAAMC,IAAI,gBACLmB,MAAK,SAAClB,GACH6C,EAAQ,CAACD,KAAM5C,EAAII,KAAMtC,SAAS,OAG1CgC,KAAMC,IAAI,eACLmB,MAAK,SAAClB,GACHsD,EAAO,CAACD,IAAKrD,EAAII,KAAMtC,SAAS,OAGxCgC,KAAMC,IAAI,iBACLmB,MAAK,SAAClB,GACHiS,EAAS,CAAC/O,MAAOlD,EAAII,KAAMtC,SAAS,OAG5CgC,KAAMC,IAAI,eACLmB,MAAK,SAAClB,GACHqC,EAAO,CAACF,IAAKnC,EAAII,KAAMtC,SAAS,OAGxCgC,KAAMC,IAAI,gBACLmB,MAAK,SAAClB,GACHiU,EAAe,CAAC7T,KAAMJ,EAAII,KAAMtC,SAAS,UAGpD,CAACgB,IAWN,IAAIJ,EAAUZ,QACV,IAAIsO,EAAmB1N,EAAU8K,SAAS6C,KAAI,SAAA7C,GAC1C,MAAO,CACHtH,MAAOsH,EAASpG,MAAOkJ,MAAM,GAAD,OAAK9C,EAASpG,WAI9CiP,EAAwB,SAACrQ,GACzB,GAAQ,MAALA,EAAU,CACT,IADS,EACLE,EAAQF,EACNsQ,EAAU,GAFP,eAGQpQ,GAHR,IAGT,IAAI,EAAJ,qBAAuB,CAAC,IAAdqQ,EAAa,QACfnS,EAAK0I,iBAAiB0J,SAASD,IAC/BD,EAAQ3Q,KAAK4Q,EAAIrQ,QALhB,8BAQNoQ,GACCzI,EAAQ,2BACDzJ,GADA,IAEH0I,iBAAkBwJ,OAStC,IAAIF,EAAMtU,QACN,IAAI2U,EAAeL,EAAMF,KAAK7F,KAAI,SAAA6F,GAC9B,MAAO,CACHhQ,MAAOgQ,EAAKC,SAAU7F,MAAM,GAAD,OAAK4F,EAAKC,cAIzCO,EAAc,SAAC1Q,GACf,GAAQ,MAALA,EAAU,CACT,IADS,EACLE,EAAQF,EACN2Q,EAAW,GAFR,eAGOzQ,GAHP,IAGT,IAAI,EAAJ,qBAAsB,CAAC,IAAb0Q,EAAY,QACdxS,EAAK2I,aAAayJ,SAASI,IAC3BD,EAAShR,KAAKiR,EAAG1Q,QALhB,8BAQNyQ,GACC9I,EAAQ,2BACDzJ,GADA,IAEH2I,aAAc4J,OASlC,IAAIrU,EAAKR,QACL,IAAI+U,EAAcvU,EAAK+E,IAAIgJ,KAAI,SAAAhJ,GAC3B,MAAO,CACHnB,MAAOmB,EAAIQ,IAAKyI,MAAM,GAAD,OAAKjJ,EAAIQ,SAIlCiP,EAAkB,SAAC9Q,GACPA,EAAE,GACd1D,EAAK+E,IAAIgJ,KAAI,SAAAhJ,GACLrB,EAAEE,QAAUmB,EAAIQ,KAChBgG,EAAQ,2BACDzJ,GADA,IAEHyD,IAAKR,EAAIQ,WAMrBkP,EAAmB,SAAC/Q,GACpB,GAAQ,MAALA,EAAU,CACT,IADS,EACLE,EAAQF,EACN2B,EAAU,GAFP,eAGMzB,GAHN,IAGT,IAAI,EAAJ,qBAAqB,CAAC,IAAZ8Q,EAAW,QACb5S,EAAK4I,YAAYwJ,SAASQ,IAC1BrP,EAAQhC,KAAKqR,EAAE9Q,QALd,8BAQNyB,GACCkG,EAAQ,2BACDzJ,GADA,IAEH4I,YAAarF,OAQjC,IAAIlF,EAAOX,QACP,IAAI8T,EAAgBnT,EAAOyE,MAAMmJ,KAAI,SAAAnJ,GACjC,MAAO,CACHhB,MAAOgB,EAAME,MAAOkJ,MAAM,GAAD,OAAKpJ,EAAME,WAIxC6P,GAAoB,SAACjR,GACTA,EAAE,GACdvD,EAAOyE,MAAMmJ,KAAI,SAAAnJ,GACTlB,EAAEE,QAAUgB,EAAME,OAClByG,EAAQ,2BACDzJ,GADA,IAEHgD,MAAOF,EAAME,aAMzB8P,GAAqB,SAAClR,GACtB,GAAQ,MAALA,EAAU,CACT,IADS,EACLE,EAAQF,EACNmR,EAAY,GAFT,eAGMjR,GAHN,IAGT,IAAI,EAAJ,qBAAqB,CAAC,IAAZkR,EAAW,QACbhT,EAAKwI,cAAc4J,SAASY,IAC5BD,EAAUxR,KAAKyR,EAAElR,QALhB,8BAQNiR,GACCtJ,EAAQ,2BACDzJ,GADA,IAEHwI,cAAeuK,OAQnC,IAAInV,EAAKF,QACL,IAAIgT,GAAc9S,EAAKmE,IAAIkK,KAAI,SAAAlK,GAC3B,MAAO,CACHD,MAAOC,EAAIG,IAAKgK,MAAM,GAAD,OAAKnK,EAAIG,SAIlC+Q,GAAkB,SAACrR,GACPA,EAAE,GACdhE,EAAKmE,IAAIkK,KAAI,SAAAlK,GACLH,EAAEE,QAAUC,EAAIG,KAChBuH,EAAQ,2BACDzJ,GADA,IAEHkC,IAAKH,EAAIG,WAMrBgR,GAAmB,SAACtR,GACpB,GAAQ,MAALA,EAAU,CACT,IADS,EACLE,EAAQF,EACNuR,EAAU,GAFP,eAGMrR,GAHN,IAGT,IAAI,EAAJ,qBAAqB,CAAC,IAAZrC,EAAW,QACbO,EAAKyI,YAAY2J,SAAS3S,IAC1B0T,EAAQ5R,KAAK9B,EAAEqC,QALd,8BAQNqR,GACC1J,EAAQ,2BACDzJ,GADA,IAEHyI,YAAa0K,OAQjC,IAAIpV,EAAML,QACN,IAAImR,GAAe9Q,EAAMyE,KAAKyJ,KAAI,SAAAzJ,GAC9B,MAAO,CACHV,MAAOU,EAAKiC,KAAMyH,MAAM,GAAD,OAAK1J,EAAKiC,UAIrC2O,GAAe,SAACxR,GAChB,GAAQ,MAALA,EAAU,CACT,IADS,EACLE,EAAQF,EACNyR,EAAY,GAFT,eAGMvR,GAHN,IAGT,IAAI,EAAJ,qBAAqB,CAAC,IAAZF,EAAW,QACb5B,EAAKsI,QAAQ8J,SAASxQ,IACtByR,EAAU9R,KAAKK,EAAEE,QALhB,8BAQNuR,GACC5J,EAAQ,2BACDzJ,GADA,IAEHsI,QAAS+K,OAOrBC,GAAqB,SAAC1R,GACtB,GAAQ,MAALA,EAAU,CACT,IADS,EACLE,EAAQF,EACN2R,EAAW,GAFR,eAGMzR,GAHN,IAGT,IAAI,EAAJ,qBAAqB,CAAC,IAAZ0R,EAAW,QACbxT,EAAKuI,aAAa6J,SAASoB,IAC3BD,EAAShS,KAAKiS,EAAE1R,QALf,8BAQNyR,GACC9J,EAAQ,2BACDzJ,GADA,IAEHuI,aAAcgL,OAQlC,IAAIK,EAAUlW,QACV,IAAIoW,GAAqBF,EAAU5T,KAAKiM,KAAI,SAAA1N,GACxC,MAAO,CACHuD,MAAOvD,EAAM8J,MAAO6D,MAAM,GAAD,OAAK3N,EAAM8J,WAIxC0L,GAAe,SAACnS,GACJA,EAAE,GACdgS,EAAU5T,KAAKiM,KAAI,SAAA+H,GACZpS,EAAEE,QAAUkS,EAAM3L,OACjBoB,EAAQ,2BACDzJ,GADA,IAEHqI,MAAO2L,EAAM3L,MACbC,QAAS0L,EAAM1L,QACfC,aAAcyL,EAAMzL,aACpBC,cAAewL,EAAMxL,cACrBC,YAAauL,EAAMvL,YACnBC,iBAAkBsL,EAAMtL,iBACxBC,aAAcqL,EAAMrL,aACpBC,YAAaoL,EAAMpL,YACnB5F,MAAOgR,EAAMhR,MACbd,IAAK8R,EAAM9R,IACXuB,IAAKuQ,EAAMvQ,IACXoF,aAAcmL,EAAMnL,oBAOxC,IACIyD,GAAuB,kBAACC,GAAA,EAAD,CAAO3C,KAAMA,EAAM4C,QAAQ,WAA3B,IADD,WACC,KACrBC,GAAe,yCAAG,WAAO7K,GAAP,UAAAnC,EAAA,0DAES,IADhBmC,EAAEiK,cACNa,gBAFW,gBAGhB9K,EAAEC,iBACFD,EAAE+K,kBACF9C,GAAQ,GACRF,GAAa,GANG,8BAQhBA,GAAa,GACb/H,EAAEC,iBATc,UAWE8R,EAAY3T,GAXd,eAahByJ,EAAQrB,IACRyE,YAAW,WAAMhD,GAAQ,KAAQ,KAdjB,4CAAH,sDAmBfiD,GAAa,CACfC,MAAO,SAACC,EAAMrO,GAAP,mBAAC,eACDqO,GADA,IAEHC,MAAO,YAKf,OAAOvO,EAAKhB,SAAWY,EAAUZ,QAC7B,kBAAC,GAAD,MAEI,6BACI,yBAAK8D,UAAU,eACX,wBAAIA,UAAU,cAAd,iBAIJ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,QACX,yBAAKA,UAAU,aACX,kBAACE,GAAA,EAAD,CAAMwL,YAAU,EAACxD,UAAWA,EAAW/H,SAAU8K,IAC7C,kBAAC/K,GAAA,EAAKyL,IAAN,KAEI,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,oBACA,kBAAC,KAAD,CACIC,SAAUsG,GACVrG,QAASoG,GACTtS,UAAU,qBACViS,gBAAgB,SAChB9F,OAAQb,KAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,oBACA,kBAAC,KAAD,CAEIC,SAAUoF,GACVnF,QAAS8D,EACThQ,UAAU,qBACViS,gBAAgB,SAChB9F,OAAQb,KAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,kBACA,kBAAC,KAAD,CACIC,SAAUwF,GACVvF,QAASgD,GACTlP,UAAU,qBACViS,gBAAgB,SAChB9F,OAAQb,KAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,kBACA,kBAAC,KAAD,CACIC,SAAUiF,EACVhF,QAAS+E,EACTjR,UAAU,qBACViS,gBAAgB,SAChB9F,OAAQb,KAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,qBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAO+G,EACP4E,SArWpB,SAAC7L,GACrBiI,GAAQ,GACRJ,EAAQ,2BACDzJ,GADA,mBAEF4B,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAO1J,UAkWU2J,KAAK,eACLqC,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,sBAIR,kBAACnM,GAAA,EAAKyL,IAAN,KACA,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAC9B,kBAAC7L,GAAA,EAAK8L,MAAN,yBACA,kBAAC,KAAD,CACIC,SAAUwE,EACVyB,SAAO,EAEPhG,QAAS1B,EACTxK,UAAU,qBACViS,gBAAgB,SAChB9F,OAAQb,KAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,qBAEJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,8BACA,kBAAC,KAAD,CACIC,SAAU6E,EACVoB,SAAO,EACPhG,QAAS2E,EACT7Q,UAAU,qBACViS,gBAAgB,SAChB9F,OAAQb,KAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,sBAIR,kBAACnM,GAAA,EAAKyL,IAAN,KACA,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAC9B,kBAAC7L,GAAA,EAAK8L,MAAN,sBACA,kBAAC,KAAD,CACIC,SAAUqF,GACVY,SAAO,EAEPhG,QAAS8D,EACThQ,UAAU,qBACViS,gBAAgB,SAChB9F,OAAQb,KAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,qBAEJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,oBACA,kBAAC,KAAD,CACIC,SAAUyF,GACVQ,SAAO,EACPhG,QAASgD,GACTlP,UAAU,qBACViS,gBAAgB,SAChB9F,OAAQb,KAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,sBAIR,kBAACnM,GAAA,EAAKyL,IAAN,KACA,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAC9B,kBAAC7L,GAAA,EAAK8L,MAAN,qBACA,kBAAC,KAAD,CACIC,SAAU6F,GACVI,SAAO,EAEPhG,QAASmB,GACTrN,UAAU,qBACViS,gBAAgB,SAChB9F,OAAQb,KAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,qBAEJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,oBACA,kBAAC,KAAD,CACIC,SAAUkF,EACVe,SAAO,EACPhG,QAAS+E,EACTjR,UAAU,qBACViS,gBAAgB,SAChB9F,OAAQb,KAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,sBAIR,kBAACnM,GAAA,EAAKyL,IAAN,KACI,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,KAAKC,UAAU,sBACnC,kBAAC7L,GAAA,EAAK8L,MAAN,sBACA,kBAAC,KAAD,CACIC,SAAU2F,GACVM,SAAO,EACPhG,QAASmB,GACTrN,UAAU,qBACViS,gBAAgB,SAChB9F,OAAQb,KAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,sBAIR,kBAACO,GAAA,EAAD,CAAQvP,KAAK,UAAb,gBACA,6BACA,6BACA,kBAAC,KAAD,CAAMiF,GAAG,aAAY,kBAACsK,GAAA,EAAD,CAAQ5B,QAAQ,WAAhB,iBACrB,6BACA,6BACCF,YCtLtB1L,iBALS,SAACjC,GAAD,MAAY,CAChCD,KAAMC,EAAMD,KACZR,KAAMS,EAAMT,QAGwB,CAAC+V,UC7VhB,SAAChR,GAAD,gDAAS,WAAOzD,GAAP,gBAAAC,EAAA,sEAE1BI,QAAQC,IAAImD,GAFc,SAGRvD,KAAMyJ,KAAK,qBAAsBlG,GAHzB,OAGpBrD,EAHoB,OAI1BJ,EAAS,CACLX,KAAMpE,EACNqE,QAASc,IAEbJ,EAASO,MARiB,gDAU1BF,QAAQI,MAAR,MAV0B,yDAAT,uDD6V2BiU,UC/U3B,SAACjR,GAAD,gDAAS,WAAOzD,GAAP,gBAAAC,EAAA,+EAGRC,KAAM6O,OAAO,qBAAsB,CAACvO,KAAMiD,IAHlC,OAGpBrD,EAHoB,OAI1BJ,EAAS,CACLX,KAAMnE,EACNoE,QAASc,IAEbJ,EAASO,MARiB,gDAU1BF,QAAQI,MAAR,MAV0B,yDAAT,wDD+UVW,EAlYU,SAAC,GAAiD,IAAhDlC,EAA+C,EAA/CA,KAAqBuV,GAA0B,EAAzC/V,KAAyC,EAAnCmD,QAAmC,EAA1B4S,WAAWC,EAAe,EAAfA,UACvD,EAAiClS,mBAAS,CACtCoH,SAAU,GACV1L,SAAS,IAFb,oBAAOY,EAAP,KAAkB+K,EAAlB,KAIA,EAA8BrH,mBAAS,CACnCtE,SAAS,IADb,oBAAOyW,EAAP,KAAgBC,EAAhB,KAGA,EAAkCpS,oBAAS,GAA3C,oBAAO0M,EAAP,KAAkBC,EAAlB,KACMC,EAAc,kBAAMD,GAAa,IAEvC,EAAwB3M,mBAAS+G,IAAjC,oBAAO/I,EAAP,KAAayJ,EAAb,KACA,EAAkCzH,oBAAS,GAA3C,oBAAO0H,EAAP,KAAkBC,EAAlB,KACA,EAAwB3H,oBAAS,GAAjC,oBAAO4H,EAAP,KAAaC,EAAb,KACA,EAA8B7H,mBAAS,CACnC8H,QAAS,GACTC,MAAO,GACPwG,aAAc,KAHlB,oBAAOpO,EAAP,KAAgBqO,EAAhB,KAMIrG,EAAehI,EAAQ2H,QAAQM,WAC/BC,EAAalI,EAAQ4H,MACrBO,EAAYnI,EAAQoO,aAEpB8D,EAAiB,GACrBA,EAFelK,GAEYE,EAC3BgK,EAAc,KAAW/J,EAURtK,EAPbyD,IADJ,IAEId,EAMa3C,EANb2C,KAMa3C,EALbiH,SAKajH,EAJb4D,IAIa5D,EAHbsC,UAGatC,EAFbkH,WAEalH,EADbqH,UACarH,EAAbuH,UAGJjG,qBAAU,WACF5C,EAAKhB,UACLgC,KAAMC,IAAI,oBACLmB,MAAK,SAAClB,GACHyJ,EAAY,CAACD,SAAUxJ,EAAII,KAAMtC,SAAS,OAGlDgC,KAAMC,IAAI,eACLmB,MAAK,SAAClB,GACHwU,EAAW,CAACpU,KAAMJ,EAAII,KAAMtC,SAAS,UAGhD,CAACgB,IAEN,IAoCM4V,EAAiB,SAAC1S,GACE,WAAlBA,EAAE4J,OAAO3M,KACT2R,EAAW,2BACJrO,GADG,mBAELP,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAOE,iBAG9B8E,EAAW,2BACJrO,GADG,mBAELP,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAO1J,UAetC,IAAIxD,EAAUZ,QACaY,EAAU8K,SAAS6C,KAAI,SAAA7C,GAC1C,MAAO,CACHtH,MAAOsH,EAASpG,MAAOkJ,MAAM,GAAD,OAAK9C,EAASpG,WAiBtD,IAAIoJ,EAAsBpD,GAAaiD,KAAI,SAAAI,GACvC,MAAO,CACHvK,MAAOuK,EAAaH,MAAM,GAAD,OAAKG,OAiBtC,IAAI8H,EAAQzW,QACR,IAAI+U,EAAc0B,EAAQnU,KAAKiM,KAAI,SAAAhJ,GAC/B,MAAO,CACHnB,MAAOmB,EAAIQ,IAAKyI,MAAM,GAAD,OAAKjJ,EAAIQ,SAIlC8Q,EAAa,SAAC3S,GACFA,EAAE,GACduS,EAAQnU,KAAKiM,KAAI,SAAAhJ,GACb,GAAIrB,EAAEE,QAAUmB,EAAIQ,IAAK,CAErB,IAAI+Q,EAAkBpS,OAAOC,KAAKY,EAAIX,UAAU,IAAI,GAChDmS,EAAgBrS,OAAOsB,OAAOT,EAAIX,UAAU,IAAI,GAChDoS,EAAsBtS,OAAOsB,OAAOT,EAAIX,UAAU,IAAI,GAC1DkO,EAAW,2BACJrO,GADG,IAEN2H,QAAS0K,EACTzK,MAAO0K,EACPlE,aAAcmE,KAIlB,IAAIvK,EAAehI,EAAQ2H,QAAQM,WAC/BC,EAAalI,EAAQ4H,MACrBO,EAAYnI,EAAQoO,aAEpB8D,EAAiB,GACrBA,EAFelK,GAEYE,EAC3BgK,EAAc,KAAW/J,EAEzBb,EAAQ,2BACDzJ,GADA,IAEHyD,IAAKR,EAAIQ,IACTd,KAAMM,EAAIN,KACVsE,SAAUhE,EAAIgE,SACdrD,IAAKX,EAAIW,IACTtB,UAAW,CAAC+R,GACZnN,WAAYjE,EAAIiE,WAChBG,UAAWpE,EAAIoE,UACfE,UAAWtE,EAAIsE,kBAOnC,IACI+E,EAAuB,kBAACC,GAAA,EAAD,CAAO3C,KAAMA,EAAM4C,QAAQ,WAA3B,IADD,WACC,KACrBC,EAAe,yCAAG,WAAO7K,GAAP,gBAAAnC,EAAA,0DAES,IADhBmC,EAAEiK,cACNa,gBAFW,gBAGhB9K,EAAEC,iBACFD,EAAE+K,kBACF9C,GAAQ,GACRF,GAAa,GANG,8BAShBA,GAAa,GACb/H,EAAEC,kBAGE8S,EAAkB3U,GACNsC,UAAY,CAAC+R,GAdb,UAeEJ,EAAUU,GAfZ,eAiBhBlL,EAAQV,IACR8D,YAAW,WAAMhD,GAAQ,KAAQ,KAlBjB,4CAAH,sDAuBf+F,EAAe,yCAAG,WAAOhO,GAAP,UAAAnC,EAAA,6DACPmC,EAAEiK,cACfjK,EAAEC,iBAFkB,SAGFqS,EAAUlU,GAHR,cAIpB2O,GAAa,GAJO,2CAAH,sDAOf7B,EAAa,CACfC,MAAO,SAACC,EAAMrO,GAAP,mBAAC,eACDqO,GADA,IAEHC,MAAO,YAKf,OAAOvO,EAAKhB,SAAWY,EAAUZ,QAC7B,kBAAC,GAAD,MAEI,6BACI,yBAAK8D,UAAU,eACX,wBAAIA,UAAU,cAAd,gBAIJ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,kBAACE,GAAA,EAAD,CAAMwL,YAAU,EAACxD,UAAWA,EAAW/H,SAAU8K,GAC7C,kBAAC/K,GAAA,EAAKyL,IAAN,KACI,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,KAAY,2CACZ,kBAAC,KAAD,CACIC,SAAU8G,EACV7G,QACI+E,EAEJ9E,OAAQb,IAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,sBAIR,kBAACnM,GAAA,EAAKyL,IAAN,KACI,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,aACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOa,EACP8K,SA3NpB,SAAC7L,GAErB,GADAiI,GAAQ,GACc,WAAlBjI,EAAE4J,OAAO3M,KACT4K,EAAQ,2BACDzJ,GADA,mBAEF4B,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAOE,sBAE3B,IAA0B,IAArB9J,EAAE4J,OAAOG,UAAyC,IAArB/J,EAAE4J,OAAOG,SAAuC,wBAAjB/J,EAAE4J,OAAOC,KAO7EhC,EAAQ,2BACDzJ,GADA,mBAEF4B,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAO1J,aAT+E,CAC7G,IAAM8J,EAA+B,UAAvBhK,EAAEiK,cAAc5F,GAC9BwD,EAAQ,2BACDzJ,GADA,IAEHmH,eAAgByE,OAiNgBH,KAAK,OACLqC,UAAQ,EACRjP,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAEJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,gBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOK,EAAQ2H,QACf2B,KAAK,UACLgC,SAAU6G,EACVxG,UAAQ,EACRjP,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,sBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOK,EAAQ4H,MACf0B,KAAK,QACLgC,SAAU6G,EACVxG,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAIJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBACtC,kBAAC7L,GAAA,EAAK8L,MAAN,uBAA4BrL,EAAQoO,cAChC,kBAAC,KAAD,CACI9C,SA3KZ,SAAC7L,GACjBA,EAAE,GACdoH,GAAaiD,KAAI,SAAAI,GACTzK,EAAEE,QAAUuK,GACZmE,EAAW,2BACJrO,GADG,IAENoO,aAAclE,SAsKcqB,QACItB,EAEJ0B,UAAQ,EACRH,OAAQb,IAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,oBAEA,kBAAC9L,GAAA,EAAKkM,QAAN,CACIxJ,GAAG,SACH6B,GAAG,6BACHwH,SA3PnB,SAAC7L,GACtB6H,EAAQ,2BACDzJ,GADA,IAEHqH,UAAW8G,QAAQvM,EAAE4J,OAAO1J,YA0PQ,4BAAQA,OAAO,EAAM2J,KAAK,QAA1B,OACA,4BAAQ3J,MAAO,GAAI2J,KAAK,SAAxB,QAIJ,kBAAC/J,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBACtC,kBAAC7L,GAAA,EAAK8L,MAAN,oBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACIxJ,GAAG,SACH6B,GAAG,6BACHwH,SAhQnB,SAAC7L,GACtB6H,EAAQ,2BACDzJ,GADA,IAEHuH,UAAW4G,QAAQvM,EAAE4J,OAAO1J,YA+PQ,4BAAQA,OAAO,EAAM2J,KAAK,QAA1B,OACA,4BAAQ3J,MAAO,GAAI2J,KAAK,SAAxB,SAIZ,kBAAC2C,GAAA,EAAD,CAAQvP,KAAK,UAAb,cACA,6BACA,6BACA,kBAAC,KAAD,CAAMiF,GAAG,WAAU,kBAACsK,GAAA,EAAD,CAAQhK,GAAIiJ,KAAKC,GAAG,IAAId,QAAQ,mBAAhC,YACnB,6BACA,6BACCF,EAED,kBAAC8B,GAAA,EAAD,CAAQrK,QAvVrB,kBAAM4K,GAAa,IAuVuBvK,GAAIiJ,KAAKC,GAAG,IAAId,QAAQ,UAArD,UAEA,kBAACqD,GAAA,EAAD,CAAOjG,KAAM8E,EAAWoB,OAAQlB,GAC5B,kBAACiB,GAAA,EAAME,OAAP,CAAcC,aAAW,GACzB,kBAACH,GAAA,EAAMI,MAAP,gDAEA,kBAACJ,GAAA,EAAMK,OAAP,KACA,kBAAC9B,GAAA,EAAD,CAAQ5B,QAAQ,YAAYzI,QAAS6K,GAArC,SAGA,kBAACR,GAAA,EAAD,CAAQ5B,QAAQ,SAASzI,QAAS6L,GAAlC,yBE/CzBhP,iBALS,SAACjC,GAAD,MAAY,CAChCD,KAAMC,EAAMD,KACZR,KAAMS,EAAMT,QAGwB,CAAC0W,QDrSlB,SAAC3R,GAAD,gDAAS,WAAOzD,GAAP,gBAAAC,EAAA,sEAExBI,QAAQC,IAAImD,GAFY,SAGNvD,KAAMyJ,KAAK,kBAAmBlG,GAHxB,OAGlBrD,EAHkB,OAIxBJ,EAAS,CACLX,KAAMpE,EACNqE,QAASc,IAEbJ,EAASO,MARe,gDAUxBF,QAAQI,MAAR,MAVwB,yDAAT,wDCqSRW,EA7TO,SAAC,GAAoC,IAAnClC,EAAkC,EAAlCA,KAAqBkW,GAAa,EAA5B1W,KAA4B,EAAtBmD,QAAsB,EAAbuT,SACzC,EAAiC5S,mBAAS,CACtCoH,SAAU,GACV1L,SAAS,IAFb,oBAAOY,EAAP,KAAkB+K,EAAlB,KAIA,EAAwBrH,mBAAS+G,IAAjC,oBAAO/I,EAAP,KAAayJ,EAAb,KACA,EAAkCzH,oBAAS,GAA3C,oBAAO0H,EAAP,KAAkBC,EAAlB,KACA,EAAwB3H,oBAAS,GAAjC,oBAAO4H,EAAP,KAAaC,EAAb,KACA,EAA8B7H,mBAAS,CACnC8H,QAAS,GACTC,MAAO,GACPwG,aAAc,KAHlB,oBAAOpO,EAAP,KAAgBqO,EAAhB,KAMIgE,EAAkBrS,EAAQ2H,QAAQM,WAClCqK,EAAgBtS,EAAQ4H,MACxB8K,EAAe1S,EAAQoO,aAEvB8D,EAAiB,GACrBA,EAFkBG,GAEYC,EAC9BJ,EAAc,KAAWQ,EAGzB,IACIpR,EAOazD,EAPbyD,IACAd,EAMa3C,EANb2C,KAMa3C,EALbiH,SAKajH,EAJb4D,IAIa5D,EAHbsC,UAGatC,EAFbkH,WAEalH,EADbqH,UACarH,EAAbuH,UAGJjG,qBAAU,WAKF5C,EAAKhB,SACLgC,KAAMC,IAAI,oBACLmB,MAAK,SAAClB,GACHyJ,EAAY,CAACD,SAAUxJ,EAAII,KAAMtC,SAAS,SAGrD,CAACgB,IAEN,IAAM6M,EAAkB,SAAC3J,GAErB,GADAiI,GAAQ,GACc,WAAlBjI,EAAE4J,OAAO3M,KACT4K,EAAQ,2BACDzJ,GADA,mBAEF4B,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAOE,sBAE3B,IAA0B,IAArB9J,EAAE4J,OAAOG,UAAyC,IAArB/J,EAAE4J,OAAOG,SAAuC,wBAAjB/J,EAAE4J,OAAOC,KAO7EhC,EAAQ,2BACDzJ,GADA,mBAEF4B,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAO1J,aAT+E,CAC7G,IAAM8J,EAA+B,UAAvBhK,EAAEiK,cAAc5F,GAC9BwD,EAAQ,2BACDzJ,GADA,IAEHmH,eAAgByE,OAyBtB0I,EAAiB,SAAC1S,GACE,WAAlBA,EAAE4J,OAAO3M,KACT2R,EAAW,2BACJrO,GADG,mBAELP,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAOE,iBAG9B8E,EAAW,2BACJrO,GADG,mBAELP,EAAE4J,OAAOC,KAAO7J,EAAE4J,OAAO1J,UAMtC,IAAIxD,EAAUZ,QACV,IAAIsO,EAAmB1N,EAAU8K,SAAS6C,KAAI,SAAA7C,GAC1C,MAAO,CACHtH,MAAOsH,EAASpG,MAAOkJ,MAAM,GAAD,OAAK9C,EAASpG,WAI9CmJ,EAAkB,SAACvK,GACPA,EAAE,GACdtD,EAAU8K,SAAS6C,KAAI,SAAA7C,GACfxH,EAAEE,QAAUsH,EAASpG,OACrByG,EAAQ,2BACDzJ,GADA,IAEHiH,SAAUmC,EAASpG,aAOvC,IAAIoJ,EAAsBpD,GAAaiD,KAAI,SAAAI,GACvC,MAAO,CACHvK,MAAOuK,EAAaH,MAAM,GAAD,OAAKG,OAmBlCC,EAAuB,kBAACC,GAAA,EAAD,CAAO3C,KAAMA,EAAM4C,QAAQ,WAA3B,IADD,WACC,KACrBC,EAAe,yCAAG,WAAO7K,GAAP,UAAAnC,EAAA,0DAES,IADhBmC,EAAEiK,cACNa,gBAFW,gBAGhB9K,EAAEC,iBACFD,EAAE+K,kBACF9C,GAAQ,GACRF,GAAa,GANG,8BAQhBA,GAAa,GACb/H,EAAEC,iBAEoB7B,EACNsC,UAAY,CAAC+R,GAZb,UAcEO,EAAQ5U,GAdV,eAgBhByJ,EAAQV,IACR8D,YAAW,WAAMhD,GAAQ,KAAQ,KAjBjB,4CAAH,sDAsBfiD,EAAa,CACfC,MAAO,SAACC,EAAMrO,GAAP,mBAAC,eACDqO,GADA,IAEHC,MAAO,YAIf,OAAOvO,EAAKhB,SAAWY,EAAUZ,QAC7B,kBAAC,GAAD,MAEI,6BACI,yBAAK8D,UAAU,eACX,wBAAIA,UAAU,cAAd,4BAIJ,yBAAKA,UAAU,OACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,kBAACE,GAAA,EAAD,CAAMwL,YAAU,EAACxD,UAAWA,EAAW/H,SAAU8K,GAC7C,kBAAC/K,GAAA,EAAKyL,IAAN,KACI,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,KAAY,gDACZ,kBAAC,KAAD,CACIC,SAAUtB,EACVuB,QACI1B,EAEJ2B,OAAQb,IAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,sBAGR,kBAACnM,GAAA,EAAKyL,IAAN,KACI,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,aACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOa,EACP8K,SAAUlC,EACVE,KAAK,OACLqC,UAAQ,EACRjP,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAEJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,aACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAO2B,EACPgI,KAAK,MACLgC,SAAUlC,EACVuC,UAAQ,EACRjP,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,sBAMR,kBAACnM,GAAA,EAAKyL,IAAN,KACI,kBAACzL,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,KAAKC,UAAU,sBAC/B,kBAAC7L,GAAA,EAAK8L,MAAN,gBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOK,EAAQ2H,QACf2B,KAAK,UACLgC,SAAU6G,EACVxG,UAAQ,EACRjP,KAAK,SAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAGR,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,sBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACI9L,MAAOK,EAAQ4H,MACf0B,KAAK,QACLgC,SAAU6G,EACVxG,UAAQ,EACRjP,KAAK,WAGT,kBAAC6C,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBACtC,kBAAC7L,GAAA,EAAK8L,MAAN,aACI,kBAAC,KAAD,CACIC,SAnIZ,SAAC7L,GACjBA,EAAE,GACdoH,GAAaiD,KAAI,SAAAI,GACTzK,EAAEE,QAAUuK,GACZmE,EAAW,2BACJrO,GADG,IAENoO,aAAclE,SA8HcqB,QACItB,EAEJ0B,UAAQ,EACRH,OAAQb,IAEZ,kBAACpL,GAAA,EAAKkM,QAAQC,SAAd,qBAGJ,kBAACnM,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBAClC,kBAAC7L,GAAA,EAAK8L,MAAN,oBAEA,kBAAC9L,GAAA,EAAKkM,QAAN,CACIxJ,GAAG,SACH6B,GAAG,6BACHwH,SA1MnB,SAAC7L,GACtB6H,EAAQ,2BACDzJ,GADA,IAEHqH,UAAW8G,QAAQvM,EAAE4J,OAAO1J,YAyMQ,4BAAQA,OAAO,EAAM2J,KAAK,QAA1B,OACA,4BAAQ3J,MAAO,GAAI2J,KAAK,SAAxB,QAIJ,kBAAC/J,GAAA,EAAK0L,MAAN,CAAYhJ,GAAIiJ,KAAKC,GAAG,IAAIC,UAAU,sBACtC,kBAAC7L,GAAA,EAAK8L,MAAN,oBACA,kBAAC9L,GAAA,EAAKkM,QAAN,CACIxJ,GAAG,SACH6B,GAAG,6BACHwH,SA/MnB,SAAC7L,GACtB6H,EAAQ,2BACDzJ,GADA,IAEHuH,UAAW4G,QAAQvM,EAAE4J,OAAO1J,YA8MQ,4BAAQA,OAAO,EAAM2J,KAAK,QAA1B,OACA,4BAAQ3J,MAAO,GAAI2J,KAAK,SAAxB,SAIZ,kBAAC2C,GAAA,EAAD,CAAQvP,KAAK,UAAb,cACA,6BACA,6BACA,kBAAC,KAAD,CAAMiF,GAAG,eAAc,kBAACsK,GAAA,EAAD,CAAQ5B,QAAQ,WAAhB,gBACvB,6BACA,6BACCF,WC7OtBwI,ICtEA,I,ODwBH,WAMV,OAJAxT,qBAAU,WACRpC,GAAMM,SAASO,QACd,IAGD,kBAAC,KAAD,CAAUb,MAAOA,IACf,kBAAC,KAAD,KAEE,kBAAC,WAAD,KACE,6BAASsC,UAAU,sBAEjB,kBAAC,KAAD,CAAOuT,UAAWC,KAClB,yBAAKxT,UAAU,qCACb,kBAAC,KAAD,CAAOuT,UAAWE,KAElB,yBAAKzT,UAAU,cACb,yBAAKA,UAAU,mBACb,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAO0T,OAAK,EAAC3P,KAAK,SAASwP,UAAWI,KACtC,kBAAC,KAAD,CAAOD,OAAK,EAAC3P,KAAK,IAAIwP,UAAWK,KACjC,kBAAC,KAAD,CAAOF,OAAK,EAAC3P,KAAK,WAAWwP,UAAWM,KACxC,kBAAC,KAAD,CAAOH,OAAK,EAAC3P,KAAK,eAAewP,UAAWO,KAC5C,kBAAC,KAAD,CAAOJ,OAAK,EAAC3P,KAAK,UAAUwP,UAAWQ,KACvC,kBAAC,KAAD,CAAOL,OAAK,EAAC3P,KAAK,cAAcwP,UAAWS,KAC3C,kBAAC,KAAD,CAAON,OAAK,EAAC3P,KAAK,YAAYwP,UAAWU,KACzC,kBAAC,KAAD,CAAOP,OAAK,EAAC3P,KAAK,eAAewP,UAAWW,KAC5C,kBAAC,KAAD,CAAOR,OAAK,EAAC3P,KAAK,eAAewP,UAAWY,KAC5C,kBAAC,KAAD,CAAOT,OAAK,EAAC3P,KAAK,kBAAkBwP,UAAWa,KAC/C,kBAAC,KAAD,CAAOV,OAAK,EAAC3P,KAAK,YAAYwP,UAAWc,KACzC,kBAAC,KAAD,CAAOX,OAAK,EAAC3P,KAAK,gBAAgBwP,UAAWe,KAC7C,kBAAC,KAAD,CAAOZ,OAAK,EAAC3P,KAAK,UAAUwP,UAAWgB,KACvC,kBAAC,KAAD,CAAOb,OAAK,EAAC3P,KAAK,cAAcwP,UAAWiB,eEpD/DC,IAASC,OACL,kBAAC,GAAD,MACFlS,SAASmS,eAAe,W","file":"static/js/main.e3ad4937.chunk.js","sourcesContent":["export const AUTH_ERROR = \"AUTH_ERROR\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const SET_SUCCESS_ALERT = \"SET_SUCCESS_ALERT\";\r\nexport const SET_ERROR_ALERT = \"SET_ERROR_ALERT\";\r\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\r\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const USER_LOADED = \"USER_LOADED\";\r\n\r\nexport const GET_ALL_CARDS = \"GET_ALL_CARDS\";\r\nexport const GET_CARD = \"GET_CARD\";\r\nexport const ADD_CARD = \"ADD_CARD\";\r\nexport const DELETE_CARD = \"DELETE_CARD\";\r\nexport const UPDATE_CARD = \"UPDATE_CARD\";\r\n\r\nexport const GET_PETS = \"GET_PETS\";\r\nexport const ADD_PET = \"ADD_PET\";\r\nexport const DELETE_PET = \"DELETE_PET\";\r\nexport const UPDATE_PET = \"UPDATE_PET\";\r\n\r\nexport const GET_TITLES = \"GET_TITLES\";\r\nexport const ADD_TITLE = \"ADD_TITLE\";\r\nexport const DELETE_TITLE = \"DELETE_TITLE\";\r\nexport const UPDATE_TITLE = \"UPDATE_TITLE\";\r\n\r\nexport const GET_ARMS = \"GET_ARMS\";\r\nexport const ADD_ARM = \"ADD_ARM\";\r\nexport const DELETE_ARM = \"DELETE_ARM\";\r\nexport const UPDATE_ARM = \"UPDATE_ARM\";\r\n\r\n\r\nexport const GET_MATCHES = \"GET_MATCHES\";\r\nexport const ADD_MATCH = \"ADD_MATCH\";\r\nexport const DELETE_MATCH = \"DELETE_MATCH\";\r\nexport const UPDATE_MATCH = \"UPDATE_MATCH\";\r\n\r\nexport const GET_VAULTS = \"GET_VAULTS\";\r\nexport const ADD_VAULT = \"ADD_VAULT\";\r\nexport const DELETE_VAULT = \"DELETE_VAULT\";\r\nexport const UPDATE_VAULT = \"UPDATE_VAULT\";\r\n\r\nexport const GET_ABYSS = \"GET_ABYSS\";\r\nexport const ADD_ABYSS = \"ADD_ABYSS\";\r\nexport const DELETE_ABYSS = \"DELETE_ABYSS\";\r\nexport const UPDATE_ABYSS = \"UPDATE_ABYSS\";\r\n\r\nexport const GET_UNIVERSES = \"GET_UNIVERSES\";\r\nexport const ADD_UNIVERSE = \"ADD_UNIVERSE\";\r\nexport const DELETE_UNIVERSE = \"DELETE_UNIVERSE\";\r\nexport const UPDATE_UNIVERSE = \"UPDATE_UNIVERSE\";\r\n\r\nexport const GET_BOSSES = \"GET_BOSSES\";\r\nexport const ADD_BOSS = \"ADD_BOSS\";\r\nexport const DELETE_BOSS = \"DELETE_BOSS\";\r\nexport const UPDATE_BOSS = \"UPDATE_BOSS\";\r\n\r\nexport const GET_TEAMS = \"GET_TEAMS\";\r\nexport const ADD_TEAM = \"ADD_TEAM\";\r\nexport const DELETE_TEAM = \"DELETE_TEAM\";\r\nexport const UPDATE_TEAM = \"UPDATE_TEAM\";\r\n\r\nexport const GET_GAMES = \"GET_GAMES\";\r\nexport const ADD_GAME = \"ADD_GAME\";\r\nexport const DELETE_GAME = \"DELETE_GAME\";\r\nexport const UPDATE_GAME = \"UPDATE_GAME\";\r\n\r\nexport const GET_GODS = \"GET_GODS\";\r\nexport const ADD_GOD = \"ADD_GOD\";\r\nexport const DELETE_GOD = \"DELETE_GOD\";\r\nexport const UPDATE_GOD = \"UPDATE_GOD\";\r\n\r\nexport const GET_SESSIONS = \"GET_SESSIONS\";\r\nexport const ADD_SESSION = \"ADD_SESSION\";\r\nexport const DELETE_SESSION = \"DELETE_SESSION\";\r\nexport const UPDATE_SESSION = \"UPDATE_SESSION\";","import {\r\n    USER_LOADED,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n  } from \"../actiontypes/index\";\r\n  \r\n  const initialState = {\r\n    isAuthenticated: false,\r\n    loading: true,\r\n    user: null,\r\n  };\r\n  \r\n  export default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n      case USER_LOADED:\r\n        return { ...state, isAuthenticated: true, loading: false, user: payload };\r\n\r\n      case LOGIN_SUCCESS:\r\n        return { ...state, ...payload, isAuthenticated: true, loading: false };\r\n      case LOGOUT:\r\n        return { ...state, isAuthenticated: false, loading: false };\r\n      default:\r\n        return initialState;\r\n    }\r\n  }\r\n  ","import {\r\n    GET_ARMS,\r\n    ADD_ARM,\r\n    DELETE_ARM,\r\n    UPDATE_ARM\r\n} from '../actiontypes/index';\r\n\r\nconst initialState = {\r\n    arms: null,\r\n    loading: false,\r\n    alert: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case GET_ARMS:\r\n            return { ...state, arms: payload, loading: false }\r\n        case ADD_ARM:\r\n            return { ...state, alert: payload }\r\n        case DELETE_ARM:\r\n            return { ...state, alert: payload }\r\n        case UPDATE_ARM:\r\n            return { ...state, alert: payload }\r\n        default:\r\n            return initialState;\r\n    }\r\n}","import {\r\n    GET_BOSSES,\r\n    ADD_BOSS,\r\n    DELETE_BOSS,\r\n    UPDATE_BOSS\r\n} from '../actiontypes/index';\r\n\r\nconst initialState = {\r\n    bosses: null,\r\n    loading: false,\r\n    alert: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case GET_BOSSES:\r\n            return { ...state, bosses: payload, loading: false }\r\n        case ADD_BOSS:\r\n            return { ...state, alert: payload }\r\n        case DELETE_BOSS:\r\n            return { ...state, alert: payload }\r\n        case UPDATE_BOSS:\r\n            return { ...state, alert: payload }\r\n        default:\r\n            return initialState;\r\n    }\r\n}","import {\r\n    GET_ALL_CARDS,\r\n    GET_CARD,\r\n    ADD_CARD,\r\n    DELETE_CARD,\r\n    UPDATE_CARD\r\n} from '../actiontypes/index';\r\n\r\nconst initialState = {\r\n    cards: null,\r\n    loading: false,\r\n    alert: null,\r\n    isAuthenticated: null,\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case GET_ALL_CARDS:\r\n            return { ...state, cards: payload, loading: false, isAuthenticated: true }\r\n        case GET_CARD:\r\n            return { ...state, cards: payload, loading: false, isAuthenticated: true }\r\n        case ADD_CARD:\r\n            return { ...state, alert: payload }\r\n        case DELETE_CARD:\r\n            return { ...state, alert: payload }\r\n        case UPDATE_CARD:\r\n            return { ...state, alert: payload }\r\n        default:\r\n            return initialState;\r\n    }\r\n}","import {\r\n    GET_GAMES,\r\n    ADD_GAME,\r\n    DELETE_GAME,\r\n    UPDATE_GAME\r\n} from '../actiontypes/index';\r\n\r\nconst initialState = {\r\n    games: null,\r\n    loading: false,\r\n    alert: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case GET_GAMES:\r\n            return { ...state, games: payload, loading: false }\r\n        case ADD_GAME:\r\n            return { ...state, alert: payload }\r\n        case DELETE_GAME:\r\n            return { ...state, alert: payload }\r\n        case UPDATE_GAME:\r\n            return { ...state, alert: payload }\r\n        default:\r\n            return initialState;\r\n    }\r\n}","import {\r\n    GET_GODS,\r\n    ADD_GOD,\r\n    DELETE_GOD,\r\n    UPDATE_GOD\r\n} from '../actiontypes/index';\r\n\r\nconst initialState = {\r\n    bosses: null,\r\n    loading: false,\r\n    alert: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case GET_GODS:\r\n            return { ...state, bosses: payload, loading: false }\r\n        case ADD_GOD:\r\n            return { ...state, alert: payload }\r\n        case DELETE_GOD:\r\n            return { ...state, alert: payload }\r\n        case UPDATE_GOD:\r\n            return { ...state, alert: payload }\r\n        default:\r\n            return initialState;\r\n    }\r\n}","import {\r\n    GET_MATCHES,\r\n    ADD_MATCH,\r\n    DELETE_MATCH,\r\n    UPDATE_MATCH\r\n} from '../actiontypes/index';\r\n\r\nconst initialState = {\r\n    matches: null,\r\n    loading: false,\r\n    alert: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case GET_MATCHES:\r\n            return { ...state, matches: payload, loading: false }\r\n        case ADD_MATCH:\r\n            return { ...state, alert: payload }\r\n        case DELETE_MATCH:\r\n            return { ...state, alert: payload }\r\n        case UPDATE_MATCH:\r\n            return { ...state, alert: payload }\r\n        default:\r\n            return initialState;\r\n    }\r\n}","import {\r\n    GET_PETS,\r\n    ADD_PET,\r\n    DELETE_PET,\r\n    UPDATE_PET\r\n} from '../actiontypes/index';\r\n\r\nconst initialState = {\r\n    pets: null,\r\n    loading: false,\r\n    alert: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case GET_PETS:\r\n            return { ...state, pets: payload, loading: false }\r\n        case ADD_PET:\r\n            return { ...state, alert: payload }\r\n        case DELETE_PET:\r\n            return { ...state, alert: payload }\r\n        case UPDATE_PET:\r\n            return { ...state, alert: payload }\r\n        default:\r\n            return initialState;\r\n    }\r\n}","import {\r\n    GET_SESSIONS,\r\n    ADD_SESSION,\r\n    DELETE_SESSION,\r\n    UPDATE_SESSION\r\n} from '../actiontypes/index';\r\n\r\nconst initialState = {\r\n    sessions: null,\r\n    loading: false,\r\n    alert: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case GET_SESSIONS:\r\n            return { ...state, sessions: payload, loading: false }\r\n        case ADD_SESSION:\r\n            return { ...state, alert: payload }\r\n        case DELETE_SESSION:\r\n            return { ...state, alert: payload }\r\n        case UPDATE_SESSION:\r\n            return { ...state, alert: payload }\r\n        default:\r\n            return initialState;\r\n    }\r\n}","import {\r\n    GET_TEAMS,\r\n    ADD_TEAM,\r\n    DELETE_TEAM,\r\n    UPDATE_TEAM\r\n} from '../actiontypes/index';\r\n\r\nconst initialState = {\r\n    teams: null,\r\n    loading: false,\r\n    alert: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case GET_TEAMS:\r\n            return { ...state, teams: payload, loading: false }\r\n        case ADD_TEAM:\r\n            return { ...state, alert: payload }\r\n        case DELETE_TEAM:\r\n            return { ...state, alert: payload }\r\n        case UPDATE_TEAM:\r\n            return { ...state, alert: payload }\r\n        default:\r\n            return initialState;\r\n    }\r\n}","import {\r\n    GET_TITLES,\r\n    ADD_TITLE,\r\n    DELETE_TITLE,\r\n    UPDATE_TITLE\r\n} from '../actiontypes/index';\r\n\r\nconst initialState = {\r\n    titles: null,\r\n    loading: false,\r\n    alert: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case GET_TITLES:\r\n            return { ...state, titles: payload, loading: false }\r\n        case ADD_TITLE:\r\n            return { ...state, alert: payload }\r\n        case DELETE_TITLE:\r\n            return { ...state, alert: payload }\r\n        case UPDATE_TITLE:\r\n            return { ...state, alert: payload }\r\n        default:\r\n            return initialState;\r\n    }\r\n}","import {\r\n    GET_UNIVERSES,\r\n    ADD_UNIVERSE,\r\n    DELETE_UNIVERSE,\r\n    UPDATE_UNIVERSE\r\n} from '../actiontypes/index';\r\n\r\nconst initialState = {\r\n    universes: null,\r\n    loading: false,\r\n    alert: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case GET_UNIVERSES:\r\n            return { ...state, universes: payload, loading: false }\r\n        case ADD_UNIVERSE:\r\n            return { ...state, alert: payload }\r\n        case DELETE_UNIVERSE:\r\n            return { ...state, alert: payload }\r\n        case UPDATE_UNIVERSE:\r\n            return { ...state, alert: payload }\r\n        default:\r\n            return initialState;\r\n    }\r\n}","import {\r\n    GET_ABYSS,\r\n    ADD_ABYSS,\r\n    DELETE_ABYSS,\r\n    UPDATE_ABYSS\r\n} from '../actiontypes/index';\r\n\r\nconst initialState = {\r\n    abyss: null,\r\n    loading: false,\r\n    alert: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case GET_ABYSS:\r\n            return { ...state, abyss: payload, loading: false }\r\n        case ADD_ABYSS:\r\n            return { ...state, alert: payload }\r\n        case DELETE_ABYSS:\r\n            return { ...state, alert: payload }\r\n        case UPDATE_ABYSS:\r\n            return { ...state, alert: payload }\r\n        default:\r\n            return initialState;\r\n    }\r\n}","import {\r\n    GET_VAULTS,\r\n    ADD_VAULT,\r\n    DELETE_VAULT,\r\n    UPDATE_VAULT\r\n} from '../actiontypes/index';\r\n\r\nconst initialState = {\r\n    vaults: null,\r\n    loading: false,\r\n    alert: null\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch (type) {\r\n        case GET_VAULTS:\r\n            return { ...state, vaults: payload, loading: false }\r\n        case ADD_VAULT:\r\n            return { ...state, alert: payload }\r\n        case DELETE_VAULT:\r\n            return { ...state, alert: payload }\r\n        case UPDATE_VAULT:\r\n            return { ...state, alert: payload }\r\n        default:\r\n            return initialState;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport auth from './auth';\r\nimport arms from './arms';\r\nimport bosses from './bosses';\r\nimport cards from './cards';\r\nimport games from './games';\r\nimport gods from './gods';\r\nimport matches from './matches';\r\nimport pets from './pets';\r\nimport sessions from './sessions';\r\nimport teams from './teams';\r\nimport titles from './titles';\r\nimport universes from './universes';\r\nimport abyss from \"./abyss\";\r\nimport vaults from './vaults';\r\n\r\nexport default combineReducers({\r\n    auth,\r\n    arms,\r\n    bosses,\r\n    cards,\r\n    games,\r\n    gods,\r\n    matches,\r\n    pets,\r\n    sessions,\r\n    teams,\r\n    titles,\r\n    universes,\r\n    vaults,\r\n    abyss\r\n});","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers/index\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleWare = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleWare))\r\n);\r\n\r\nexport default store;\r\n","import axios from \"axios\";\r\nimport { AUTH } from \"../../UTIL/config\";\r\nimport {\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from \"../../actiontypes/index\";\r\n\r\n\r\nexport const login = () => async (dispatch) => {\r\n    try {\r\n        axios.get(\"/auth\")\r\n            .then((res) => {\r\n                console.log(res)\r\n            })\r\n            .catch((err) => {\r\n                window.location.href = AUTH\r\n                console.log(\"An Error Occurred. \")\r\n            })\r\n    } catch (err) {\r\n        console.log(err)\r\n    }   \r\n      \r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get(\"/auth/logout\");\r\n        console.log(res)\r\n        dispatch({\r\n            type: LOGOUT,\r\n            payload: res\r\n        })\r\n\r\n    } catch (err) {\r\n        console.log(err)\r\n    }   \r\n      \r\n};\r\n\r\nexport const loadUser = () => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get(\"/auth/user\")\r\n        dispatch({\r\n            type: USER_LOADED,\r\n            payload: res.data,\r\n        });\r\n    } catch(err) {\r\n        console.error(err)\r\n        dispatch({\r\n            type: AUTH_ERROR\r\n        })\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/pcg_logo.44c4ac5d.png\";","export default __webpack_public_path__ + \"static/media/spinner.74269024.gif\";","import React from 'react'\r\nimport spinner from '../../assets/images/spinner.gif'\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div>\r\n            <img\r\n                alt=\"spinner\"\r\n                src={spinner}\r\n                style={{ width: \"100px\", margin: \"auto\", display: \"block\", position: \"relative\", right: \"120px\" }}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, Redirect, withRouter } from \"react-router-dom\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { login } from \"../../actions/auth/auth\";\r\nimport logo from '../../assets/images/pcg_logo.png'\r\n// import Alert from \"../alerts/alerts\";\r\nimport Spinner from \"../isLoading/spinner\";\r\n\r\nconst Login = ({ login, auth, history }) => {\r\n\r\n  useEffect(() => {\r\n    if (auth.isAuthenticated) {\r\n      history.push('/')\r\n    }\r\n  }, [auth])\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    login();\r\n  }\r\n\r\n  return auth.isAuthenticated ? (\r\n    <Spinner />\r\n  ) : (\r\n      <div>\r\n        <div className=\"d-flex align-items-center login-card auth px-0\">\r\n          <div className=\"row w-100 mx-0\">\r\n            <div className=\"col-lg-8 mx-auto\">\r\n              <div className=\"card text-left py-5 px-4 px-sm-5\">\r\n                <div className=\"brand-logo\">\r\n                  <img\r\n                    src={logo}\r\n                    alt=\"logo\"\r\n                  />\r\n                </div>\r\n                <h4>Party Chat Gaming</h4>\r\n                <h6 className=\"font-weight-light\">Log in to continue.</h6>\r\n                <Form className=\"pt-3\" onSubmit={onSubmit}>\r\n                  <div className=\"mt-3\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      value=\"login\"\r\n                      className=\"btn btn-block btn-primary btn-lg font-weight-medium auth-form-btn\"\r\n                    >\r\n                      SIGN IN\r\n                  </button>\r\n                  </div>\r\n                  {/* CREATE AN ACCOUNT DISABLED BY CLIENT REQUEST */}\r\n                  {/* <div className=\"text-center mt-4 font-weight-light\">\r\n                    Don't have an account?{\" \"}\r\n                    <Link to=\"/register\" className=\"text-primary\">\r\n                      Create\r\n                  </Link>\r\n                  </div> */}\r\n                </Form>\r\n              </div>\r\n              {/* <Alert /> */}\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(withRouter(Login));\r\n","export const AUTH = \"https://discord.com/api/oauth2/authorize?client_id=861296553704816671&redirect_uri=https%3A%2F%2Fcrowndashboard.herokuapp.com%2Fauth%2Fredirect&response_type=code&scope=identify%20email%20guilds\"\r\n// TEST export const AUTH = \"https://discord.com/api/oauth2/authorize?client_id=861296553704816671&redirect_uri=http%3A%2F%2Flocalhost%3A5000%2Fauth%2Fredirect&response_type=code&scope=email%20guilds\"","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Arm_Widget = ({data}) => {\r\n    const {loading, user} = data;\r\n    const [arm, setArm] = useState({\r\n        arm: {},\r\n        loading: true\r\n    })\r\n    useEffect(() => {\r\n        if(!loading){\r\n            axios.get(`/crown/arms/${user.data.ARM}`)\r\n                .then((res) => {\r\n                    setArm({arm: res, loading: false})\r\n                })\r\n        }\r\n    }, [])\r\n\r\n    if(!arm.loading){\r\n        var ability = Object.keys(arm.arm.data.ABILITIES[0])[0]\r\n        var infliction = arm.arm.data.ABILITIES[0][ability]\r\n    }\r\n    return loading || arm.loading ? <div></div> : (\r\n        <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-6 grid-margin stretch-card\">\r\n            <div className=\"card card-statistics\">\r\n                <div className=\"card-body\">\r\n                    <h1 className=\"card-title\">ARM</h1>\r\n                    <div className=\"clearfix\">\r\n                        <div className=\"float-right\">\r\n                            <i className=\"mdi mdi-shield text-danger icon-lg\"></i>\r\n                        </div>\r\n                        <div className=\"float-left\">\r\n                            <div className=\"fluid-container\">\r\n                                <h3 className=\"font-weight-medium text-right mb-0 text-light\">{arm.arm.data.ARM}</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"text-muted mt-3 mb-0\">\r\n                        <i className=\"mdi mdi-sword mr-1\" aria-hidden=\"true\"></i>\r\n                        {ability} / {infliction}\r\n                        </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    arm: state.arms,\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps)(Arm_Widget)\r\n","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Card_Widget = ({data}) => {\r\n    const {loading, user} = data;\r\n    const [card, setCard] = useState({\r\n        card: {},\r\n        loading: true\r\n    })\r\n    useEffect(() => {\r\n        if(!loading){\r\n            axios.get(`/crown/cards/${user.data.CARD}`)\r\n                .then((res) => {\r\n                    setCard({card: res, loading: false})\r\n                })\r\n        }\r\n    }, [])\r\n\r\n    return loading || card.loading ? <div></div> : (\r\n        <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-6 grid-margin stretch-card\">\r\n            <div className=\"card  card-statistics\">\r\n                <img className=\"card-img\" src={card.card.data.PATH}/>\r\n                <div className=\"card-body\">\r\n                    <div className=\"clearfix\">\r\n                        <h3 className=\"card-title\">{user.data.CARD}</h3>\r\n                    </div>\r\n                    <p className=\"text-muted mt-3 mb-0\">\r\n                        <i className=\"mdi mdi-sword mr-1\" aria-hidden=\"true\"></i>Health: {card.card.data.HLT} \r\n                        <br/>\r\n                        <i className=\"mdi mdi-sword mr-1\" aria-hidden=\"true\"></i>Stamina: {card.card.data.STAM}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    card: state.cards,\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps)(Card_Widget)\r\n","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Title_Widget = ({data}) => {\r\n    const {loading, user} = data;\r\n    const [title, settitle] = useState({\r\n        title: {},\r\n        loading: true\r\n    })\r\n    useEffect(() => {\r\n        if(!loading){\r\n            axios.get(`/crown/titles/${user.data.TITLE}`)\r\n                .then((res) => {\r\n                    settitle({title: res, loading: false})\r\n                })\r\n        }\r\n    }, [])\r\n\r\n    if(!title.loading){\r\n        var ability = Object.keys(title.title.data.ABILITIES[0])[0]\r\n        var infliction = title.title.data.ABILITIES[0][ability]\r\n    }\r\n    return loading || title.loading ? <div></div> : (\r\n        <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-6 grid-margin stretch-card\">\r\n            <div className=\"card card-statistics\">\r\n                <div className=\"card-body\">\r\n                    <h1 className=\"card-title\">TITLE</h1>\r\n                    <div className=\"clearfix\">\r\n                        <div className=\"float-right\">\r\n                            <i className=\"mdi mdi-crown text-warning icon-lg\"></i>\r\n                        </div>\r\n                        <div className=\"float-left\">\r\n                            <div className=\"fluid-container\">\r\n                                <h3 className=\"font-weight-medium text-right mb-0 text-light\">{title.title.data.TITLE}</h3>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"text-muted mt-3 mb-0\">\r\n                        <i className=\"mdi mdi-sword mr-1\" aria-hidden=\"true\"></i>\r\n                        {ability} / {infliction}\r\n                        </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    title: state.titles,\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps)(Title_Widget)\r\n","import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Pet_Widget = ({data}) => {\r\n    const {loading, user} = data;\r\n    const [pet, setPet] = useState({\r\n        pet: {},\r\n        loading: true\r\n    })\r\n    useEffect(() => {\r\n        if(!loading){\r\n            let disname = user.data.DISNAME;\r\n            let updated_disname = disname.replace(\"#\", \"%23\");\r\n            axios.get(`/crown/vault/${updated_disname}`)\r\n                .then((res) => {\r\n                    setPet({pet: res, loading: false})\r\n                })\r\n        }\r\n    }, [])\r\n\r\n    if(!pet.loading){\r\n        var petList = pet.pet.data.PETS;\r\n        var selectedPet;\r\n        for (let pet in petList) {\r\n            if(petList[pet][\"NAME\"] == user.data.PET){\r\n                selectedPet = petList[pet]\r\n            }\r\n        }\r\n        var ability = Object.keys(selectedPet)[3]\r\n        var infliction = Object.values(selectedPet)[3]\r\n        var power = (selectedPet.LVL * selectedPet.BOND) + infliction\r\n    }\r\n    return loading || pet.loading ? <div></div> : (\r\n        <div className=\"col-xl-3 col-lg-3 col-md-3 col-sm-6 grid-margin stretch-card\">\r\n            <div className=\"card  card-statistics\">\r\n                <img className=\"card-img\" src={selectedPet.PATH}/>\r\n                <div className=\"card-body\">\r\n                    <div className=\"clearfix\">\r\n                        <h3 className=\"card-title\">{user.data.PET}</h3>\r\n                    </div>\r\n                    <p className=\"text-muted mt-3 mb-0\">\r\n                        <i className=\"mdi mdi-sword mr-1\" aria-hidden=\"true\"></i>Level: {selectedPet.LVL} \r\n                        <br/>\r\n                        <i className=\"mdi mdi-heart mr-1\" aria-hidden=\"true\"></i>Bond: {selectedPet.BOND}\r\n                        <br/>\r\n                        <i className=\"mdi mdi-heart mr-1\" aria-hidden=\"true\"></i>{ability} / {power}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    card: state.cards,\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps)(Pet_Widget)\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport Arm_Widget from \"../widgets/arm_widget\";\r\nimport Card_Widget from \"../widgets/card_widget\";\r\nimport Title_Widget from \"../widgets/title_widget\";\r\nimport Pet_Widget from \"../widgets/pet_widget\";\r\n// import Spinner from \"../isLoading/spinner\";\r\n// import EmpTable from \"../widgets/empTable\";\r\n// import EmpSearchTable from \"../widgets/empSearchTable\";\r\n// import EmpPrimaryData from \"../widgets/empPrimaryData\";\r\n\r\n\r\nconst Landing = ({ auth, cards, history}) => {\r\n\r\n  const [editButton, setEditButton] = useState(false);\r\n\r\n  const onClickHandler = (e) => {\r\n    e.preventDefault();\r\n    editButton ? setEditButton(false) : setEditButton(true)\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!auth.isAuthenticated) {\r\n      history.push('/login')\r\n    }\r\n  }, [auth])\r\n\r\n\r\n\r\n  return (\r\n      <div>\r\n        <div className=\"row\">\r\n            <Card_Widget data={auth} />\r\n            <Arm_Widget data={auth} />\r\n            <Title_Widget data={auth} />\r\n            <Pet_Widget data={auth} />\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 grid-margin stretch-card\">\r\n            <div className=\"card card-statistics\">\r\n              {/* <div className=\"card-body\">\r\n                <button hidden={payroll.loading} onClick={onClickHandler} type=\"button\" className=\"btn btn-primary btn-rounded btn-icon\">\r\n                  <i className=\"mdi mdi-table-edit\"></i>\r\n                </button> Edit Table\r\n                <button hidden={payroll.loading} onClick={onWideModeHandler} type=\"button\" style={{ 'margin-left': '10px' }} className=\"btn btn-info btn-rounded btn-icon\">\r\n                  <i className=\"mdi mdi-file-excel\"></i>\r\n                </button> Enter Wide Mode\r\n              </div> */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* {!editButton ? <EmpTable /> : <EmpSearchTable />} */}\r\n      </div >\r\n    )\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  cards: state.cards\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(withRouter(Landing));\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { Trans } from \"react-i18next\";\r\nimport { logout } from \"../../actions/auth/auth\";\r\nimport logo from '../../assets/images/pcg_logo.png';\r\n\r\n// import PaydateDropdown from \"./paydateDropdown/paydateDropdown\";\r\n// import PayrollSearch from \"./payrollSearch/payrollSearch\";\r\n\r\n\r\nconst Navbar = ({ auth, logout, history }) => {\r\n    const { location } = history;\r\n    const toggleOffcanvas = () => {\r\n        document.querySelector(\".sidebar-offcanvas\").classList.toggle(\"active\");\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!auth.isAuthenticated) {\r\n            history.push(\"/login\")\r\n        }\r\n    }, [])\r\n\r\n    //   useEffect(() => {\r\n    //     loadDates();\r\n    //     loadAssociates();\r\n    //   }, [loadDates])\r\n\r\n\r\n    const logoutUser = (e) => {\r\n        e.preventDefault();\r\n        logout();\r\n    }\r\n\r\n    //   let searchHandler = <div></div>;\r\n    //   if (location.pathname === \"/\") {\r\n    //     searchHandler = <PaydateDropdown />;\r\n    //   } else if (location.pathname === \"/employees\") {\r\n    //     searchHandler = <PayrollSearch />;\r\n    //   } else {\r\n    //     searchHandler = <div></div>\r\n    //   }\r\n\r\n    return !auth.isAuthenticated || !auth.user ? (\r\n        <div></div>\r\n    ) : (\r\n        <nav className=\"navbar p-0 fixed-top d-flex flex-row\">\r\n            <div className=\"navbar-brand-wrapper d-flex d-lg-none align-items-center justify-content-center\">\r\n            <Link className=\"navbar-brand brand-logo-mini\" to=\"/\">\r\n                <img\r\n                src={logo}\r\n                alt=\"logo\"\r\n                />\r\n            </Link>\r\n            </div>\r\n            <div className=\"navbar-menu-wrapper flex-grow d-flex align-items-stretch\">\r\n            <button\r\n                className=\"navbar-toggler align-self-center\"\r\n                type=\"button\"\r\n                onClick={() => document.body.classList.toggle(\"sidebar-icon-only\")}\r\n            >\r\n                <span className=\"mdi mdi-menu\"></span>\r\n            </button>\r\n            <ul className=\"navbar-nav w-100\">\r\n                {/* {location.pathname === \"/employees\" ? <PayrollSearch /> : <PaydateDropdown />} */}\r\n                {/* {searchHandler} */}\r\n            </ul>\r\n            <ul className=\"navbar-nav navbar-nav-right\">\r\n                <div as=\"li\" className=\"nav-item d-none d-lg-block\">\r\n                <div as=\"li\" className=\"nav-item dropdown\"></div>\r\n                {/* <div className=\"nav-link btn btn-success create-new-button no-caret\">\r\n                    <Link to=\"/upload\" className=\"nav-link\">  + <Trans>Upload Payroll</Trans> </Link>\r\n                </div> */}\r\n                </div>\r\n\r\n                <Dropdown alignRight as=\"li\" className=\"nav-item\">\r\n                <Dropdown.Toggle\r\n                    as=\"a\"\r\n                    className=\"nav-link cursor-pointer no-caret\"\r\n                >\r\n                    <div className=\"navbar-profile\">\r\n                    <p className=\"mb-0 d-none d-sm-block navbar-profile-name\">\r\n                        { auth.isAuthenticated ? <Trans>{auth.user.data.NAME}</Trans> : <span>Default</span>}\r\n                        { auth.isAuthenticated ? <img src={auth.user.data.AVATAR} className=\"navbar-profile-name profile-pic\"></img> : <span></span>}\r\n                    </p>\r\n                    <i className=\"mdi mdi-menu-down d-none d-sm-block\"></i>\r\n                    </div>\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu className=\"navbar-dropdown preview-list navbar-profile-dropdown-menu\">\r\n                    <Dropdown.Divider />\r\n                    <Dropdown.Item\r\n                    href=\"!#\"\r\n                    onClick={(evt) => evt.preventDefault()}\r\n                    className=\"preview-item\"\r\n                    >\r\n                    <div className=\"preview-thumbnail\">\r\n                        <div className=\"preview-icon bg-dark rounded-circle\">\r\n                        <i className=\"mdi mdi-logout text-danger\"></i>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"preview-item-content\">\r\n                        <p className=\"preview-subject mb-1\" onClick={logoutUser}>\r\n                        <Link to=\"/login\" className=\"nav-link\"><Trans>Log Out</Trans></Link>\r\n                        </p>\r\n                    </div>\r\n                    </Dropdown.Item>\r\n                    <Dropdown.Divider />\r\n\r\n                </Dropdown.Menu>\r\n                </Dropdown>\r\n            </ul>\r\n            <button\r\n                className=\"navbar-toggler navbar-toggler-right d-lg-none align-self-center\"\r\n                type=\"button\"\r\n                onClick={toggleOffcanvas}\r\n            >\r\n                <span className=\"mdi mdi-format-line-spacing\"></span>\r\n            </button>\r\n            </div>\r\n        </nav>\r\n        );\r\n\r\n    }\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout })(withRouter(Navbar));","import React, { useState, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { Trans } from 'react-i18next';\r\nimport { logout } from '../../actions/auth/auth';\r\nimport logo from '../../assets/images/pcg_logo.png';\r\n\r\n\r\nconst Sidebar = (props) => {\r\n  const { auth } = props;\r\n\r\n  const [menuState, setMenuState] = useState({});\r\n\r\n\r\n  const onRouteChanged = () => {\r\n    document.querySelector(\"#sidebar\").classList.remove(\"active\");\r\n    Object.keys(menuState).forEach((i) => {\r\n      setMenuState({ [i]: false });\r\n    });\r\n\r\n    const dropdownPaths = [\r\n      { path: \"/apps\", state: \"appsMenuOpen\" },\r\n      { path: \"/basic-ui\", state: \"basicUiMenuOpen\" },\r\n      { path: \"/advanced-ui\", state: \"advancedUiMenuOpen\" },\r\n      { path: \"/form-elements\", state: \"formElementsMenuOpen\" },\r\n      { path: \"/tables\", state: \"tablesMenuOpen\" },\r\n      { path: \"/maps\", state: \"mapsMenuOpen\" },\r\n      { path: \"/icons\", state: \"iconsMenuOpen\" },\r\n      { path: \"/charts\", state: \"chartsMenuOpen\" },\r\n      { path: \"/user-pages\", state: \"userPagesMenuOpen\" },\r\n      { path: \"/error-pages\", state: \"errorPagesMenuOpen\" },\r\n      { path: \"/general-pages\", state: \"generalPagesMenuOpen\" },\r\n      { path: \"/ecommerce\", state: \"ecommercePagesMenuOpen\" },\r\n      { path: \"/editors\", state: \"editorsMenuOpen\" },\r\n    ];\r\n\r\n    dropdownPaths.forEach((obj) => {\r\n      if (isPathActive(obj.path)) {\r\n        setMenuState({ [obj.state]: true });\r\n      }\r\n    });\r\n  };\r\n\r\n  const isPathActive = (path) => {\r\n    return props.location.pathname.startsWith(path);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (auth.user) {\r\n      onRouteChanged();\r\n      // add class 'hover-open' to sidebar navitem while hover in sidebar-icon-only menu\r\n      const body = document.querySelector(\"body\");\r\n      document.querySelectorAll(\".sidebar .nav-item\").forEach((el) => {\r\n        el.addEventListener(\"mouseover\", function () {\r\n          if (body.classList.contains(\"sidebar-icon-only\")) {\r\n            el.classList.add(\"hover-open\");\r\n          }\r\n        });\r\n        el.addEventListener(\"mouseout\", function () {\r\n          if (body.classList.contains(\"sidebar-icon-only\")) {\r\n            el.classList.remove(\"hover-open\");\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (auth.user) {\r\n      if (props.location.pathname !== props.history.location.pathname) {\r\n        onRouteChanged();\r\n      }\r\n    }\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  return !auth.isAuthenticated || !auth.user ? (\r\n    <div></div>\r\n  ) : (\r\n      <nav className=\"sidebar sidebar-offcanvas\" id=\"sidebar\">\r\n        <div className=\"sidebar-brand-wrapper d-none d-lg-flex align-items-center justify-content-center fixed-top\">\r\n          <a className=\"sidebar-brand brand-logo\" href=\"/\">\r\n           Party Chat Gaming\r\n          </a>\r\n          <a className=\"sidebar-brand brand-logo-mini\" href=\"/\">\r\n            <img\r\n              src={logo}\r\n              alt=\"logo\"\r\n            />\r\n          </a>\r\n        </div>\r\n        <ul className=\"nav\">\r\n          <li className=\"nav-item profile\">\r\n            <div className=\"profile-desc\">\r\n              <div className=\"profile-name\">\r\n                <h5 className=\"mb-0 font-weight-normal\">\r\n                  {auth.isAuthenticated ? <Trans>{auth.user.data.NAME}</Trans> : <span>Default</span>}\r\n                </h5>\r\n                <span>\r\n                  <Trans>Welcome Back!</Trans>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </li>\r\n          <li className=\"nav-item nav-category\">\r\n            <span className=\"nav-link\">\r\n              <Trans>Navigation</Trans>\r\n            </span>\r\n          </li>\r\n          <li\r\n            className={\r\n              isPathActive(\"/\")\r\n                ? \"nav-item menu-items active\"\r\n                : \"nav-item menu-items\"\r\n            }\r\n          >\r\n            <Link className=\"nav-link\" to=\"/\">\r\n              <span className=\"menu-icon\">\r\n                <i className=\"mdi mdi-speedometer\"></i>\r\n              </span>\r\n              <span className=\"menu-title\">\r\n                <Trans>Profile</Trans>\r\n              </span>\r\n            </Link>\r\n          </li>\r\n          <li\r\n            className={\r\n              isPathActive(\"/search\")\r\n                ? \"nav-item menu-items active\"\r\n                : \"nav-item menu-items\"\r\n            }\r\n          >\r\n            <Link className=\"nav-link\" to=\"/search\">\r\n              <span className=\"menu-icon\">\r\n                <i className=\"mdi mdi-upload\"></i>\r\n              </span>\r\n              <span className=\"menu-title\">Search</span>\r\n            </Link>\r\n          </li>\r\n\r\n          <li\r\n            className={\r\n              isPathActive(\"/cards\")\r\n                ? \"nav-item menu-items active\"\r\n                : \"nav-item menu-items\"\r\n            }\r\n          >\r\n            <Link className=\"nav-link\" to=\"/cards\">\r\n              <span className=\"menu-icon\">\r\n                <i className=\"mdi mdi-account\"></i>\r\n              </span>\r\n              <span className=\"menu-title\">\r\n                <Trans>Cards</Trans>\r\n              </span>\r\n            </Link>\r\n          </li>\r\n\r\n          <li\r\n            className={\r\n              isPathActive(\"/titles\")\r\n                ? \"nav-item menu-items active\"\r\n                : \"nav-item menu-items\"\r\n            }\r\n          >\r\n            <Link className=\"nav-link\" to=\"/titles\">\r\n              <span className=\"menu-icon\">\r\n                <i className=\"mdi mdi-account-multiple\"></i>\r\n              </span>\r\n              <span className=\"menu-title\">\r\n                <Trans>Titles</Trans>\r\n              </span>\r\n            </Link>\r\n          </li>\r\n\r\n          <li\r\n            className={\r\n              isPathActive(\"/arms\")\r\n                ? \"nav-item menu-items active\"\r\n                : \"nav-item menu-items\"\r\n            }\r\n          >\r\n            <Link className=\"nav-link\" to=\"/arms\">\r\n              <span className=\"menu-icon\">\r\n                <i className=\"mdi mdi-new-box\"></i>\r\n              </span>\r\n              <span className=\"menu-title\">\r\n                <Trans>Arms</Trans>\r\n              </span>\r\n            </Link>\r\n          </li>\r\n\r\n          <li\r\n            className={\r\n              isPathActive(\"/pets\")\r\n                ? \"nav-item menu-items active\"\r\n                : \"nav-item menu-items\"\r\n            }\r\n          >\r\n            <Link className=\"nav-link\" to=\"/pets\">\r\n              <span className=\"menu-icon\">\r\n                <i className=\"mdi mdi-new-box\"></i>\r\n              </span>\r\n              <span className=\"menu-title\">\r\n                <Trans>Pets</Trans>\r\n              </span>\r\n            </Link>\r\n          </li>\r\n          <li\r\n            className={\r\n              isPathActive(\"/teams\")\r\n                ? \"nav-item menu-items active\"\r\n                : \"nav-item menu-items\"\r\n            }\r\n          >\r\n            <Link className=\"nav-link\" to=\"/teams\">\r\n              <span className=\"menu-icon\">\r\n                <i className=\"mdi mdi-new-box\"></i>\r\n              </span>\r\n              <span className=\"menu-title\">\r\n                <Trans>Teams</Trans>\r\n              </span>\r\n            </Link>\r\n          </li>\r\n          \r\n          {auth.user.data.IS_ADMIN ? \r\n          <li\r\n            className={\r\n              isPathActive(\"/newcard\")\r\n                ? \"nav-item menu-items active\"\r\n                : \"nav-item menu-items\"\r\n            }\r\n          >\r\n            <Link className=\"nav-link\" to=\"/newcard\">\r\n              <span className=\"menu-icon\">\r\n                <i className=\"mdi mdi-new-box\"></i>\r\n              </span>\r\n              <span className=\"menu-title\">\r\n                <Trans>New Card</Trans>\r\n              </span>\r\n            </Link>\r\n          </li> \r\n          : <span></span>}\r\n\r\n          {auth.user.data.IS_ADMIN ? \r\n          <li\r\n            className={\r\n              isPathActive(\"/newpet\")\r\n                ? \"nav-item menu-items active\"\r\n                : \"nav-item menu-items\"\r\n            }\r\n          >\r\n            <Link className=\"nav-link\" to=\"/newpet\">\r\n              <span className=\"menu-icon\">\r\n                <i className=\"mdi mdi-new-box\"></i>\r\n              </span>\r\n              <span className=\"menu-title\">\r\n                <Trans>New Pet</Trans>\r\n              </span>\r\n            </Link>\r\n          </li> \r\n          : <span></span>}\r\n\r\n          {auth.user.data.IS_ADMIN ? \r\n          <li\r\n            className={\r\n              isPathActive(\"/newarm\")\r\n                ? \"nav-item menu-items active\"\r\n                : \"nav-item menu-items\"\r\n            }\r\n          >\r\n            <Link className=\"nav-link\" to=\"/newarm\">\r\n              <span className=\"menu-icon\">\r\n                <i className=\"mdi mdi-new-box\"></i>\r\n              </span>\r\n              <span className=\"menu-title\">\r\n                <Trans>New Arm</Trans>\r\n              </span>\r\n            </Link>\r\n          </li> \r\n          : <span></span>}\r\n\r\n          {auth.user.data.IS_ADMIN ? \r\n          <li\r\n            className={\r\n              isPathActive(\"/newtitle\")\r\n                ? \"nav-item menu-items active\"\r\n                : \"nav-item menu-items\"\r\n            }\r\n          >\r\n            <Link className=\"nav-link\" to=\"/newtitle\">\r\n              <span className=\"menu-icon\">\r\n                <i className=\"mdi mdi-new-box\"></i>\r\n              </span>\r\n              <span className=\"menu-title\">\r\n                <Trans>New Title</Trans>\r\n              </span>\r\n            </Link>\r\n          </li> \r\n          : <span></span>}\r\n\r\n          {auth.user.data.IS_ADMIN ? \r\n          <li\r\n            className={\r\n              isPathActive(\"/newuniverse\")\r\n                ? \"nav-item menu-items active\"\r\n                : \"nav-item menu-items\"\r\n            }\r\n          >\r\n            <Link className=\"nav-link\" to=\"/newuniverse\">\r\n              <span className=\"menu-icon\">\r\n                <i className=\"mdi mdi-new-box\"></i>\r\n              </span>\r\n              <span className=\"menu-title\">\r\n                <Trans>New Universe</Trans>\r\n              </span>\r\n            </Link>\r\n          </li> \r\n          : <span></span>}\r\n\r\n          {auth.user.data.IS_ADMIN ? \r\n          <li\r\n            className={\r\n              isPathActive(\"/newabyss\")\r\n                ? \"nav-item menu-items active\"\r\n                : \"nav-item menu-items\"\r\n            }\r\n          >\r\n            <Link className=\"nav-link\" to=\"/newabyss\">\r\n              <span className=\"menu-icon\">\r\n                <i className=\"mdi mdi-new-box\"></i>\r\n              </span>\r\n              <span className=\"menu-title\">\r\n                <Trans>New Abyss</Trans>\r\n              </span>\r\n            </Link>\r\n          </li> \r\n          : <span></span>}\r\n        \r\n        </ul>\r\n      </nav>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logout })(withRouter(Sidebar));","import moment from 'moment';\r\nexport const cardInitialState = {\r\n    PATH: '',\r\n    RPATH: '',\r\n    GIF: '',\r\n    NAME: '',\r\n    RNAME: '',\r\n    PRICE: null,\r\n    TOURNAMENT_REQUIREMENTS: 0,\r\n    MOVESET: {},\r\n    HLT: null,\r\n    STAM: 100,\r\n    ATK: 50,\r\n    DEF: 70,\r\n    TYPE: 0,\r\n    TIER: 1,\r\n    PASS: [],\r\n    SPD: 5,\r\n    VUL: false,\r\n    UNIVERSE: '',\r\n    COLLECTION: 'N/A',\r\n    HAS_COLLECTION: null,\r\n    STOCK: 99,\r\n    AVAILABLE: true,\r\n    DESCRIPTIONS: [],\r\n    EXCLUSIVE: true\r\n}\r\n\r\nexport const armInitialState = {\r\n    ARM: '',\r\n    PRICE: null,\r\n    TOURNAMENT_REQUIREMENTS: 0,\r\n    ABILITIES: [],\r\n    UNIVERSE: '',\r\n    COLLECTION: 'N/A',\r\n    STOCK: 10,\r\n    AVAILABLE: true,\r\n    EXCLUSIVE: true\r\n}\r\n\r\nexport const universeInitialState = {\r\n    TITLE: '',\r\n    PATH: '',\r\n    CROWN_TALES: [],\r\n    HAS_CROWN_TALES: false,\r\n    PREREQUISITE: '',\r\n    UTITLE: '',\r\n    UARM: '',\r\n    DTITLE: '',\r\n    DARM: '',\r\n    TIER: 1,\r\n    DPET: '',\r\n    UPET: '',\r\n    UNIVERSE_BOSS: '',\r\n}\r\n\r\nexport const abyssInitialState = {\r\n    FLOOR: 0,\r\n    ENEMIES: [],\r\n    BANNED_CARDS: [],\r\n    BANNED_TITLES: [],\r\n    BANNED_ARMS: [],\r\n    BANNED_UNIVERSES: [],\r\n    BANNED_TIERS: [],\r\n    BANNED_PETS: [],\r\n    TITLE: '',\r\n    ARM: '',\r\n    PET: '',\r\n    SPECIAL_BUFF: 0\r\n}\r\n\r\nexport const titleInitialState = {\r\n    TITLE: '',\r\n    PRICE: null,\r\n    TOURNAMENT_REQUIREMENTS: 0,\r\n    ABILITIES: [],\r\n    UNIVERSE: '',\r\n    COLLECTION: 'N/A',\r\n    STOCK: 10,\r\n    AVAILABLE: true,\r\n    EXCLUSIVE: true\r\n}\r\n\r\nexport const petInitialState = {\r\n    PET: '',\r\n    PATH: '',\r\n    UNIVERSE: '',\r\n    LVL: 1,\r\n    ABILITIES: [],\r\n    COLLECTION: 'N/A',\r\n    AVAILABLE: true,\r\n    EXCLUSIVE: true\r\n}\r\n\r\nexport const enhancements = [\r\n    'ATK',\r\n    'DEF',\r\n    'STAM',\r\n    'HLT',\r\n    'LIFE',\r\n    'DRAIN',\r\n    'FLOG',\r\n    'WITHER',\r\n    'RAGE',\r\n    'BRACE',\r\n    'BZRK',\r\n    'CRYSTAL',\r\n    'GROWTH',\r\n    'STANCE',\r\n    'CONFUSE',\r\n    'BLINK',\r\n    'SLOW',\r\n    'HASTE',\r\n    'SOULCHAIN',\r\n    'GAMBLE',\r\n    'FEAR',\r\n    'WAVE',\r\n    'BLAST',\r\n    'CREATION',\r\n    'DESTRUCTION'\r\n]\r\n\r\nexport const arm_enhancements = [\r\n    'ATK',\r\n    'DEF',\r\n    'STAM',\r\n    'HLT',\r\n    'BASIC ATTACK',\r\n    'SPECIAL ATTACK',\r\n    'ULTIMATE',\r\n    'MANA',\r\n]\r\n","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Spinner from '../isLoading/spinner';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport Select from 'react-select';\r\nimport { Form, Col, Button, Alert } from 'react-bootstrap';\r\nimport { cardInitialState, enhancements } from '../STATE'\r\nimport { saveCard } from '../../actions/cards'\r\n\r\nexport const NewCard = ({auth, cards, history, saveCard}) => {\r\n    const [universes, setUniverse] = useState({\r\n        universe: [],\r\n        loading: true\r\n    });\r\n    const [desc, setDesc] = useState({\r\n        DESC: [],\r\n        TEXT: \"\"\r\n    })\r\n\r\n    const [data, setData] = useState(cardInitialState);\r\n    const [validated, setValidated] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n    const [passive, setPassive] = useState({\r\n        ABILITY: \"\",\r\n        POWER: 20,\r\n        PASSIVE_TYPE: \"\"\r\n    });\r\n    // Build Passive\r\n    var pass_ability = passive.ABILITY.toString()\r\n    var pass_power = passive.POWER\r\n    var pass_type = passive.PASSIVE_TYPE\r\n    var pass_key = pass_ability\r\n    var passive_Object = {}\r\n    passive_Object[pass_key] = pass_power\r\n    passive_Object[\"TYPE\"] = pass_type\r\n\r\n    const [moves, setMoves] = useState({\r\n        MOVE1_ABILITY: \"\",\r\n        MOVE1_POWER: null,\r\n        MOVE2_ABILITY: \"\",\r\n        MOVE2_POWER: null,\r\n        MOVE3_ABILITY: \"\",\r\n        MOVE3_POWER: null,\r\n        ENHANCER_ABILITY: \"\",\r\n        ENHANCER_POWER: null,\r\n        ENHANCEMENT_TYPE: \"\"\r\n    });\r\n    // Build Moves\r\n    var move1Object = {}\r\n    var move2Object = {}\r\n    var move3Object = {}\r\n    var enhancerObject = {}\r\n    var movesArray = []\r\n\r\n    const {PATH, RPATH, GIF, NAME, RNAME, PRICE, TOURNAMENT_REQUIREMENTS, MOVESET, HLT, STAM, ATK, DEF, TYPE, TIER, PASS, SPD, VUL, UNIVERSE, COLLECTION, HAS_COLLECTION, STOCK, AVAILABLE, DESCRIPTIONS, EXCLUSIVE} = data;\r\n    const {MOVE1_ABILITY, MOVE1_POWER, MOVE2_ABILITY, MOVE2_POWER, MOVE3_ABILITY, MOVE3_POWER, ENHANCER_ABILITY,ENHANCEMENT_TYPE, ENHANCER_POWER} = moves;\r\n    if({...moves}){\r\n        move1Object[MOVE1_ABILITY] = MOVE1_POWER\r\n        move1Object['STAM'] = 10\r\n        \r\n        move2Object[MOVE2_ABILITY] = MOVE2_POWER\r\n        move2Object['STAM'] = 30\r\n        \r\n        move3Object[MOVE3_ABILITY] = MOVE3_POWER\r\n        move3Object['STAM'] = 80\r\n        \r\n\r\n        enhancerObject[ENHANCER_ABILITY] = ENHANCER_POWER\r\n        enhancerObject['STAM'] = 20\r\n        enhancerObject['TYPE'] = ENHANCEMENT_TYPE\r\n    }\r\n    \r\n    useEffect(() => {\r\n        // if (!auth.isAuthenticated) {\r\n        //   history.push('/login')\r\n        // }\r\n\r\n        if(!auth.loading){\r\n            axios.get('/crown/universes')\r\n                .then((res) => {\r\n                    setUniverse({universe: res.data, loading: false})\r\n                })\r\n        }\r\n      }, [auth])\r\n\r\n    const onChangeHandler = (e) => {\r\n        setShow(false)\r\n        if (e.target.type === \"number\"){\r\n            setData({\r\n                ...data,\r\n                [e.target.name]: e.target.valueAsNumber\r\n            })\r\n        } else if ((e.target.checked === true || e.target.checked === false) && e.target.name == \"formHorizontalRadios\") {\r\n            const radio = e.currentTarget.id === 'false' ? false : true\r\n            setData({\r\n                ...data,\r\n                HAS_COLLECTION: radio\r\n            })\r\n        } else {\r\n            setData({\r\n                ...data,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    const onDescriptionHandler = (e) => {\r\n        setShow(false)\r\n        setDesc({\r\n            ...desc,\r\n            TEXT: e.target.value\r\n        })\r\n    }\r\n\r\n    const onDescriptionAdd = (e) => {\r\n        e.preventDefault();\r\n        console.log(desc.DESC)\r\n        var temp_desc = desc.DESC\r\n        if (desc.DESC === undefined){\r\n            console.log(\"IT IS UNDEFINED\")\r\n            temp_desc = [desc.TEXT]\r\n        }\r\n        temp_desc.push(desc.TEXT)\r\n        setDesc({\r\n            ...desc,\r\n            DESC: temp_desc,\r\n            TEXT: \"\"\r\n        })\r\n    }\r\n    console.log(desc.DESC)\r\n\r\n    const availableHandler = (e) => {\r\n        setData({\r\n            ...data,\r\n            AVAILABLE: Boolean(e.target.value)\r\n        })\r\n    }\r\n\r\n    const exclusiveHandler = (e) => {\r\n        setData({\r\n            ...data,\r\n            EXCLUSIVE: Boolean(e.target.value)\r\n        })\r\n    }\r\n\r\n    const passiveHandler = (e) => {\r\n        if (e.target.type === \"number\"){\r\n            setPassive({\r\n                ...passive,\r\n                [e.target.name]: e.target.valueAsNumber\r\n            })\r\n        } else {\r\n            setPassive({\r\n                ...passive,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n    }\r\n\r\n    const moveHandler = (e) => {\r\n        if (e.target.type === \"number\"){\r\n            setMoves({\r\n                ...moves,\r\n                [e.target.name]: e.target.valueAsNumber\r\n            })\r\n        } else {\r\n            setMoves({\r\n                ...moves,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n        \r\n        move1Object[MOVE1_ABILITY] = MOVE1_POWER\r\n        move1Object['STAM'] = 10\r\n        \r\n        move2Object[MOVE2_ABILITY] = MOVE2_POWER\r\n        move2Object['STAM'] = 30\r\n        \r\n        move3Object[MOVE3_ABILITY] = MOVE3_POWER\r\n        move3Object['STAM'] = 80\r\n        \r\n\r\n        enhancerObject[ENHANCER_ABILITY] = ENHANCER_POWER\r\n        enhancerObject['STAM'] = 20\r\n        enhancerObject['TYPE'] = ENHANCEMENT_TYPE\r\n    }\r\n\r\n    if(!universes.loading) {\r\n        var universeSelector = universes.universe.map(universe => {\r\n            return {\r\n                value: universe.TITLE, label: `${universe.TITLE}`\r\n            }\r\n        })\r\n    \r\n        var universeHandler = (e) => {\r\n            let value = e[0]\r\n            universes.universe.map(universe => {\r\n                if (e.value === universe.TITLE) {\r\n                    setData({\r\n                        ...data,\r\n                        UNIVERSE: universe.TITLE,\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    var enhancementSelector = enhancements.map(enhancement => {\r\n        return {\r\n            value: enhancement, label: `${enhancement}`\r\n        }\r\n    })\r\n\r\n    var passiveEnhancementHandler = (e) => {\r\n        let value = e[0]\r\n        enhancements.map(enhancement => {\r\n            if (e.value === enhancement) {\r\n                setPassive({\r\n                    ...passive,\r\n                    PASSIVE_TYPE: enhancement,\r\n                })\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    var moveEnhancementHandler = (e) => {\r\n        let value = e[0]\r\n        enhancements.map(enhancement => {\r\n            if (e.value === enhancement) {\r\n                setMoves({\r\n                    ...moves,\r\n                    ENHANCEMENT_TYPE: enhancement,\r\n                })\r\n            }\r\n        })\r\n    }\r\n    \r\n    var submission_response = \"Success!\";\r\n    var submission_alert_dom = <Alert show={show} variant=\"success\"> {submission_response} </Alert>\r\n    const onSubmitHandler = async (e) => {\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            setShow(false)\r\n            setValidated(true);\r\n        } else {\r\n            setValidated(false)\r\n            e.preventDefault();\r\n\r\n            setData({\r\n                ...data,\r\n                MOVESET: [move1Object, move2Object, move3Object, enhancerObject]\r\n            })\r\n\r\n            var card_update_data = data;\r\n            card_update_data.PASS = [passive_Object]\r\n            card_update_data.MOVESET = [move1Object, move2Object, move3Object, enhancerObject]\r\n\r\n            const res = await saveCard(data)\r\n\r\n            setData(cardInitialState)\r\n            setTimeout(()=> {setShow(true)}, 1000)\r\n        }\r\n\r\n    }\r\n\r\n    const styleSheet = {\r\n        input: (base, state) => ({\r\n            ...base,\r\n            color: 'white'\r\n\r\n        })\r\n    };\r\n    return auth.loading || universes.loading ? (\r\n        <Spinner />\r\n    ) : (\r\n            <div>\r\n                <div className=\"page-header\">\r\n                    <h3 className=\"page-title\">\r\n                        New Crown Unlimited Card\r\n                    </h3>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 grid-margin\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <Form noValidate validated={validated} onSubmit={onSubmitHandler}>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                            <Form.Label><h4>Select Universe</h4></Form.Label>\r\n                                            <Select\r\n                                                onChange={universeHandler}\r\n                                                options={\r\n                                                    universeSelector\r\n                                                }\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Path</Form.Label>\r\n                                            <Form.Control\r\n                                                value={PATH}\r\n                                                onChange={onChangeHandler}\r\n                                                name=\"PATH\"\r\n                                                required\r\n                                                type=\"text\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Resolved Path</Form.Label>\r\n                                            <Form.Control\r\n                                                value={RPATH}\r\n                                                name=\"RPATH\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"text\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Ultimate GIF</Form.Label>\r\n                                            <Form.Control\r\n                                                value={GIF}\r\n                                                name=\"GIF\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"text\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Name</Form.Label>\r\n                                            <Form.Control\r\n                                                value={NAME}\r\n                                                name=\"NAME\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"text\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Resolved Name</Form.Label>\r\n                                            <Form.Control\r\n                                                value={RNAME}\r\n                                                name=\"RNAME\"\r\n                                                onChange={onChangeHandler}\r\n                                                type=\"text\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Price</Form.Label>\r\n                                            <Form.Control\r\n                                                value={PRICE}\r\n                                                name=\"PRICE\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Health</Form.Label>\r\n                                            <Form.Control\r\n                                                value={HLT}\r\n                                                name=\"HLT\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        \r\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Stamina</Form.Label>\r\n                                            <Form.Control\r\n                                                disabled\r\n                                                value={STAM}\r\n                                                name=\"STAM\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Attack</Form.Label>\r\n                                            <Form.Control\r\n                                                value={ATK}\r\n                                                name=\"ATK\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Defense</Form.Label>\r\n                                            <Form.Control\r\n                                                value={DEF}\r\n                                                name=\"DEF\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"1\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Speed</Form.Label>\r\n                                            <Form.Control\r\n                                                value={SPD}\r\n                                                name=\"SPD\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"1\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Tier</Form.Label>\r\n                                            <Form.Control\r\n                                                value={TIER}\r\n                                                name=\"TIER\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Passive Ability</Form.Label>\r\n                                            <Form.Control\r\n                                                value={passive.ABILITY}\r\n                                                name=\"ABILITY\"\r\n                                                onChange={passiveHandler}\r\n                                                required\r\n                                                type=\"text\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Passive Power</Form.Label>\r\n                                            <Form.Control\r\n                                                value={passive.POWER}\r\n                                                name=\"POWER\"\r\n                                                onChange={passiveHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom02\">\r\n                                        <Form.Label>Passive Type</Form.Label>\r\n                                            <Select\r\n                                                onChange={passiveEnhancementHandler}\r\n                                                options={\r\n                                                    enhancementSelector\r\n                                                }\r\n                                                required\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        \r\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\r\n                                            <Form.Label> Has Destiny </Form.Label>\r\n                                            <Col sm={10}>\r\n                                                <Form.Check\r\n                                                onChange={onChangeHandler}\r\n                                                type=\"radio\"\r\n                                                label=\"Yes\"\r\n                                                name=\"formHorizontalRadios\"\r\n                                                id=\"true\"\r\n                                                checked = {HAS_COLLECTION === true}\r\n                                                />\r\n                                                <Form.Check\r\n                                                onChange={onChangeHandler}\r\n                                                type=\"radio\"\r\n                                                label=\"No\"\r\n                                                name=\"formHorizontalRadios\"\r\n                                                id=\"false\"\r\n                                                checked = {HAS_COLLECTION === false}\r\n                                                />\r\n                                            </Col>\r\n                                            </Form.Group>\r\n\r\n                                        <Form.Group hidden={!HAS_COLLECTION} as={Col} md=\"10\" controlId=\"validationCustom02\">\r\n                                        <Form.Label>Destiny</Form.Label>\r\n                                        <Form.Control\r\n                                                value={COLLECTION}\r\n                                                name=\"COLLECTION\"\r\n                                                onChange={onChangeHandler}\r\n                                                type=\"text\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n\r\n\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"11\" controlId=\"validationCustom02\">\r\n                                                <Form.Label>Normal Attack</Form.Label>\r\n                                                <Form.Control\r\n                                                    value={MOVE1_ABILITY}\r\n                                                    name=\"MOVE1_ABILITY\"\r\n                                                    onChange={moveHandler}\r\n                                                    required\r\n                                                    type=\"text\"\r\n\r\n                                                />\r\n                                                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                                \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"1\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Power</Form.Label>\r\n                                            <Form.Control\r\n                                                value={MOVE1_POWER}\r\n                                                name=\"MOVE1_POWER\"\r\n                                                onChange={moveHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"11\" controlId=\"validationCustom02\">\r\n                                                <Form.Label>Special Attack</Form.Label>\r\n                                                <Form.Control\r\n                                                    value={MOVE2_ABILITY}\r\n                                                    name=\"MOVE2_ABILITY\"\r\n                                                    onChange={moveHandler}\r\n                                                    required\r\n                                                    type=\"text\"\r\n\r\n                                                />\r\n                                                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                                \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"1\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Power</Form.Label>\r\n                                            <Form.Control\r\n                                                value={MOVE2_POWER}\r\n                                                name=\"MOVE2_POWER\"\r\n                                                onChange={moveHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"11\" controlId=\"validationCustom02\">\r\n                                                <Form.Label>Ultimate Attack</Form.Label>\r\n                                                <Form.Control\r\n                                                    value={MOVE3_ABILITY}\r\n                                                    name=\"MOVE3_ABILITY\"\r\n                                                    onChange={moveHandler}\r\n                                                    required\r\n                                                    type=\"text\"\r\n\r\n                                                />\r\n                                                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                                \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"1\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Power</Form.Label>\r\n                                            <Form.Control\r\n                                                value={MOVE3_POWER}\r\n                                                name=\"MOVE3_POWER\"\r\n                                                onChange={moveHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"8\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Enhancement</Form.Label>\r\n                                            <Form.Control\r\n                                                value={ENHANCER_ABILITY}\r\n                                                name=\"ENHANCER_ABILITY\"\r\n                                                onChange={moveHandler}\r\n                                                required\r\n                                                type=\"text\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom02\">\r\n                                        <Form.Label>Enhancement Type</Form.Label>\r\n                                            <Select\r\n                                                onChange={moveEnhancementHandler}\r\n                                                options={\r\n                                                    enhancementSelector\r\n                                                }\r\n                                                required\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"1\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Power</Form.Label>\r\n                                            <Form.Control\r\n                                                value={ENHANCER_POWER}\r\n                                                name=\"ENHANCER_POWER\"\r\n                                                onChange={moveHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\r\n                                            <Form.Label> Available </Form.Label>\r\n                                            \r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                id=\"inlineFormCustomSelectPref\"\r\n                                                onChange={availableHandler}\r\n                                            >\r\n                                                <option value={true} name=\"true\">Yes</option>\r\n                                                <option value={\"\"} name=\"false\">No</option>\r\n                                            </Form.Control>\r\n                                            \r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\r\n                                            <Form.Label> Exclusive </Form.Label>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                id=\"inlineFormCustomSelectPref\"\r\n                                                onChange={exclusiveHandler}\r\n                                            >\r\n                                                <option value={true} name=\"true\">Yes</option>\r\n                                                <option value={\"\"} name=\"false\">No</option>\r\n                                            </Form.Control>\r\n                                            </Form.Group>\r\n                                    </Form.Row>\r\n                                    <Button type=\"submit\">Create Card</Button>\r\n                                    <br />\r\n                                    <br />\r\n                                    <Link to=\"/updatecards\"><Button variant=\"warning\">Update Cards</Button></Link> \r\n                                    <br/>\r\n                                    <br />\r\n                                    {submission_alert_dom}\r\n                                </Form>\r\n\r\n                                {/* DESCRIPTION WORK\r\n                                 <Form>\r\n                                <Form.Row>\r\n                                        <Form.Group as={Col} md=\"10\">\r\n                                                <Form.Label>Descriptions</Form.Label>\r\n                                                <Form.Control\r\n                                                    value={desc.TEXT}\r\n                                                    onChange={onDescriptionHandler}\r\n                                                    name={desc.TEXT}\r\n                                                    required\r\n                                                    type=\"text\"\r\n\r\n                                                />\r\n                                                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"2\">\r\n                                            <Form.Label>Queue Description</Form.Label>\r\n                                            <Button onClick={onDescriptionAdd} variant=\"success\">Add</Button>\r\n                                        </Form.Group>\r\n                                        \r\n                                        {desc.DESC.map((item, index) => (\r\n                                        <Form.Group as={Col} md=\"8\">\r\n                                            \r\n                                                <Form.Control\r\n                                                value={item}\r\n                                                name={item}\r\n                                                type=\"text\"\r\n                                                key={index}\r\n                                                />\r\n                                            \r\n                                            <Button onClick={onDescriptionAdd} variant=\"danger\">Delete</Button>\r\n                                        </Form.Group>\r\n                                        ))}\r\n                                        \r\n                                        \r\n                                       \r\n                                    </Form.Row>\r\n                                </Form> */}\r\n\r\n                            </div>\r\n\r\n                            {/* <Alerts /> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    cards: state.cards\r\n})\r\n\r\nexport default connect(mapStateToProps, {saveCard})(NewCard)\r\n","import axios from 'axios';\r\nimport {\r\n    ADD_CARD,\r\n    GET_ALL_CARDS,\r\n    GET_CARD,\r\n    DELETE_CARD,\r\n    UPDATE_CARD\r\n} from '../actiontypes/index';\r\nimport { loadUser } from \"./auth/auth\"; \r\n\r\n\r\nexport const loadCards = () => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get(\"/crown/cards\")\r\n        dispatch({\r\n            type: GET_ALL_CARDS,\r\n            payload: res\r\n        })\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const loadSingleCard = (card) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get(`/crown/cards/${card}`)\r\n        dispatch({\r\n            type: GET_CARD,\r\n            payload: res\r\n        })\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const saveCard = (card) => async (dispatch) => {\r\n    try {\r\n        console.log(card)\r\n        const res = await axios.post('/crown/cards/new', card)\r\n        dispatch({\r\n            type: ADD_CARD,\r\n            payload: res\r\n        })\r\n        dispatch(loadUser());\r\n    } catch(err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const updateCard = (card) => async (dispatch) => {\r\n    try {\r\n        console.log(card)\r\n        const res = await axios.post('/crown/cards/update', card)\r\n        dispatch({\r\n            type: ADD_CARD,\r\n            payload: res\r\n        })\r\n        dispatch(loadUser());\r\n    } catch(err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const deleteCard = (card) => async (dispatch) => {\r\n    \r\n    try {\r\n        const res = await axios.delete('/crown/cards/delete', {data: card})\r\n        dispatch({\r\n            type: DELETE_CARD,\r\n            payload: res\r\n        })\r\n        dispatch(loadUser());\r\n    } catch(err) {\r\n        console.error(err)\r\n    }\r\n}","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Spinner from '../isLoading/spinner';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport Select from 'react-select';\r\nimport { Form, Col, Button, Alert, Modal } from 'react-bootstrap';\r\nimport { cardInitialState, enhancements } from '../STATE';\r\nimport { updateCard, deleteCard } from '../../actions/cards';\r\nimport _ from 'lodash';\r\n\r\nexport const UpdateCard = ({auth, cards, history, updateCard, deleteCard}) => {\r\n    const [universes, setUniverse] = useState({\r\n        universe: [],\r\n        loading: true\r\n    });\r\n    const [cardData, setCardData] = useState({\r\n        loading: true\r\n    });\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const handleClose = () => setModalShow(false);\r\n    const handleShow = () => setModalShow(true);\r\n    const [data, setData] = useState(cardInitialState);\r\n    const [validated, setValidated] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n    const [passive, setPassive] = useState({\r\n        ABILITY: \"\",\r\n        POWER: 20,\r\n        PASSIVE_TYPE: \"\"\r\n    });\r\n    const [moves, setMoves] = useState({\r\n        MOVE1_ABILITY: null,\r\n        MOVE1_POWER: null,\r\n        MOVE2_ABILITY: null,\r\n        MOVE2_POWER: null,\r\n        MOVE3_ABILITY: null,\r\n        MOVE3_POWER: null,\r\n        ENHANCER_ABILITY: null,\r\n        ENHANCER_POWER: null,\r\n        ENHANCEMENT_TYPE: null\r\n    });\r\n    // Build Moves\r\n    var move1Object = {}\r\n    var move2Object = {}\r\n    var move3Object = {}\r\n    var enhancerObject = {}\r\n    var movesArray = []\r\n    // Build Passive\r\n    var pass_ability = passive.ABILITY.toString()\r\n    var pass_power = passive.POWER\r\n    var pass_type = passive.PASSIVE_TYPE\r\n    var pass_key = pass_ability\r\n    var passive_Object = {}\r\n    passive_Object[pass_key] = pass_power\r\n    passive_Object[\"TYPE\"] = pass_type\r\n\r\n    const {PATH, RPATH, GIF, NAME, RNAME, PRICE, TOURNAMENT_REQUIREMENTS, MOVESET, HLT, STAM, ATK, DEF, TYPE, TIER, PASS, SPD, VUL, UNIVERSE, COLLECTION, HAS_COLLECTION, STOCK, AVAILABLE, DESCRIPTIONS, EXCLUSIVE} = data;\r\n    const {MOVE1_ABILITY, MOVE1_POWER, MOVE2_ABILITY, MOVE2_POWER, MOVE3_ABILITY, MOVE3_POWER, ENHANCER_ABILITY,ENHANCEMENT_TYPE, ENHANCER_POWER} = moves;\r\n    if({...moves}){\r\n        move1Object[MOVE1_ABILITY] = MOVE1_POWER\r\n        move1Object['STAM'] = 10\r\n        \r\n        move2Object[MOVE2_ABILITY] = MOVE2_POWER\r\n        move2Object['STAM'] = 30\r\n        \r\n        move3Object[MOVE3_ABILITY] = MOVE3_POWER\r\n        move3Object['STAM'] = 80\r\n        \r\n\r\n        enhancerObject[ENHANCER_ABILITY] = ENHANCER_POWER\r\n        enhancerObject['STAM'] = 20\r\n        enhancerObject['TYPE'] = ENHANCEMENT_TYPE\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if(!auth.loading){\r\n            axios.get('/crown/universes')\r\n                .then((res) => {\r\n                    setUniverse({universe: res.data, loading: false})\r\n                })\r\n\r\n            axios.get('/crown/cards')\r\n                .then((res) => {\r\n                    setCardData({data: res.data, loading: false})\r\n                })\r\n        }\r\n      }, [auth])\r\n\r\n    const onChangeHandler = (e) => {\r\n        setShow(false)\r\n        if (e.target.type === \"number\"){\r\n            setData({\r\n                ...data,\r\n                [e.target.name]: e.target.valueAsNumber\r\n            })\r\n        } else if ((e.target.checked === true || e.target.checked === false) && e.target.name == \"formHorizontalRadios\") {\r\n            const radio = e.currentTarget.id === 'false' ? false : true\r\n            setData({\r\n                ...data,\r\n                HAS_COLLECTION: radio\r\n            })\r\n        } else {\r\n            setData({\r\n                ...data,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    const availableHandler = (e) => {\r\n        setData({\r\n            ...data,\r\n            AVAILABLE: Boolean(e.target.value)\r\n        })\r\n    }\r\n\r\n    const exclusiveHandler = (e) => {\r\n        setData({\r\n            ...data,\r\n            EXCLUSIVE: Boolean(e.target.value)\r\n        })\r\n    }\r\n\r\n    const passiveHandler = (e) => {\r\n        if (e.target.type === \"number\"){\r\n            setPassive({\r\n                ...passive,\r\n                [e.target.name]: e.target.valueAsNumber\r\n            })\r\n        } else {\r\n            setPassive({\r\n                ...passive,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n\r\n        // // Build Passive\r\n        // var pass_ability = passive.ABILITY.toString()\r\n        // var pass_power = passive.POWER\r\n        // var pass_type = passive.PASSIVE_TYPE\r\n        // var pass_key = pass_ability\r\n        // var passive_Object = {}\r\n        // passive_Object[pass_key] = pass_power\r\n        // passive_Object[\"TYPE\"] = pass_type\r\n    }\r\n\r\n    const moveHandler = (e) => {\r\n        if (e.target.type === \"number\"){\r\n            setMoves({\r\n                ...moves,\r\n                [e.target.name]: e.target.valueAsNumber\r\n            })\r\n        } else {\r\n            setMoves({\r\n                ...moves,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n    }\r\n\r\n    if(!universes.loading) {\r\n        var universeSelector = universes.universe.map(universe => {\r\n            return {\r\n                value: universe.TITLE, label: `${universe.TITLE}`\r\n            }\r\n        })\r\n    \r\n        var universeHandler = (e) => {\r\n            let value = e[0]\r\n            universes.universe.map(universe => {\r\n                if (e.value === universe.TITLE) {\r\n                    setData({\r\n                        ...data,\r\n                        UNIVERSE: universe.TITLE,\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    var enhancementSelector = enhancements.map(enhancement => {\r\n        return {\r\n            value: enhancement, label: `${enhancement}`\r\n        }\r\n    })\r\n\r\n    var passiveEnhancementHandler = (e) => {\r\n        let value = e[0]\r\n        enhancements.map(enhancement => {\r\n            if (e.value === enhancement) {\r\n                setPassive({\r\n                    ...passive,\r\n                    PASSIVE_TYPE: enhancement,\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    var moveEnhancementHandler = (e) => {\r\n        let value = e[0]\r\n        enhancements.map(enhancement => { \r\n            if (e.value === enhancement) {\r\n                setMoves({\r\n                    ...moves,\r\n                    ENHANCEMENT_TYPE: enhancement,\r\n                })\r\n            }\r\n        })\r\n    }\r\n    \r\n    if(!cardData.loading) {\r\n        var cardSelector = cardData.data.map(card => {\r\n            return {\r\n                value: card.NAME, label: `${card.NAME}`\r\n            }\r\n        })\r\n    \r\n        var cardHandler = (e) => {\r\n            let value = e[0]\r\n            cardData.data.map(card => {\r\n                if (e.value === card.NAME) {\r\n                    // Passive Breakdown\r\n                    var passive_ability = Object.keys(card.PASS[0])[0]\r\n                    var passive_power = Object.values(card.PASS[0])[0]\r\n                    var passive_enhancement = card.PASS[0][\"TYPE\"]\r\n                    setPassive({\r\n                        ...passive,\r\n                        ABILITY: passive_ability,\r\n                        POWER: passive_power,\r\n                        PASSIVE_TYPE: passive_enhancement\r\n                    })\r\n\r\n                    // Build Passive\r\n                    var pass_ability = passive.ABILITY.toString()\r\n                    var pass_power = passive.POWER\r\n                    var pass_type = passive.PASSIVE_TYPE\r\n                    var pass_key = pass_ability\r\n                    var passive_Object = {}\r\n                    passive_Object[pass_key] = pass_power\r\n                    passive_Object[\"TYPE\"] = pass_type\r\n\r\n                    // Moves Breakdown\r\n                    var move1_abilit = Object.keys(card.MOVESET[0])[0]\r\n                    var move1_powe = Object.values(card.MOVESET[0])[0]\r\n                    var move2_abilit = Object.keys(card.MOVESET[1])[0]\r\n                    var move2_powe = Object.values(card.MOVESET[1])[0]\r\n\r\n                    var move3_abilit = Object.keys(card.MOVESET[2])[0]\r\n                    var move3_powe = Object.values(card.MOVESET[2])[0]\r\n\r\n                    var move_enhancer_abilit =  Object.keys(card.MOVESET[3])[0]\r\n                    var move_enhancer_powe =  Object.values(card.MOVESET[3])[0]\r\n                    var move_enhancer_typ =  Object.values(card.MOVESET[3])[2]\r\n\r\n                    // setting old state? \r\n                    setMoves({\r\n                        ...moves,\r\n                        MOVE1_ABILITY: move1_abilit,\r\n                        MOVE1_POWER: move1_powe,\r\n                        MOVE2_ABILITY: move2_abilit,\r\n                        MOVE2_POWER: move2_powe,\r\n                        MOVE3_ABILITY: move3_abilit,\r\n                        MOVE3_POWER: move3_powe,\r\n                        ENHANCER_ABILITY: move_enhancer_abilit,\r\n                        ENHANCER_POWER: move_enhancer_powe,\r\n                        ENHANCEMENT_TYPE: move_enhancer_typ\r\n                    })\r\n                   \r\n                    \r\n                    // Build Moves\r\n                    var move1Object = {}\r\n                    var move2Object = {}\r\n                    var move3Object = {}\r\n                    var enhancerObject = {}\r\n                    \r\n                    move1Object[move1_abilit] = move1_powe\r\n                    move1Object['STAM'] = 10\r\n                    \r\n                    move2Object[move2_abilit] = move2_powe\r\n                    move2Object['STAM'] = 30\r\n                    \r\n                    move3Object[move3_abilit] = move3_powe\r\n                    move3Object['STAM'] = 80\r\n                    \r\n\r\n                    enhancerObject[move_enhancer_abilit] = move_enhancer_powe\r\n                    enhancerObject['STAM'] = 20\r\n                    enhancerObject['TYPE'] = move_enhancer_typ\r\n\r\n                    var movesArray = []\r\n                    movesArray.push(move1Object, move2Object, move3Object, enhancerObject)\r\n                    setData({\r\n                        ...data,\r\n                        PATH: card.PATH,\r\n                        RPATH: card.RPATH,\r\n                        GIF: card.GIF,\r\n                        NAME: card.NAME,\r\n                        RNAME: card.RNAME,\r\n                        PRICE: card.PRICE,\r\n                        TOURNAMENT_REQUIREMENTS: card.TOURNAMENT_REQUIREMENTS,\r\n                        HLT: card.HLT,\r\n                        STAM: card.STAM,\r\n                        ATK: card.ATK,\r\n                        DEF: card.DEF,\r\n                        TYPE: card.TYPE,\r\n                        TIER: card.TIER,\r\n                        SPD: card.SPD,\r\n                        VUL: card.VUL,\r\n                        PASS: [passive_Object],\r\n                        MOVESET: movesArray,\r\n                        UNIVERSE: card.UNIVERSE,\r\n                        COLLECTION: card.COLLECTION,\r\n                        HAS_COLLECTION: card.HAS_COLLECTION,\r\n                        STOCK: card.STOCK,\r\n                        AVAILABLE: card.AVAILABLE,\r\n                        DESCRIPTIONS: card.DESCRIPTIONS,\r\n                        EXCLUSIVE: card.EXCLUSIVE\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n    \r\n    var submission_response = \"Success!\";\r\n    var submission_alert_dom = <Alert show={show} variant=\"success\"> {submission_response} </Alert>\r\n    const onSubmitHandler = async (e) => {\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            setShow(false)\r\n            setValidated(true);\r\n        } else {\r\n            \r\n            setValidated(false)\r\n            e.preventDefault();\r\n\r\n            setData({\r\n                ...data,\r\n                MOVESET: [move1Object, move2Object, move3Object, enhancerObject]\r\n            })\r\n\r\n            \r\n            var card_update_data = data;\r\n            card_update_data.PASS = [passive_Object]\r\n            card_update_data.MOVESET = [move1Object, move2Object, move3Object, enhancerObject]\r\n            \r\n            console.log(card_update_data)\r\n            const res = await updateCard(card_update_data)\r\n        \r\n        }\r\n\r\n    }\r\n\r\n    const onDeleteHandler = async (e) => {\r\n        const form = e.currentTarget;\r\n        e.preventDefault();\r\n        const name = data.NAME\r\n        const res = await deleteCard(data);\r\n        setModalShow(false);\r\n    }\r\n\r\n    const styleSheet = {\r\n        input: (base, state) => ({\r\n            ...base,\r\n            color: 'white'\r\n\r\n        })\r\n    };\r\n\r\n    return auth.loading || cardData.loading ? (\r\n        <Spinner />\r\n    ) : (\r\n            <div>\r\n                <div className=\"page-header\">\r\n                    <h3 className=\"page-title\">\r\n                        Update Cards\r\n                    </h3>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 grid-margin\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <Form noValidate validated={validated} onSubmit={onSubmitHandler}>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                            <Form.Label><h3>Select Card</h3></Form.Label>\r\n                                            <Select\r\n                                                onChange={cardHandler}\r\n                                                options={\r\n                                                    cardSelector\r\n                                                }\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                        \r\n                                    </Form.Row>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Path</Form.Label>\r\n                                            <Form.Control\r\n                                                value={PATH}\r\n                                                onChange={onChangeHandler}\r\n                                                name=\"PATH\"\r\n                                                required\r\n                                                type=\"text\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom03\">\r\n                                            <Form.Label>Resolved Path</Form.Label>\r\n                                            <Form.Control\r\n                                                value={RPATH}\r\n                                                name=\"RPATH\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"text\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom04\">\r\n                                            <Form.Label>Ultimate GIF</Form.Label>\r\n                                            <Form.Control\r\n                                                value={GIF}\r\n                                                name=\"GIF\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"text\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom05\">\r\n                                            <Form.Label>Name</Form.Label>\r\n                                            <Form.Control\r\n                                                value={NAME}\r\n                                                name=\"NAME\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"text\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom05\">\r\n                                            <Form.Label>Resolved Name</Form.Label>\r\n                                            <Form.Control\r\n                                                value={RNAME}\r\n                                                name=\"RNAME\"\r\n                                                onChange={onChangeHandler}\r\n                                                type=\"text\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom06\">\r\n                                            <Form.Label>Price</Form.Label>\r\n                                            <Form.Control\r\n                                                value={PRICE}\r\n                                                name=\"PRICE\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n\r\n                                    <Form.Group as={Col} md=\"2\" controlId=\"validationCustom07\">\r\n                                            <Form.Label>Health</Form.Label>\r\n                                            <Form.Control\r\n                                                value={HLT}\r\n                                                name=\"HLT\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        \r\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom08\">\r\n                                            <Form.Label>Stamina</Form.Label>\r\n                                            <Form.Control\r\n                                                disabled\r\n                                                value={STAM}\r\n                                                name=\"STAM\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom09\">\r\n                                            <Form.Label>Attack</Form.Label>\r\n                                            <Form.Control\r\n                                                value={ATK}\r\n                                                name=\"ATK\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom10\">\r\n                                            <Form.Label>Defense</Form.Label>\r\n                                            <Form.Control\r\n                                                value={DEF}\r\n                                                name=\"DEF\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"1\" controlId=\"validationCustom11\">\r\n                                            <Form.Label>Speed</Form.Label>\r\n                                            <Form.Control\r\n                                                value={SPD}\r\n                                                name=\"SPD\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"1\" controlId=\"validationCustom12\">\r\n                                            <Form.Label>Tier</Form.Label>\r\n                                            <Form.Control\r\n                                                value={TIER}\r\n                                                name=\"TIER\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom13\">\r\n                                            <Form.Label>Passive Ability</Form.Label>\r\n                                            <Form.Control\r\n                                                value={passive.ABILITY}\r\n                                                name=\"ABILITY\"\r\n                                                onChange={passiveHandler}\r\n                                                required\r\n                                                type=\"text\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom14\">\r\n                                            <Form.Label>Passive Power</Form.Label>\r\n                                            <Form.Control\r\n                                                value={passive.POWER}\r\n                                                name=\"POWER\"\r\n                                                onChange={passiveHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom15\">\r\n                                        <Form.Label>Passive Type - {passive.PASSIVE_TYPE}</Form.Label>\r\n                                            <Select\r\n                                                onChange={passiveEnhancementHandler}\r\n                                                options={\r\n                                                    enhancementSelector\r\n                                                }\r\n                                                required\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        \r\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom16\">\r\n                                            <Form.Label> Has Destiny </Form.Label>\r\n                                            <Col sm={10}>\r\n                                                <Form.Check\r\n                                                onChange={onChangeHandler}\r\n                                                type=\"radio\"\r\n                                                label=\"Yes\"\r\n                                                name=\"formHorizontalRadios\"\r\n                                                id=\"true\"\r\n                                                checked = {HAS_COLLECTION === true}\r\n                                                />\r\n                                                <Form.Check\r\n                                                onChange={onChangeHandler}\r\n                                                type=\"radio\"\r\n                                                label=\"No\"\r\n                                                name=\"formHorizontalRadios\"\r\n                                                id=\"false\"\r\n                                                checked = {HAS_COLLECTION === false}\r\n                                                />\r\n                                            </Col>\r\n                                            </Form.Group>\r\n\r\n                                        <Form.Group hidden={!HAS_COLLECTION} as={Col} md=\"10\" controlId=\"validationCustom17\">\r\n                                        <Form.Label>Destiny</Form.Label>\r\n                                        <Form.Control\r\n                                                value={COLLECTION}\r\n                                                name=\"COLLECTION\"\r\n                                                onChange={onChangeHandler}\r\n                                                type=\"text\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n\r\n\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"11\" controlId=\"validationCustom18\">\r\n                                                <Form.Label>Normal Attack</Form.Label>\r\n                                                <Form.Control\r\n                                                    value={MOVE1_ABILITY}\r\n                                                    name=\"MOVE1_ABILITY\"\r\n                                                    onChange={moveHandler}\r\n                                                    required\r\n                                                    type=\"text\"\r\n\r\n                                                />\r\n                                                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                                \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"1\" controlId=\"validationCustom19\">\r\n                                            <Form.Label>Power</Form.Label>\r\n                                            <Form.Control\r\n                                                value={MOVE1_POWER}\r\n                                                name=\"MOVE1_POWER\"\r\n                                                onChange={moveHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"11\" controlId=\"validationCustom20\">\r\n                                                <Form.Label>Special Attack</Form.Label>\r\n                                                <Form.Control\r\n                                                    value={MOVE2_ABILITY}\r\n                                                    name=\"MOVE2_ABILITY\"\r\n                                                    onChange={moveHandler}\r\n                                                    required\r\n                                                    type=\"text\"\r\n\r\n                                                />\r\n                                                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                                \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"1\" controlId=\"validationCustom21\">\r\n                                            <Form.Label>Power</Form.Label>\r\n                                            <Form.Control\r\n                                                value={MOVE2_POWER}\r\n                                                name=\"MOVE2_POWER\"\r\n                                                onChange={moveHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"11\" controlId=\"validationCustom22\">\r\n                                                <Form.Label>Ultimate Attack</Form.Label>\r\n                                                <Form.Control\r\n                                                    value={MOVE3_ABILITY}\r\n                                                    name=\"MOVE3_ABILITY\"\r\n                                                    onChange={moveHandler}\r\n                                                    required\r\n                                                    type=\"text\"\r\n\r\n                                                />\r\n                                                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                                \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"1\" controlId=\"validationCustom23\">\r\n                                            <Form.Label>Power</Form.Label>\r\n                                            <Form.Control\r\n                                                value={MOVE3_POWER}\r\n                                                name=\"MOVE3_POWER\"\r\n                                                onChange={moveHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"8\" controlId=\"validationCustom24\">\r\n                                            <Form.Label>Enhancement</Form.Label>\r\n                                            <Form.Control\r\n                                                value={ENHANCER_ABILITY}\r\n                                                name=\"ENHANCER_ABILITY\"\r\n                                                onChange={moveHandler}\r\n                                                required\r\n                                                type=\"text\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom25\">\r\n                                        <Form.Label>Enhancement Type - {ENHANCEMENT_TYPE}</Form.Label>\r\n                                            <Select\r\n                                                onChange={moveEnhancementHandler}\r\n                                                options={\r\n                                                    enhancementSelector\r\n                                                }\r\n                                                required\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"1\" controlId=\"validationCustom26\">\r\n                                            <Form.Label>Power</Form.Label>\r\n                                            <Form.Control\r\n                                                value={ENHANCER_POWER}\r\n                                                name=\"ENHANCER_POWER\"\r\n                                                onChange={moveHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom27\">\r\n                                            <Form.Label> Available </Form.Label>\r\n                                            \r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                id=\"inlineFormCustomSelectPref\"\r\n                                                onChange={availableHandler}\r\n                                            >\r\n                                                <option value={true} name=\"true\">Yes</option>\r\n                                                <option value={\"\"} name=\"false\">No</option>\r\n                                            </Form.Control>\r\n                                            \r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} md=\"2\" controlId=\"validationCustom28\">\r\n                                            <Form.Label> Exclusive </Form.Label>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                id=\"inlineFormCustomSelectPref\"\r\n                                                onChange={exclusiveHandler}\r\n                                            >\r\n                                                <option value={true} name=\"true\">Yes</option>\r\n                                                <option value={\"\"} name=\"false\">No</option>\r\n                                            </Form.Control>\r\n                                            </Form.Group>\r\n                                    </Form.Row>\r\n                                    <Button type=\"submit\">Update Card</Button>\r\n                                    <br />\r\n                                    <br />\r\n                                    <Link to=\"/newcard\"><Button as={Col} md=\"2\" variant=\"outline-warning\">New Card</Button></Link> \r\n                                    <br/>\r\n                                    <br />\r\n                                    {submission_alert_dom}\r\n                                    \r\n                                    <Button onClick={handleShow} as={Col} md=\"2\" variant=\"danger\">Delete</Button>\r\n\r\n                                    <Modal show={modalShow} onHide={handleClose}>\r\n                                        <Modal.Header closeButton>\r\n                                        <Modal.Title>Are you sure you want delete this card?</Modal.Title>\r\n                                        </Modal.Header>\r\n                                        <Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                                            Close\r\n                                        </Button>\r\n                                        <Button variant=\"danger\" onClick={onDeleteHandler}>\r\n                                            Delete Card\r\n                                        </Button>\r\n                                        </Modal.Footer>\r\n                                    </Modal>\r\n\r\n                                </Form>\r\n\r\n                            </div>\r\n\r\n                            {/* <Alerts /> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    cards: state.cards\r\n})\r\n\r\nexport default connect(mapStateToProps, {updateCard, deleteCard})(UpdateCard)\r\n","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Spinner from '../isLoading/spinner';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport Select from 'react-select';\r\nimport { Form, Col, Button, Alert, Modal } from 'react-bootstrap';\r\nimport { armInitialState, arm_enhancements } from '../STATE'\r\nimport { updateArm, deleteArm } from '../../actions/arms'\r\n\r\nexport const UpdateArm = ({auth, history, updateArm, deleteArm}) => {\r\n    const [universes, setUniverse] = useState({\r\n        universe: [],\r\n        loading: true\r\n    });\r\n\r\n    const [armData, setArmData] = useState({\r\n        loading: true\r\n    })\r\n\r\n    const [data, setData] = useState(armInitialState);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const handleClose = () => setModalShow(false);\r\n    const handleShow = () => setModalShow(true);\r\n    const [validated, setValidated] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n    const [ability, setAbility] = useState({\r\n        POWER: 20,\r\n        ABILITY_TYPE: \"\"\r\n    });\r\n    // Build ability\r\n    var pass_power = ability.POWER\r\n    var pass_type = ability.ABILITY_TYPE\r\n    var abililty_Object = {}\r\n    abililty_Object[pass_type] = pass_power\r\n\r\n    const {\r\n        ARM,\r\n        PRICE,\r\n        TOURNAMENT_REQUIREMENTS,\r\n        ABILITIES,\r\n        UNIVERSE,\r\n        COLLECTION,\r\n        STOCK,\r\n        AVAILABLE,\r\n        EXCLUSIVE\r\n    } = data;\r\n    \r\n    useEffect(() => {\r\n        if(!auth.loading){\r\n            axios.get('/crown/universes')\r\n                .then((res) => {\r\n                    setUniverse({universe: res.data, loading: false})\r\n                })\r\n\r\n            axios.get('/crown/arms')\r\n                .then((res) => {\r\n                    setArmData({data: res.data, loading: false})\r\n                })\r\n        }\r\n      }, [auth])\r\n\r\n    const onChangeHandler = (e) => {\r\n        setShow(false)\r\n        if (e.target.type === \"number\"){\r\n            setData({\r\n                ...data,\r\n                [e.target.name]: e.target.valueAsNumber\r\n            })\r\n        } else if ((e.target.checked === true || e.target.checked === false) && e.target.name == \"formHorizontalRadios\") {\r\n            const radio = e.currentTarget.id === 'false' ? false : true\r\n            setData({\r\n                ...data,\r\n                HAS_COLLECTION: radio\r\n            })\r\n        } else {\r\n            setData({\r\n                ...data,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    const availableHandler = (e) => {\r\n        setData({\r\n            ...data,\r\n            AVAILABLE: Boolean(e.target.value)\r\n        })\r\n    }\r\n\r\n    const exclusiveHandler = (e) => {\r\n        setData({\r\n            ...data,\r\n            EXCLUSIVE: Boolean(e.target.value)\r\n        })\r\n    }\r\n\r\n    const abilityHandler = (e) => {\r\n        if (e.target.type === \"number\"){\r\n            setAbility({\r\n                ...ability,\r\n                [e.target.name]: e.target.valueAsNumber\r\n            })\r\n        } \r\n    }\r\n\r\n    if(!universes.loading) {\r\n        var universeSelector = universes.universe.map(universe => {\r\n            return {\r\n                value: universe.TITLE, label: `${universe.TITLE}`\r\n            }\r\n        })\r\n    \r\n        var universeHandler = (e) => {\r\n            let value = e[0]\r\n            universes.universe.map(universe => {\r\n                if (e.value === universe.TITLE) {\r\n                    setData({\r\n                        ...data,\r\n                        UNIVERSE: universe.TITLE,\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    if(!armData.loading) {\r\n        var armSelector = armData.data.map(arm => {\r\n            return {\r\n                value: arm.ARM, label: `${arm.ARM}`\r\n            }\r\n        })\r\n    \r\n        var armHandler = (e) => {\r\n            let value = e[0]\r\n            armData.data.map(arm => {\r\n                if (e.value === arm.ARM) {\r\n                    // Passive Breakdown\r\n                    var type = Object.keys(arm.ABILITIES[0])[0]\r\n                    var power = Object.values(arm.ABILITIES[0])[0]\r\n\r\n                    setAbility({\r\n                        ...ability,\r\n                        POWER: power,\r\n                        ABILITY_TYPE: type\r\n                    })\r\n\r\n                    var pass_power = ability.POWER\r\n                    var pass_type = ability.PASSIVE_TYPE\r\n                    var abilities_Object = {}\r\n                    abilities_Object[pass_type] = pass_power\r\n\r\n                    setData({\r\n                        ...data,\r\n                        ARM: arm.ARM,\r\n                        PRICE: arm.PRICE,\r\n                        TOURNAMENT_REQUIREMENTS: arm.TOURNAMENT_REQUIREMENTS,\r\n                        ABILITIES: [abilities_Object],\r\n                        UNIVERSE: arm.UNIVERSE,\r\n                        COLLECTION: \"N/A\",\r\n                        STOCK: arm.STOCK,\r\n                        AVAILABLE: arm.AVAILABLE,\r\n                        EXCLUSIVE: arm.EXCLUSIVE\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    var enhancementSelector = arm_enhancements.map(enhancement => {\r\n        return {\r\n            value: enhancement, label: `${enhancement}`\r\n        }\r\n    })\r\n\r\n    var abilityEnhancementHandler = (e) => {\r\n        let value = e[0]\r\n        arm_enhancements.map(enhancement => {\r\n            if (e.value === enhancement) {\r\n                setAbility({\r\n                    ...ability,\r\n                    ABILITY_TYPE: enhancement,\r\n                })\r\n            }\r\n        })\r\n\r\n    }\r\n    \r\n    var submission_response = \"Success!\";\r\n    var submission_alert_dom = <Alert show={show} variant=\"success\"> {submission_response} </Alert>\r\n    const onSubmitHandler = async (e) => {\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            setShow(false)\r\n            setValidated(true);\r\n        } else {\r\n            setValidated(false)\r\n            e.preventDefault();\r\n\r\n            var arm_update_data = data;\r\n            arm_update_data.ABILITIES = [abililty_Object]\r\n            const res = await updateArm(arm_update_data)\r\n\r\n            setData(armInitialState)\r\n            setTimeout(()=> {setShow(true)}, 1000)\r\n        }\r\n\r\n    }\r\n\r\n    const onDeleteHandler = async (e) => {\r\n        const form = e.currentTarget;\r\n        e.preventDefault();\r\n        const res = await deleteArm(data);\r\n        setModalShow(false);\r\n    }\r\n\r\n    const styleSheet = {\r\n        input: (base, state) => ({\r\n            ...base,\r\n            color: 'white'\r\n\r\n        })\r\n    };\r\n    return auth.loading || universes.loading ? (\r\n        <Spinner />\r\n    ) : (\r\n            <div>\r\n                <div className=\"page-header\">\r\n                    <h3 className=\"page-title\">\r\n                        Update Arm\r\n                    </h3>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 grid-margin\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <Form noValidate validated={validated} onSubmit={onSubmitHandler}>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                            <Form.Label><h3>Select Arm</h3></Form.Label>\r\n                                            <Select\r\n                                                onChange={armHandler}\r\n                                                options={\r\n                                                    armSelector\r\n                                                }\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n\r\n                                    <Form.Row>\r\n\r\n                                    <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Power</Form.Label>\r\n                                            <Form.Control\r\n                                                value={ability.POWER}\r\n                                                name=\"POWER\"\r\n                                                onChange={abilityHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n                                        <Form.Label>Type - {ability.ABILITY_TYPE}</Form.Label>\r\n                                            <Select\r\n                                                onChange={abilityEnhancementHandler}\r\n                                                options={\r\n                                                    enhancementSelector\r\n                                                }\r\n                                                required\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"1\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Price</Form.Label>\r\n                                            <Form.Control\r\n                                                value={PRICE}\r\n                                                name=\"PRICE\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"1\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Stock</Form.Label>\r\n                                            <Form.Control\r\n                                                value={STOCK}\r\n                                                name=\"STOCK\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        \r\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\r\n                                            <Form.Label> Available </Form.Label>\r\n                                            \r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                id=\"inlineFormCustomSelectPref\"\r\n                                                onChange={availableHandler}\r\n                                            >\r\n                                                <option value={true} name=\"true\">Yes</option>\r\n                                                <option value={\"\"} name=\"false\">No</option>\r\n                                            </Form.Control>\r\n                                            \r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\r\n                                            <Form.Label> Exclusive </Form.Label>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                id=\"inlineFormCustomSelectPref\"\r\n                                                onChange={exclusiveHandler}\r\n                                            >\r\n                                                <option value={true} name=\"true\">Yes</option>\r\n                                                <option value={\"\"} name=\"false\">No</option>\r\n                                            </Form.Control>\r\n                                            </Form.Group>\r\n                                    </Form.Row>\r\n                                    <Button type=\"submit\">Update Arm</Button>\r\n                                    <br/>\r\n                                    <br />\r\n                                    <Link to=\"/newarm\"><Button as={Col} md=\"2\" variant=\"outline-warning\">New Arm</Button></Link> \r\n                                    <br/>\r\n                                    <br />\r\n                                    {submission_alert_dom}\r\n\r\n                                    <Button onClick={handleShow} as={Col} md=\"2\" variant=\"danger\">Delete</Button>\r\n\r\n                                    <Modal show={modalShow} onHide={handleClose}>\r\n                                        <Modal.Header closeButton>\r\n                                        <Modal.Title>Are you sure you want delete this Arm?</Modal.Title>\r\n                                        </Modal.Header>\r\n                                        <Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                                            Close\r\n                                        </Button>\r\n                                        <Button variant=\"danger\" onClick={onDeleteHandler}>\r\n                                            Delete Arm\r\n                                        </Button>\r\n                                        </Modal.Footer>\r\n                                    </Modal>\r\n                                    \r\n                                    \r\n\r\n                                </Form>\r\n\r\n                            </div>\r\n\r\n                            {/* <Alerts /> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    cards: state.cards\r\n})\r\n\r\nexport default connect(mapStateToProps, {updateArm, deleteArm})(UpdateArm)\r\n","import axios from 'axios';\r\nimport {\r\n    ADD_ARM,\r\n    GET_ARMS,\r\n    DELETE_ARM,\r\n    UPDATE_ARM\r\n} from '../actiontypes/index';\r\nimport { loadUser } from \"./auth/auth\"; \r\n\r\n\r\nexport const loadArms = () => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get(\"/crown/arms\")\r\n        dispatch({\r\n            type: GET_ARMS,\r\n            payload: res\r\n        })\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const loadSingleArm = (arm) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get(`/crown/arms/${arm}`)\r\n        dispatch({\r\n            type: GET_ARMS,\r\n            payload: res\r\n        })\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const saveArm = (arm) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.post('/crown/arms/new', arm)\r\n        dispatch({\r\n            type: ADD_ARM,\r\n            payload: res\r\n        })\r\n        dispatch(loadUser());\r\n    } catch(err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const updateArm = (arm) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.post('/crown/arms/update', arm)\r\n        dispatch({\r\n            type: UPDATE_ARM,\r\n            payload: res\r\n        })\r\n        dispatch(loadUser());\r\n    } catch(err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const deleteArm = (arm) => async (dispatch) => {\r\n    \r\n    try {\r\n        console.log(arm)\r\n        const res = await axios.delete('/crown/arms/delete', {data: arm})\r\n        dispatch({\r\n            type: DELETE_ARM,\r\n            payload: res\r\n        })\r\n        dispatch(loadUser());\r\n    } catch(err) {\r\n        console.error(err)\r\n    }\r\n}","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Spinner from '../isLoading/spinner';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport Select from 'react-select';\r\nimport { Form, Col, Button, Alert } from 'react-bootstrap';\r\nimport { armInitialState, arm_enhancements } from '../STATE'\r\nimport { saveArm } from '../../actions/arms'\r\n\r\nexport const NewArm = ({auth, history, saveArm}) => {\r\n    const [universes, setUniverse] = useState({\r\n        universe: [],\r\n        loading: true\r\n    });\r\n    const [data, setData] = useState(armInitialState);\r\n    const [validated, setValidated] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n    const [ability, setAbility] = useState({\r\n        POWER: 20,\r\n        ABILITY_TYPE: \"\"\r\n    });\r\n    // Build ability\r\n    var pass_power = ability.POWER\r\n    var pass_type = ability.ABILITY_TYPE\r\n    var abililty_Object = {}\r\n    abililty_Object[pass_type] = pass_power\r\n\r\n    const {\r\n        ARM,\r\n        PRICE,\r\n        TOURNAMENT_REQUIREMENTS,\r\n        ABILITIES,\r\n        UNIVERSE,\r\n        COLLECTION,\r\n        STOCK,\r\n        AVAILABLE,\r\n        EXCLUSIVE\r\n    } = data;\r\n    \r\n    useEffect(() => {\r\n        if(!auth.loading){\r\n            axios.get('/crown/universes')\r\n                .then((res) => {\r\n                    setUniverse({universe: res.data, loading: false})\r\n                })\r\n        }\r\n      }, [auth])\r\n\r\n    const onChangeHandler = (e) => {\r\n        setShow(false)\r\n        if (e.target.type === \"number\"){\r\n            setData({\r\n                ...data,\r\n                [e.target.name]: e.target.valueAsNumber\r\n            })\r\n        } else if ((e.target.checked === true || e.target.checked === false) && e.target.name == \"formHorizontalRadios\") {\r\n            const radio = e.currentTarget.id === 'false' ? false : true\r\n            setData({\r\n                ...data,\r\n                HAS_COLLECTION: radio\r\n            })\r\n        } else {\r\n            setData({\r\n                ...data,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    const availableHandler = (e) => {\r\n        setData({\r\n            ...data,\r\n            AVAILABLE: Boolean(e.target.value)\r\n        })\r\n    }\r\n\r\n    const exclusiveHandler = (e) => {\r\n        setData({\r\n            ...data,\r\n            EXCLUSIVE: Boolean(e.target.value)\r\n        })\r\n    }\r\n\r\n    const abilityHandler = (e) => {\r\n        if (e.target.type === \"number\"){\r\n            setAbility({\r\n                ...ability,\r\n                [e.target.name]: e.target.valueAsNumber\r\n            })\r\n        } \r\n    }\r\n\r\n    if(!universes.loading) {\r\n        var universeSelector = universes.universe.map(universe => {\r\n            return {\r\n                value: universe.TITLE, label: `${universe.TITLE}`\r\n            }\r\n        })\r\n    \r\n        var universeHandler = (e) => {\r\n            let value = e[0]\r\n            universes.universe.map(universe => {\r\n                if (e.value === universe.TITLE) {\r\n                    setData({\r\n                        ...data,\r\n                        UNIVERSE: universe.TITLE,\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    var enhancementSelector = arm_enhancements.map(enhancement => {\r\n        return {\r\n            value: enhancement, label: `${enhancement}`\r\n        }\r\n    })\r\n\r\n    var abilityEnhancementHandler = (e) => {\r\n        let value = e[0]\r\n        arm_enhancements.map(enhancement => {\r\n            if (e.value === enhancement) {\r\n                setAbility({\r\n                    ...ability,\r\n                    ABILITY_TYPE: enhancement,\r\n                })\r\n            }\r\n        })\r\n\r\n    }\r\n    \r\n    var submission_response = \"Success!\";\r\n    var submission_alert_dom = <Alert show={show} variant=\"success\"> {submission_response} </Alert>\r\n    const onSubmitHandler = async (e) => {\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            setShow(false)\r\n            setValidated(true);\r\n        } else {\r\n            setValidated(false)\r\n            e.preventDefault();\r\n\r\n            var arm_update_data = data;\r\n            arm_update_data.ABILITIES = [abililty_Object]\r\n            // console.log(arm_update_data)\r\n            const res = await saveArm(data)\r\n\r\n            setData(armInitialState)\r\n            setTimeout(()=> {setShow(true)}, 1000)\r\n        }\r\n\r\n    }\r\n\r\n    const styleSheet = {\r\n        input: (base, state) => ({\r\n            ...base,\r\n            color: 'white'\r\n\r\n        })\r\n    };\r\n    return auth.loading || universes.loading ? (\r\n        <Spinner />\r\n    ) : (\r\n            <div>\r\n                <div className=\"page-header\">\r\n                    <h3 className=\"page-title\">\r\n                        New Crown Unlimited Arm\r\n                    </h3>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 grid-margin\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <Form noValidate validated={validated} onSubmit={onSubmitHandler}>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                            <Form.Label>Select Universe</Form.Label>\r\n                                            <Select\r\n                                                onChange={universeHandler}\r\n                                                options={\r\n                                                    universeSelector\r\n                                                }\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Name</Form.Label>\r\n                                            <Form.Control\r\n                                                value={ARM}\r\n                                                onChange={onChangeHandler}\r\n                                                name=\"ARM\"\r\n                                                required\r\n                                                type=\"text\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n\r\n                                    <Form.Row>\r\n\r\n                                    <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Power</Form.Label>\r\n                                            <Form.Control\r\n                                                value={ability.POWER}\r\n                                                name=\"POWER\"\r\n                                                onChange={abilityHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n                                        <Form.Label>Type</Form.Label>\r\n                                            <Select\r\n                                                onChange={abilityEnhancementHandler}\r\n                                                options={\r\n                                                    enhancementSelector\r\n                                                }\r\n                                                required\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"1\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Price</Form.Label>\r\n                                            <Form.Control\r\n                                                value={PRICE}\r\n                                                name=\"PRICE\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"1\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Stock</Form.Label>\r\n                                            <Form.Control\r\n                                                value={STOCK}\r\n                                                name=\"STOCK\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        \r\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\r\n                                            <Form.Label> Available </Form.Label>\r\n                                            \r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                id=\"inlineFormCustomSelectPref\"\r\n                                                onChange={availableHandler}\r\n                                            >\r\n                                                <option value={true} name=\"true\">Yes</option>\r\n                                                <option value={\"\"} name=\"false\">No</option>\r\n                                            </Form.Control>\r\n                                            \r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\r\n                                            <Form.Label> Exclusive </Form.Label>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                id=\"inlineFormCustomSelectPref\"\r\n                                                onChange={exclusiveHandler}\r\n                                            >\r\n                                                <option value={true} name=\"true\">Yes</option>\r\n                                                <option value={\"\"} name=\"false\">No</option>\r\n                                            </Form.Control>\r\n                                            </Form.Group>\r\n                                    </Form.Row>\r\n                                    <Button type=\"submit\">Create Arm</Button>\r\n                                    <br />\r\n                                    <br />\r\n                                    <Link to=\"/updatearms\"><Button variant=\"warning\">Update Arm</Button></Link> \r\n                                    <br/>\r\n                                    <br />\r\n                                    {submission_alert_dom}\r\n                                    \r\n                                    \r\n\r\n                                </Form>\r\n\r\n                            </div>\r\n\r\n                            {/* <Alerts /> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    cards: state.cards\r\n})\r\n\r\nexport default connect(mapStateToProps, {saveArm})(NewArm)\r\n","import axios from 'axios';\r\nimport {\r\n    GET_UNIVERSES,\r\n    ADD_UNIVERSE,\r\n    DELETE_UNIVERSE,\r\n    UPDATE_UNIVERSE\r\n} from '../actiontypes/index';\r\nimport { loadUser } from \"./auth/auth\"; \r\n\r\nexport const loadUniverses = () => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get(\"/crown/universes\")\r\n        dispatch({\r\n            type: GET_UNIVERSES,\r\n            payload: res\r\n        })\r\n    } catch(err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const saveUniverse = (universe) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.post('/crown/universes/new', universe)\r\n        dispatch({\r\n            type: ADD_UNIVERSE,\r\n            payload: res\r\n        })\r\n        dispatch(loadUser());\r\n    } catch(err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const updateUniverse = (universe) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.post(\"/crown/universes/update\", universe)\r\n        dispatch({\r\n            type: UPDATE_UNIVERSE,\r\n            payload: res\r\n        })\r\n        dispatch(loadUser());\r\n    } catch(err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const deleteUniverse = (universe) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.delete(\"/crown/universes/delete\", {data: universe})\r\n        dispatch({\r\n            type: DELETE_UNIVERSE,\r\n            payload: res\r\n        })\r\n        dispatch(loadUser());\r\n    } catch(err) {\r\n        console.error(err)\r\n    }\r\n}","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Spinner from '../isLoading/spinner';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport Select from 'react-select';\r\nimport { Form, Col, Button, Alert } from 'react-bootstrap';\r\nimport { universeInitialState } from '../STATE'\r\nimport { saveUniverse } from '../../actions/universes'\r\n\r\nexport const NewUniverse = ({auth, history, saveUniverse}) => {\r\n    const [universes, setUniverse] = useState({\r\n        universe: [],\r\n        loading: true\r\n    });\r\n    const [data, setData] = useState(universeInitialState);\r\n    const [validated, setValidated] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const {\r\n        TITLE,\r\n        PATH,\r\n        PREREQUISITE,\r\n        TIER,\r\n        CROWN_TALES,\r\n        HAS_CROWN_TALES,\r\n        UTITLE,\r\n        UPET,\r\n        UARM,\r\n        DTITLE,\r\n        DARM,\r\n        DPET,\r\n        UNIVERSE_BOSS\r\n    } = data;\r\n\r\n    useEffect(() => {\r\n        if(!auth.loading){\r\n            axios.get('/crown/universes')\r\n                .then((res) => {\r\n                    setUniverse({universe: res.data, loading: false})\r\n                })\r\n        }\r\n    }, [auth])\r\n\r\n    const onChangeHandler = (e) => {\r\n        setShow(false)\r\n        if (e.target.type === \"number\"){\r\n            setData({\r\n                ...data,\r\n                [e.target.name]: e.target.valueAsNumber\r\n            })\r\n        } else {\r\n            setData({\r\n                ...data,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    if(!universes.loading) {\r\n        var universeSelector = universes.universe.map(universe => {\r\n            return {\r\n                value: universe.TITLE, label: `${universe.TITLE}`\r\n            }\r\n        })\r\n    \r\n        var universeHandler = (e) => {\r\n            let value = e[0]\r\n            universes.universe.map(universe => {\r\n                if (e.value === universe.TITLE) {\r\n                    setData({\r\n                        ...data,\r\n                        PREREQUISITE: universe.TITLE,\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n    \r\n    var submission_response = \"Success!\";\r\n    var submission_alert_dom = <Alert show={show} variant=\"success\"> {submission_response} </Alert>\r\n    const onSubmitHandler = async (e) => {\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            setShow(false)\r\n            setValidated(true);\r\n        } else {\r\n            setValidated(false)\r\n            e.preventDefault();\r\n\r\n            const res = await saveUniverse(data)\r\n\r\n            setData(universeInitialState)\r\n            setTimeout(()=> {setShow(true)}, 1000)\r\n        }\r\n\r\n    }\r\n\r\n    const styleSheet = {\r\n        input: (base, state) => ({\r\n            ...base,\r\n            color: 'white'\r\n\r\n        })\r\n    };\r\n\r\n    return auth.loading ? (\r\n        <Spinner />\r\n    ) : (\r\n            <div>\r\n                <div className=\"page-header\">\r\n                    <h3 className=\"page-title\">\r\n                        New Crown Unlimited Arm\r\n                    </h3>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 grid-margin\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <Form noValidate validated={validated} onSubmit={onSubmitHandler}>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Universe Name</Form.Label>\r\n                                            <Form.Control\r\n                                                value={TITLE}\r\n                                                onChange={onChangeHandler}\r\n                                                name=\"TITLE\"\r\n                                                required\r\n                                                type=\"text\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Prerequisite - {PREREQUISITE}</Form.Label>\r\n                                            <Select\r\n                                                onChange={universeHandler}\r\n                                                options={\r\n                                                    universeSelector\r\n                                                }\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n\r\n                                    <Form.Row>\r\n\r\n                                    <Form.Group as={Col} md=\"12\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Path</Form.Label>\r\n                                            <Form.Control\r\n                                                value={PATH}\r\n                                                name=\"PATH\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"text\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Tier</Form.Label>\r\n                                            <Form.Control\r\n                                                value={TIER}\r\n                                                name=\"TIER\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        \r\n                                    </Form.Row>\r\n                                    <Button type=\"submit\">Create Universe</Button>\r\n                                    <br />\r\n                                    <br />\r\n                                    <Link to=\"/updateuniverse\"><Button variant=\"warning\">Update Universe</Button></Link> \r\n                                    <br/>\r\n                                    <br />\r\n                                    {submission_alert_dom}\r\n                                    \r\n                                    \r\n\r\n                                </Form>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    cards: state.cards\r\n})\r\n\r\nexport default connect(mapStateToProps, {saveUniverse})(NewUniverse)\r\n","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Spinner from '../isLoading/spinner';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport Select from 'react-select';\r\nimport { Form, Col, Button, Alert, Modal } from 'react-bootstrap';\r\nimport { universeInitialState } from '../STATE';\r\nimport { updateUniverse, saveUniverse, deleteUniverse } from '../../actions/universes';\r\n\r\nexport const UpdateUniverse = ({auth, history, updateUniverse, deleteUniverse}) => {\r\n    const [universes, setUniverse] = useState({\r\n        universe: [],\r\n        loading: true\r\n    });\r\n\r\n    const [universeData, setUniverseData] = useState({\r\n        loading: true\r\n    })\r\n    const [data, setData] = useState(universeInitialState);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const handleClose = () => setModalShow(false);\r\n    const handleShow = () => setModalShow(true);\r\n    const [validated, setValidated] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const {\r\n        TITLE,\r\n        PATH,\r\n        PREREQUISITE,\r\n        TIER,\r\n        CROWN_TALES,\r\n        HAS_CROWN_TALES,\r\n        UTITLE,\r\n        UPET,\r\n        UARM,\r\n        DTITLE,\r\n        DARM,\r\n        DPET,\r\n        UNIVERSE_BOSS\r\n    } = data;\r\n\r\n    useEffect(() => {\r\n        if(!auth.loading){\r\n            axios.get('/crown/universes')\r\n                .then((res) => {\r\n                    setUniverse({universe: res.data, loading: false})\r\n                })\r\n        }\r\n    }, [auth])\r\n\r\n    const onChangeHandler = (e) => {\r\n        setShow(false)\r\n        if (e.target.type === \"number\"){\r\n            setData({\r\n                ...data,\r\n                [e.target.name]: e.target.valueAsNumber\r\n            })\r\n        } else {\r\n            setData({\r\n                ...data,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    if(!universes.loading) {\r\n        var universeSelector = universes.universe.map(universe => {\r\n            return {\r\n                value: universe.TITLE, label: `${universe.TITLE}`\r\n            }\r\n        })\r\n    \r\n        var universeHandler = (e) => {\r\n            let value = e[0]\r\n            universes.universe.map(universe => {\r\n                if (e.value === universe.TITLE) {\r\n                    setData({\r\n                        ...data,\r\n                        TITLE: universe.TITLE,\r\n                        PATH: universe.PATH,\r\n                        PREREQUISITE: universe.PREREQUISITE,\r\n                        TIER: universe.TIER,\r\n                        CROWN_TALES: universe.CROWN_TALES,\r\n                        HAS_CROWN_TALES: universe.HAS_CROWN_TALES,\r\n                        UTITLE: universe.UTITLE,\r\n                        UPET: universe.UPET,\r\n                        UARM: universe.UARM,\r\n                        DTITLE: universe.DTITLE,\r\n                        DARM: universe.DARM,\r\n                        DPET: universe.DPET,\r\n                        UNIVERSE_BOSS: universe.UNIVERSE_BOSS\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n        var universePrereqSelector = universes.universe.map(universe => {\r\n            return {\r\n                value: universe.TITLE, label: `${universe.TITLE}`\r\n            }\r\n        })\r\n    \r\n        var universePrereqHandler = (e) => {\r\n            let value = e[0]\r\n            universes.universe.map(universe => {\r\n                if (e.value === universe.TITLE) {\r\n                    setData({\r\n                        ...data,\r\n                        PREREQUISITE: universe.TITLE,\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n    \r\n    var submission_response = \"Success!\";\r\n    var submission_alert_dom = <Alert show={show} variant=\"success\"> {submission_response} </Alert>\r\n    const onSubmitHandler = async (e) => {\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            setShow(false)\r\n            setValidated(true);\r\n        } else {\r\n            setValidated(false)\r\n            e.preventDefault();\r\n            console.log(data)\r\n            const res = await updateUniverse(data)\r\n\r\n            setData(universeInitialState)\r\n            setTimeout(()=> {setShow(true)}, 1000)\r\n        }\r\n\r\n    }\r\n\r\n    const onDeleteHandler = async (e) => {\r\n        const form = e.currentTarget;\r\n        e.preventDefault();\r\n        const res = await deleteUniverse(data);\r\n        setModalShow(false);\r\n    }\r\n\r\n    const styleSheet = {\r\n        input: (base, state) => ({\r\n            ...base,\r\n            color: 'white'\r\n\r\n        })\r\n    };\r\n\r\n    return auth.loading || universes.loading ? (\r\n        <Spinner />\r\n    ) : (\r\n            <div>\r\n                <div className=\"page-header\">\r\n                    <h3 className=\"page-title\">\r\n                        New Crown Unlimited Arm\r\n                    </h3>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 grid-margin\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <Form noValidate validated={validated} onSubmit={onSubmitHandler}>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Select Universe - {TITLE}</Form.Label>\r\n                                            <Select\r\n                                                onChange={universeHandler}\r\n                                                options={\r\n                                                    universeSelector\r\n                                                }\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Prerequisite - {PREREQUISITE}</Form.Label>\r\n                                            <Select\r\n                                                onChange={universePrereqHandler}\r\n                                                options={\r\n                                                    universePrereqSelector\r\n                                                }\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n\r\n                                    <Form.Row>\r\n\r\n                                    <Form.Group as={Col} md=\"12\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Path</Form.Label>\r\n                                            <Form.Control\r\n                                                value={PATH}\r\n                                                name=\"PATH\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"text\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Tier</Form.Label>\r\n                                            <Form.Control\r\n                                                value={TIER}\r\n                                                name=\"TIER\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        \r\n                                    </Form.Row>\r\n                                    <Button type=\"submit\">Update Universe</Button>\r\n                                    <br />\r\n                                    <br />\r\n                                    <Link to=\"/newuniverse\"><Button variant=\"outline-warning\">New Universe</Button></Link> \r\n                                    <br/>\r\n                                    <br />\r\n                                    {submission_alert_dom}\r\n\r\n                                    <Button onClick={handleShow} as={Col} md=\"2\" variant=\"danger\">Delete</Button>\r\n\r\n                                    <Modal show={modalShow} onHide={handleClose}>\r\n                                        <Modal.Header closeButton>\r\n                                        <Modal.Title>Are you sure you want delete this Arm?</Modal.Title>\r\n                                        </Modal.Header>\r\n                                        <Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                                            Close\r\n                                        </Button>\r\n                                        <Button variant=\"danger\" onClick={onDeleteHandler}>\r\n                                            Delete Arm\r\n                                        </Button>\r\n                                        </Modal.Footer>\r\n                                    </Modal>\r\n                                    \r\n                                    \r\n\r\n                                </Form>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    cards: state.cards\r\n})\r\n\r\nexport default connect(mapStateToProps, {saveUniverse, updateUniverse, deleteUniverse})(UpdateUniverse)\r\n","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Spinner from '../isLoading/spinner';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport Select from 'react-select';\r\nimport { Form, Col, Button, Alert, Modal } from 'react-bootstrap';\r\nimport { titleInitialState, enhancements } from '../STATE'\r\nimport { updateTitle, deleteTitle } from '../../actions/titles'\r\n\r\nexport const UpdateTitle = ({auth, history, updateTitle, deleteTitle}) => {\r\n    const [universes, setUniverse] = useState({\r\n        universe: [],\r\n        loading: true\r\n    });\r\n\r\n    const [titleData, setTitleData] = useState({\r\n        loading: true\r\n    })\r\n\r\n    const [data, setData] = useState(titleInitialState);\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const handleClose = () => setModalShow(false);\r\n    const handleShow = () => setModalShow(true);\r\n    const [validated, setValidated] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n    const [ability, setAbility] = useState({\r\n        POWER: 20,\r\n        ABILITY_TYPE: \"\"\r\n    });\r\n    // Build ability\r\n    var pass_power = ability.POWER\r\n    var pass_type = ability.ABILITY_TYPE\r\n    var abililty_Object = {}\r\n    abililty_Object[pass_type] = pass_power\r\n\r\n    const {\r\n        TITLE,\r\n        PRICE,\r\n        TOURNAMENT_REQUIREMENTS,\r\n        ABILITIES,\r\n        UNIVERSE,\r\n        COLLECTION,\r\n        STOCK,\r\n        AVAILABLE,\r\n        EXCLUSIVE\r\n    } = data;\r\n    \r\n    useEffect(() => {\r\n        if(!auth.loading){\r\n            axios.get('/crown/universes')\r\n                .then((res) => {\r\n                    setUniverse({universe: res.data, loading: false})\r\n                })\r\n\r\n            axios.get('/crown/titles')\r\n                .then((res) => {\r\n                    setTitleData({data: res.data, loading: false})\r\n                })\r\n        }\r\n      }, [auth])\r\n\r\n    const onChangeHandler = (e) => {\r\n        setShow(false)\r\n        if (e.target.type === \"number\"){\r\n            setData({\r\n                ...data,\r\n                [e.target.name]: e.target.valueAsNumber\r\n            })\r\n        } else if ((e.target.checked === true || e.target.checked === false) && e.target.name == \"formHorizontalRadios\") {\r\n            const radio = e.currentTarget.id === 'false' ? false : true\r\n            setData({\r\n                ...data,\r\n                HAS_COLLECTION: radio\r\n            })\r\n        } else {\r\n            setData({\r\n                ...data,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    const availableHandler = (e) => {\r\n        setData({\r\n            ...data,\r\n            AVAILABLE: Boolean(e.target.value)\r\n        })\r\n    }\r\n\r\n    const exclusiveHandler = (e) => {\r\n        setData({\r\n            ...data,\r\n            EXCLUSIVE: Boolean(e.target.value)\r\n        })\r\n    }\r\n\r\n    const abilityHandler = (e) => {\r\n        if (e.target.type === \"number\"){\r\n            setAbility({\r\n                ...ability,\r\n                [e.target.name]: e.target.valueAsNumber\r\n            })\r\n        } \r\n    }\r\n\r\n    if(!universes.loading) {\r\n        var universeSelector = universes.universe.map(universe => {\r\n            return {\r\n                value: universe.TITLE, label: `${universe.TITLE}`\r\n            }\r\n        })\r\n    \r\n        var universeHandler = (e) => {\r\n            let value = e[0]\r\n            universes.universe.map(universe => {\r\n                if (e.value === universe.TITLE) {\r\n                    setData({\r\n                        ...data,\r\n                        UNIVERSE: universe.TITLE,\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    if(!titleData.loading) {\r\n        var titleSelector = titleData.data.map(title => {\r\n            return {\r\n                value: title.TITLE, label: `${title.TITLE}`\r\n            }\r\n        })\r\n    \r\n        var titleHandler = (e) => {\r\n            let value = e[0]\r\n            titleData.data.map(title => {\r\n                if (e.value === title.TITLE) {\r\n                    // Passive Breakdown\r\n                    var type = Object.keys(title.ABILITIES[0])[0]\r\n                    var power = Object.values(title.ABILITIES[0])[0]\r\n\r\n                    setAbility({\r\n                        ...ability,\r\n                        POWER: power,\r\n                        ABILITY_TYPE: type\r\n                    })\r\n\r\n                    var pass_power = ability.POWER\r\n                    var pass_type = ability.PASSIVE_TYPE\r\n                    var abilities_Object = {}\r\n                    abilities_Object[pass_type] = pass_power\r\n\r\n                    setData({\r\n                        ...data,\r\n                        TITLE: title.TITLE,\r\n                        PRICE: title.PRICE,\r\n                        TOURNAMENT_REQUIREMENTS: title.TOURNAMENT_REQUIREMENTS,\r\n                        ABILITIES: [abilities_Object],\r\n                        UNIVERSE: title.UNIVERSE,\r\n                        COLLECTION: \"N/A\",\r\n                        STOCK: title.STOCK,\r\n                        AVAILABLE: title.AVAILABLE,\r\n                        EXCLUSIVE: title.EXCLUSIVE\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    var enhancementSelector = enhancements.map(enhancement => {\r\n        return {\r\n            value: enhancement, label: `${enhancement}`\r\n        }\r\n    })\r\n\r\n    var abilityEnhancementHandler = (e) => {\r\n        let value = e[0]\r\n        enhancements.map(enhancement => {\r\n            if (e.value === enhancement) {\r\n                setAbility({\r\n                    ...ability,\r\n                    ABILITY_TYPE: enhancement,\r\n                })\r\n            }\r\n        })\r\n\r\n    }\r\n    \r\n    var submission_response = \"Success!\";\r\n    var submission_alert_dom = <Alert show={show} variant=\"success\"> {submission_response} </Alert>\r\n    const onSubmitHandler = async (e) => {\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            setShow(false)\r\n            setValidated(true);\r\n        } else {\r\n            setValidated(false)\r\n            e.preventDefault();\r\n\r\n            var title_update_data = data;\r\n            title_update_data.ABILITIES = [abililty_Object]\r\n            console.log(title_update_data)\r\n            const res = await updateTitle(title_update_data)\r\n\r\n            setData(titleInitialState)\r\n            setTimeout(()=> {setShow(true)}, 1000)\r\n        }\r\n\r\n    }\r\n\r\n    const onDeleteHandler = async (e) => {\r\n        const form = e.currentTarget;\r\n        e.preventDefault();\r\n        const res = await deleteTitle(data);\r\n        setModalShow(false);\r\n    }\r\n\r\n    const styleSheet = {\r\n        input: (base, state) => ({\r\n            ...base,\r\n            color: 'white'\r\n\r\n        })\r\n    };\r\n    return auth.loading || universes.loading ? (\r\n        <Spinner />\r\n    ) : (\r\n            <div>\r\n                <div className=\"page-header\">\r\n                    <h3 className=\"page-title\">\r\n                        Update Title\r\n                    </h3>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 grid-margin\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <Form noValidate validated={validated} onSubmit={onSubmitHandler}>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                            <Form.Label><h3>Select Title</h3></Form.Label>\r\n                                            <Select\r\n                                                onChange={titleHandler}\r\n                                                options={\r\n                                                    titleSelector\r\n                                                }\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n\r\n                                    <Form.Row>\r\n\r\n                                    <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Power</Form.Label>\r\n                                            <Form.Control\r\n                                                value={ability.POWER}\r\n                                                name=\"POWER\"\r\n                                                onChange={abilityHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n                                        <Form.Label>Type - {ability.ABILITY_TYPE}</Form.Label>\r\n                                            <Select\r\n                                                onChange={abilityEnhancementHandler}\r\n                                                options={\r\n                                                    enhancementSelector\r\n                                                }\r\n                                                required\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"1\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Price</Form.Label>\r\n                                            <Form.Control\r\n                                                value={PRICE}\r\n                                                name=\"PRICE\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"1\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Stock</Form.Label>\r\n                                            <Form.Control\r\n                                                value={STOCK}\r\n                                                name=\"STOCK\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        \r\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\r\n                                            <Form.Label> Available </Form.Label>\r\n                                            \r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                id=\"inlineFormCustomSelectPref\"\r\n                                                onChange={availableHandler}\r\n                                            >\r\n                                                <option value={true} name=\"true\">Yes</option>\r\n                                                <option value={\"\"} name=\"false\">No</option>\r\n                                            </Form.Control>\r\n                                            \r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\r\n                                            <Form.Label> Exclusive </Form.Label>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                id=\"inlineFormCustomSelectPref\"\r\n                                                onChange={exclusiveHandler}\r\n                                            >\r\n                                                <option value={true} name=\"true\">Yes</option>\r\n                                                <option value={\"\"} name=\"false\">No</option>\r\n                                            </Form.Control>\r\n                                            </Form.Group>\r\n                                    </Form.Row>\r\n                                    <Button type=\"submit\">Update Title</Button>\r\n                                    <br/>\r\n                                    <br />\r\n                                    <Link to=\"/newtitle\"><Button as={Col} md=\"2\" variant=\"outline-warning\">New Title</Button></Link> \r\n                                    <br/>\r\n                                    <br />\r\n                                    {submission_alert_dom}\r\n\r\n                                    <Button onClick={handleShow} as={Col} md=\"2\" variant=\"danger\">Delete</Button>\r\n\r\n                                    <Modal show={modalShow} onHide={handleClose}>\r\n                                        <Modal.Header closeButton>\r\n                                        <Modal.Title>Are you sure you want delete this Title?</Modal.Title>\r\n                                        </Modal.Header>\r\n                                        <Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                                            Close\r\n                                        </Button>\r\n                                        <Button variant=\"danger\" onClick={onDeleteHandler}>\r\n                                            Delete Title\r\n                                        </Button>\r\n                                        </Modal.Footer>\r\n                                    </Modal>\r\n                                    \r\n                                    \r\n\r\n                                </Form>\r\n\r\n                            </div>\r\n\r\n                            {/* <Alerts /> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    cards: state.cards\r\n})\r\n\r\nexport default connect(mapStateToProps, {updateTitle, deleteTitle})(UpdateTitle)\r\n","import axios from 'axios';\r\nimport {\r\n    ADD_TITLE,\r\n    GET_TITLES,\r\n    DELETE_TITLE,\r\n    UPDATE_TITLE\r\n} from '../actiontypes/index';\r\nimport { loadUser } from \"./auth/auth\"; \r\n\r\n\r\nexport const loadTitles = () => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get(\"/crown/titles\")\r\n        dispatch({\r\n            type: GET_TITLES,\r\n            payload: res\r\n        })\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const loadSingleTitle = (title) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get(`/crown/titles/${title}`)\r\n        dispatch({\r\n            type: GET_TITLES,\r\n            payload: res\r\n        })\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const saveTitle = (title) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.post('/crown/titles/new', title)\r\n        dispatch({\r\n            type: ADD_TITLE,\r\n            payload: res\r\n        })\r\n        dispatch(loadUser());\r\n    } catch(err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const updateTitle = (title) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.post('/crown/titles/update', title)\r\n        dispatch({\r\n            type: UPDATE_TITLE,\r\n            payload: res\r\n        })\r\n        dispatch(loadUser());\r\n    } catch(err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const deleteTitle = (title) => async (dispatch) => {\r\n    \r\n    try {\r\n        console.log(title)\r\n        const res = await axios.delete('/crown/titles/delete', {data: title})\r\n        dispatch({\r\n            type: DELETE_TITLE,\r\n            payload: res\r\n        })\r\n        dispatch(loadUser());\r\n    } catch(err) {\r\n        console.error(err)\r\n    }\r\n}","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Spinner from '../isLoading/spinner';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport Select from 'react-select';\r\nimport { Form, Col, Button, Alert } from 'react-bootstrap';\r\nimport { titleInitialState, enhancements } from '../STATE'\r\nimport { saveTitle } from '../../actions/titles'\r\n\r\nexport const NewTitle = ({auth, history, saveTitle}) => {\r\n    const [universes, setUniverse] = useState({\r\n        universe: [],\r\n        loading: true\r\n    });\r\n    const [data, setData] = useState(titleInitialState);\r\n    const [validated, setValidated] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n    const [ability, setAbility] = useState({\r\n        POWER: 20,\r\n        ABILITY_TYPE: \"\"\r\n    });\r\n    // Build ability\r\n    var pass_power = ability.POWER\r\n    var pass_type = ability.ABILITY_TYPE\r\n    var abililty_Object = {}\r\n    abililty_Object[pass_type] = pass_power\r\n\r\n    const {\r\n        TITLE,\r\n        PRICE,\r\n        TOURNAMENT_REQUIREMENTS,\r\n        ABILITIES,\r\n        UNIVERSE,\r\n        COLLECTION,\r\n        STOCK,\r\n        AVAILABLE,\r\n        EXCLUSIVE\r\n    } = data;\r\n    \r\n    useEffect(() => {\r\n        if(!auth.loading){\r\n            axios.get('/crown/universes')\r\n                .then((res) => {\r\n                    setUniverse({universe: res.data, loading: false})\r\n                })\r\n        }\r\n      }, [auth])\r\n\r\n    const onChangeHandler = (e) => {\r\n        setShow(false)\r\n        if (e.target.type === \"number\"){\r\n            setData({\r\n                ...data,\r\n                [e.target.name]: e.target.valueAsNumber\r\n            })\r\n        } else if ((e.target.checked === true || e.target.checked === false) && e.target.name == \"formHorizontalRadios\") {\r\n            const radio = e.currentTarget.id === 'false' ? false : true\r\n            setData({\r\n                ...data,\r\n                HAS_COLLECTION: radio\r\n            })\r\n        } else {\r\n            setData({\r\n                ...data,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    const availableHandler = (e) => {\r\n        setData({\r\n            ...data,\r\n            AVAILABLE: Boolean(e.target.value)\r\n        })\r\n    }\r\n\r\n    const exclusiveHandler = (e) => {\r\n        setData({\r\n            ...data,\r\n            EXCLUSIVE: Boolean(e.target.value)\r\n        })\r\n    }\r\n\r\n    const abilityHandler = (e) => {\r\n        if (e.target.type === \"number\"){\r\n            setAbility({\r\n                ...ability,\r\n                [e.target.name]: e.target.valueAsNumber\r\n            })\r\n        } \r\n    }\r\n\r\n    if(!universes.loading) {\r\n        var universeSelector = universes.universe.map(universe => {\r\n            return {\r\n                value: universe.TITLE, label: `${universe.TITLE}`\r\n            }\r\n        })\r\n    \r\n        var universeHandler = (e) => {\r\n            let value = e[0]\r\n            universes.universe.map(universe => {\r\n                if (e.value === universe.TITLE) {\r\n                    setData({\r\n                        ...data,\r\n                        UNIVERSE: universe.TITLE,\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    var enhancementSelector = enhancements.map(enhancement => {\r\n        return {\r\n            value: enhancement, label: `${enhancement}`\r\n        }\r\n    })\r\n\r\n    var abilityEnhancementHandler = (e) => {\r\n        let value = e[0]\r\n        enhancements.map(enhancement => {\r\n            if (e.value === enhancement) {\r\n                setAbility({\r\n                    ...ability,\r\n                    ABILITY_TYPE: enhancement,\r\n                })\r\n            }\r\n        })\r\n\r\n    }\r\n    \r\n    var submission_response = \"Success!\";\r\n    var submission_alert_dom = <Alert show={show} variant=\"success\"> {submission_response} </Alert>\r\n    const onSubmitHandler = async (e) => {\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            setShow(false)\r\n            setValidated(true);\r\n        } else {\r\n            setValidated(false)\r\n            e.preventDefault();\r\n\r\n            var title_update_data = data;\r\n            title_update_data.ABILITIES = [abililty_Object]\r\n            // console.log(title_update_data)\r\n            const res = await saveTitle(data)\r\n\r\n            setData(titleInitialState)\r\n            setTimeout(()=> {setShow(true)}, 1000)\r\n        }\r\n\r\n    }\r\n\r\n    const styleSheet = {\r\n        input: (base, state) => ({\r\n            ...base,\r\n            color: 'white'\r\n\r\n        })\r\n    };\r\n    return auth.loading || universes.loading ? (\r\n        <Spinner />\r\n    ) : (\r\n            <div>\r\n                <div className=\"page-header\">\r\n                    <h3 className=\"page-title\">\r\n                        New Crown Unlimited Title\r\n                    </h3>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 grid-margin\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <Form noValidate validated={validated} onSubmit={onSubmitHandler}>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                            <Form.Label>Select Universe</Form.Label>\r\n                                            <Select\r\n                                                onChange={universeHandler}\r\n                                                options={\r\n                                                    universeSelector\r\n                                                }\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Name</Form.Label>\r\n                                            <Form.Control\r\n                                                value={TITLE}\r\n                                                onChange={onChangeHandler}\r\n                                                name=\"TITLE\"\r\n                                                required\r\n                                                type=\"text\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n\r\n                                    <Form.Row>\r\n\r\n                                    <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Power</Form.Label>\r\n                                            <Form.Control\r\n                                                value={ability.POWER}\r\n                                                name=\"POWER\"\r\n                                                onChange={abilityHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n                                        <Form.Label>Type</Form.Label>\r\n                                            <Select\r\n                                                onChange={abilityEnhancementHandler}\r\n                                                options={\r\n                                                    enhancementSelector\r\n                                                }\r\n                                                required\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"1\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Price</Form.Label>\r\n                                            <Form.Control\r\n                                                value={PRICE}\r\n                                                name=\"PRICE\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"1\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Stock</Form.Label>\r\n                                            <Form.Control\r\n                                                value={STOCK}\r\n                                                name=\"STOCK\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        \r\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\r\n                                            <Form.Label> Available </Form.Label>\r\n                                            \r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                id=\"inlineFormCustomSelectPref\"\r\n                                                onChange={availableHandler}\r\n                                            >\r\n                                                <option value={true} name=\"true\">Yes</option>\r\n                                                <option value={\"\"} name=\"false\">No</option>\r\n                                            </Form.Control>\r\n                                            \r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\r\n                                            <Form.Label> Exclusive </Form.Label>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                id=\"inlineFormCustomSelectPref\"\r\n                                                onChange={exclusiveHandler}\r\n                                            >\r\n                                                <option value={true} name=\"true\">Yes</option>\r\n                                                <option value={\"\"} name=\"false\">No</option>\r\n                                            </Form.Control>\r\n                                            </Form.Group>\r\n                                    </Form.Row>\r\n                                    <Button type=\"submit\">Create Title</Button>\r\n                                    <br />\r\n                                    <br />\r\n                                    <Link to=\"/updatetitles\"><Button variant=\"warning\">Update Title</Button></Link> \r\n                                    <br/>\r\n                                    <br />\r\n                                    {submission_alert_dom}\r\n                                    \r\n                                    \r\n\r\n                                </Form>\r\n\r\n                            </div>\r\n\r\n                            {/* <Alerts /> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    titles: state.titles\r\n})\r\n\r\nexport default connect(mapStateToProps, {saveTitle})(NewTitle)\r\n","import axios from 'axios';\r\nimport {\r\n    GET_ABYSS,\r\n    ADD_ABYSS,\r\n    DELETE_ABYSS,\r\n    UPDATE_ABYSS\r\n} from '../actiontypes/index';\r\nimport { loadUser } from \"./auth/auth\"; \r\n\r\nexport const loadAbyss = () => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get(\"/crown/abyss\")\r\n        dispatch({\r\n            type: GET_ABYSS,\r\n            payload: res\r\n        })\r\n    } catch(err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const saveAbyss = (abyss) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.post('/crown/abyss/new', abyss)\r\n        dispatch({\r\n            type: ADD_ABYSS,\r\n            payload: res\r\n        })\r\n        dispatch(loadUser());\r\n    } catch(err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const updateAbyss = (abyss) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.post(\"/crown/abyss/update\", abyss)\r\n        dispatch({\r\n            type: UPDATE_ABYSS,\r\n            payload: res\r\n        })\r\n        dispatch(loadUser());\r\n    } catch(err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const deleteAbyss = (abyss) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.delete(\"/crown/abyss/delete\", {data: abyss})\r\n        dispatch({\r\n            type: DELETE_ABYSS,\r\n            payload: res\r\n        })\r\n        dispatch(loadUser());\r\n    } catch(err) {\r\n        console.error(err)\r\n    }\r\n}","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Spinner from '../isLoading/spinner';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport Select from 'react-select';\r\nimport { Form, Col, Button, Alert } from 'react-bootstrap';\r\nimport { abyssInitialState } from '../STATE'\r\nimport { saveAbyss } from '../../actions/abyss'\r\n\r\nexport const NewAbyss = ({auth, history, saveAbyss}) => {\r\n    const [universes, setUniverse] = useState({\r\n        universe: [],\r\n        loading: true\r\n    });\r\n\r\n    const [cards, setCard] = useState({\r\n        card: [],\r\n        loading: true\r\n    });\r\n\r\n    const [pets, setPet] = useState({\r\n        pet: [],\r\n        loading: true\r\n    });\r\n\r\n    const [titles, setTitle] = useState({\r\n        title: [],\r\n        loading: true\r\n    });\r\n\r\n    const [arms, setArm] = useState({\r\n        arm: [],\r\n        loading: true\r\n    });\r\n\r\n    const [tiers, setTier] = useState({\r\n        tier: [\r\n            {UNI_TIER: 1},\r\n            {UNI_TIER: 2},\r\n            {UNI_TIER: 3},\r\n            {UNI_TIER: 4},\r\n            {UNI_TIER: 5}\r\n        ],\r\n        loading: false\r\n    });\r\n\r\n    \r\n\r\n    const [data, setData] = useState(abyssInitialState);\r\n    const [validated, setValidated] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const {\r\n        FLOOR,\r\n        ENEMIES,\r\n        BANNED_CARDS,\r\n        BANNED_TITLES,\r\n        BANNED_ARMS,\r\n        BANNED_UNIVERSES,\r\n        BANNED_TIERS,\r\n        BANNED_PETS,\r\n        TITLE,\r\n        ARM,\r\n        PET,\r\n        SPECIAL_BUFF\r\n    } = data;\r\n    \r\n    useEffect(() => {\r\n        if(!auth.loading){\r\n            axios.get('/crown/universes')\r\n                .then((res) => {\r\n                    setUniverse({universe: res.data, loading: false})\r\n                })\r\n\r\n            axios.get('/crown/cards')\r\n                .then((res) => {\r\n                    setCard({card: res.data, loading: false})\r\n                })\r\n\r\n            axios.get('/crown/pets')\r\n                .then((res) => {\r\n                    setPet({pet: res.data, loading: false})\r\n                })\r\n\r\n            axios.get('/crown/titles')\r\n                .then((res) => {\r\n                    setTitle({title: res.data, loading: false})\r\n                })\r\n            \r\n                axios.get('/crown/arms')\r\n                .then((res) => {\r\n                    setArm({arm: res.data, loading: false})\r\n                })\r\n        }\r\n      }, [auth])\r\n\r\n    const onChangeHandler = (e) => {\r\n        setShow(false)\r\n        setData({\r\n            ...data,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    if(!universes.loading) {\r\n        var universeSelector = universes.universe.map(universe => {\r\n            return {\r\n                value: universe.TITLE, label: `${universe.TITLE}`\r\n            }\r\n        })\r\n    \r\n        var bannedUniverseHandler = (e) => {\r\n            if(e != null){\r\n                let value = e\r\n                const uniList = [];\r\n                for(const uni of value){\r\n                    if(!data.BANNED_UNIVERSES.includes(uni)){\r\n                        uniList.push(uni.value)\r\n                    }\r\n                }\r\n                if(uniList){\r\n                    setData({\r\n                        ...data,\r\n                        BANNED_UNIVERSES: uniList,\r\n                    })\r\n                }\r\n                \r\n            }\r\n        }\r\n            \r\n    }\r\n\r\n    if(!tiers.loading) {\r\n        var tierSelector = tiers.tier.map(tier => {\r\n            return {\r\n                value: tier.UNI_TIER, label: `${tier.UNI_TIER}`\r\n            }\r\n        })\r\n    \r\n        var tierHandler = (e) => {\r\n            if(e != null){\r\n                let value = e\r\n                const tierList = [];\r\n                for(const ti of value){\r\n                    if(!data.BANNED_TIERS.includes(ti)){\r\n                        tierList.push(ti.value)\r\n                    }\r\n                }\r\n                if(tierList){\r\n                    setData({\r\n                        ...data,\r\n                        BANNED_TIERS: tierList,\r\n                    })\r\n                }\r\n                \r\n            }\r\n        }\r\n            \r\n    }\r\n\r\n    if(!pets.loading) {\r\n        var petSelector = pets.pet.map(pet => {\r\n            return {\r\n                value: pet.PET, label: `${pet.PET}`\r\n            }\r\n        })\r\n    \r\n        var enemyPetHandler = (e) => {\r\n            let value = e[0]\r\n            pets.pet.map(pet => {\r\n                if (e.value === pet.PET) {\r\n                    setData({\r\n                        ...data,\r\n                        PET: pet.PET,\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n        var bannedPetHandler = (e) => {\r\n            if(e != null){\r\n                let value = e\r\n                const petList = [];\r\n                for(const p of value){\r\n                    if(!data.BANNED_PETS.includes(p)){\r\n                        petList.push(p.value)\r\n                    }\r\n                }\r\n                if(petList){\r\n                    setData({\r\n                        ...data,\r\n                        BANNED_PETS: petList,\r\n                    })\r\n                }\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    if(!titles.loading) {\r\n        var titleSelector = titles.title.map(title => {\r\n            return {\r\n                value: title.TITLE, label: `${title.TITLE}`\r\n            }\r\n        })\r\n    \r\n        var enemyTitleHandler = (e) => {\r\n            let value = e[0]\r\n            titles.title.map(title => {\r\n                if (e.value === title.TITLE) {\r\n                    setData({\r\n                        ...data,\r\n                        TITLE: title.TITLE,\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n        var bannedTitleHandler = (e) => {\r\n            if(e != null){\r\n                let value = e\r\n                const titleList = [];\r\n                for(const t of value){\r\n                    if(!data.BANNED_TITLES.includes(t)){\r\n                        titleList.push(t.value)\r\n                    }\r\n                }\r\n                if(titleList){\r\n                    setData({\r\n                        ...data,\r\n                        BANNED_TITLES: titleList,\r\n                    })\r\n                }\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    if(!arms.loading) {\r\n        var armSelector = arms.arm.map(arm => {\r\n            return {\r\n                value: arm.ARM, label: `${arm.ARM}`\r\n            }\r\n        })\r\n    \r\n        var enemyArmHandler = (e) => {\r\n            let value = e[0]\r\n            arms.arm.map(arm => {\r\n                if (e.value === arm.ARM) {\r\n                    setData({\r\n                        ...data,\r\n                        ARM: arm.ARM,\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n        var bannedArmHandler = (e) => {\r\n            if(e != null){\r\n                let value = e\r\n                const armList = [];\r\n                for(const a of value){\r\n                    if(!data.BANNED_ARMS.includes(a)){\r\n                        armList.push(a.value)\r\n                    }\r\n                }\r\n                if(armList){\r\n                    setData({\r\n                        ...data,\r\n                        BANNED_ARMS: armList,\r\n                    })\r\n                }\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    if(!cards.loading) {\r\n        var cardSelector = cards.card.map(card => {\r\n            return {\r\n                value: card.NAME, label: `${card.NAME}`\r\n            }\r\n        })\r\n\r\n        var enemyHandler = (e) => {\r\n            if(e != null){\r\n                let value = e\r\n                const enemyList = [];\r\n                for(const e of value){\r\n                    if(!data.ENEMIES.includes(e)){\r\n                        enemyList.push(e.value)\r\n                    }\r\n                }\r\n                if(enemyList){\r\n                    setData({\r\n                        ...data,\r\n                        ENEMIES: enemyList,\r\n                    })\r\n                }\r\n                \r\n            }\r\n        }\r\n\r\n        var bannedCardsHandler = (e) => {\r\n            if(e != null){\r\n                let value = e\r\n                const cardList = [];\r\n                for(const c of value){\r\n                    if(!data.BANNED_CARDS.includes(c)){\r\n                        cardList.push(c.value)\r\n                    }\r\n                }\r\n                if(cardList){\r\n                    setData({\r\n                        ...data,\r\n                        BANNED_CARDS: cardList,\r\n                    })\r\n                }\r\n                \r\n            }\r\n        }\r\n    }\r\n    \r\n    var submission_response = \"Success!\";\r\n    var submission_alert_dom = <Alert show={show} variant=\"success\"> {submission_response} </Alert>\r\n    const onSubmitHandler = async (e) => {\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            setShow(false)\r\n            setValidated(true);\r\n        } else {\r\n            setValidated(false)\r\n            e.preventDefault();\r\n\r\n            const res = await saveAbyss(data)\r\n\r\n            setData(abyssInitialState)\r\n            setTimeout(()=> {setShow(true)}, 1000)\r\n        }\r\n\r\n    }\r\n\r\n    const styleSheet = {\r\n        input: (base, state) => ({\r\n            ...base,\r\n            color: 'white'\r\n\r\n        })\r\n    };\r\n    \r\n    return auth.loading || universes.loading ? (\r\n        <Spinner />\r\n    ) : (\r\n            <div>\r\n                <div className=\"page-header\">\r\n                    <h3 className=\"page-title\">\r\n                        New Crown Unlimited Abyss\r\n                    </h3>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 grid-margin\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <Form noValidate validated={validated} onSubmit={onSubmitHandler}>\r\n                                    <Form.Row>\r\n\r\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Floor</Form.Label>\r\n                                            <Form.Control\r\n                                                value={FLOOR}\r\n                                                onChange={onChangeHandler}\r\n                                                name=\"FLOOR\"\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom01\">\r\n                                            <Form.Label>Abyss Title</Form.Label>\r\n                                            <Select\r\n                                                onChange={enemyTitleHandler}\r\n                                                options={titleSelector}\r\n                                                className=\"basic-multi-select\"\r\n                                                classNamePrefix=\"select\"\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom01\">\r\n                                            <Form.Label>Abyss Arm</Form.Label>\r\n                                            <Select\r\n                                                onChange={enemyArmHandler}\r\n                                                options={armSelector}\r\n                                                className=\"basic-multi-select\"\r\n                                                classNamePrefix=\"select\"\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom01\">\r\n                                            <Form.Label>Abyss Pet</Form.Label>\r\n                                            <Select\r\n                                                onChange={enemyPetHandler}\r\n                                                options={petSelector}\r\n                                                className=\"basic-multi-select\"\r\n                                                classNamePrefix=\"select\"\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"1\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Special Buff</Form.Label>\r\n                                            <Form.Control\r\n                                                value={SPECIAL_BUFF}\r\n                                                onChange={onChangeHandler}\r\n                                                name=\"SPECIAL_BUFF\"\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n\r\n                                    <Form.Row>\r\n                                    <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                            <Form.Label>Banned Universes</Form.Label>\r\n                                            <Select\r\n                                                onChange={bannedUniverseHandler}\r\n                                                isMulti\r\n                                                \r\n                                                options={universeSelector}\r\n                                                className=\"basic-multi-select\"\r\n                                                classNamePrefix=\"select\"\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                            <Form.Label>Banned Universe Tiers</Form.Label>\r\n                                            <Select\r\n                                                onChange={tierHandler}\r\n                                                isMulti\r\n                                                options={tierSelector}\r\n                                                className=\"basic-multi-select\"\r\n                                                classNamePrefix=\"select\"\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n\r\n                                    <Form.Row>\r\n                                    <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                            <Form.Label>Banned Titles</Form.Label>\r\n                                            <Select\r\n                                                onChange={bannedTitleHandler}\r\n                                                isMulti\r\n                                                \r\n                                                options={titleSelector}\r\n                                                className=\"basic-multi-select\"\r\n                                                classNamePrefix=\"select\"\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                            <Form.Label>Banned Arms</Form.Label>\r\n                                            <Select\r\n                                                onChange={bannedArmHandler}\r\n                                                isMulti\r\n                                                options={armSelector}\r\n                                                className=\"basic-multi-select\"\r\n                                                classNamePrefix=\"select\"\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n\r\n                                    <Form.Row>\r\n                                    <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                            <Form.Label>Banned Cards</Form.Label>\r\n                                            <Select\r\n                                                onChange={bannedCardsHandler}\r\n                                                isMulti\r\n                                                \r\n                                                options={cardSelector}\r\n                                                className=\"basic-multi-select\"\r\n                                                classNamePrefix=\"select\"\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                            <Form.Label>Banned Pets</Form.Label>\r\n                                            <Select\r\n                                                onChange={bannedPetHandler}\r\n                                                isMulti\r\n                                                options={petSelector}\r\n                                                className=\"basic-multi-select\"\r\n                                                classNamePrefix=\"select\"\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n                                        \r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"12\" controlId=\"validationCustom01\">\r\n                                            <Form.Label>Abyss Enemies</Form.Label>\r\n                                            <Select\r\n                                                onChange={enemyHandler}\r\n                                                isMulti\r\n                                                options={cardSelector}\r\n                                                className=\"basic-multi-select\"\r\n                                                classNamePrefix=\"select\"\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n\r\n                                    <Button type=\"submit\">Create Abyss</Button>\r\n                                    {/* <br />\r\n                                    <br />\r\n                                    <Link to=\"/updateabyss\"><Button variant=\"warning\">Update Abyss</Button></Link> \r\n                                    <br/>\r\n                                    <br /> */}\r\n                                    {submission_alert_dom}\r\n                                    \r\n                                </Form>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    titles: state.titles\r\n})\r\n\r\nexport default connect(mapStateToProps, {saveAbyss})(NewAbyss)\r\n","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Spinner from '../isLoading/spinner';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport Select from 'react-select';\r\nimport { Form, Col, Button, Alert } from 'react-bootstrap';\r\nimport { abyssInitialState } from '../STATE'\r\nimport { saveAbyss, updateAbyss } from '../../actions/abyss'\r\nimport { floor } from 'lodash';\r\n\r\nexport const UpdateAbyss = ({auth, history, saveAbyss, updateAbyss}) => {\r\n    const [universes, setUniverse] = useState({\r\n        universe: [],\r\n        loading: true\r\n    });\r\n\r\n    const [cards, setCard] = useState({\r\n        card: [],\r\n        loading: true\r\n    });\r\n\r\n    const [pets, setPet] = useState({\r\n        pet: [],\r\n        loading: true\r\n    });\r\n\r\n    const [titles, setTitle] = useState({\r\n        title: [],\r\n        loading: true\r\n    });\r\n\r\n    const [arms, setArm] = useState({\r\n        arm: [],\r\n        loading: true\r\n    });\r\n\r\n    const [tiers, setTier] = useState({\r\n        tier: [\r\n            {UNI_TIER: 1},\r\n            {UNI_TIER: 2},\r\n            {UNI_TIER: 3},\r\n            {UNI_TIER: 4},\r\n            {UNI_TIER: 5}\r\n        ],\r\n        loading: false\r\n    });\r\n\r\n    const [abyssData, setAbyssUpdate] = useState({\r\n        loading: true\r\n    });\r\n\r\n    \r\n\r\n    const [data, setData] = useState(abyssInitialState);\r\n    const [validated, setValidated] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const {\r\n        FLOOR,\r\n        ENEMIES,\r\n        BANNED_CARDS,\r\n        BANNED_TITLES,\r\n        BANNED_ARMS,\r\n        BANNED_UNIVERSES,\r\n        BANNED_TIERS,\r\n        BANNED_PETS,\r\n        TITLE,\r\n        ARM,\r\n        PET,\r\n        SPECIAL_BUFF\r\n    } = data;\r\n    \r\n    useEffect(() => {\r\n        if(!auth.loading){\r\n            axios.get('/crown/universes')\r\n                .then((res) => {\r\n                    setUniverse({universe: res.data, loading: false})\r\n                })\r\n\r\n            axios.get('/crown/cards')\r\n                .then((res) => {\r\n                    setCard({card: res.data, loading: false})\r\n                })\r\n\r\n            axios.get('/crown/pets')\r\n                .then((res) => {\r\n                    setPet({pet: res.data, loading: false})\r\n                })\r\n\r\n            axios.get('/crown/titles')\r\n                .then((res) => {\r\n                    setTitle({title: res.data, loading: false})\r\n                })\r\n            \r\n            axios.get('/crown/arms')\r\n                .then((res) => {\r\n                    setArm({arm: res.data, loading: false})\r\n                })\r\n\r\n            axios.get('/crown/abyss')\r\n                .then((res) => {\r\n                    setAbyssUpdate({data: res.data, loading: false})\r\n                })\r\n        }\r\n      }, [auth])\r\n\r\n    const onChangeHandler = (e) => {\r\n        setShow(false)\r\n        setData({\r\n            ...data,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n    if(!universes.loading) {\r\n        var universeSelector = universes.universe.map(universe => {\r\n            return {\r\n                value: universe.TITLE, label: `${universe.TITLE}`\r\n            }\r\n        })\r\n    \r\n        var bannedUniverseHandler = (e) => {\r\n            if(e != null){\r\n                let value = e\r\n                const uniList = [];\r\n                for(const uni of value){\r\n                    if(!data.BANNED_UNIVERSES.includes(uni)){\r\n                        uniList.push(uni.value)\r\n                    }\r\n                }\r\n                if(uniList){\r\n                    setData({\r\n                        ...data,\r\n                        BANNED_UNIVERSES: uniList,\r\n                    })\r\n                }\r\n                \r\n            }\r\n        }\r\n            \r\n    }\r\n\r\n    if(!tiers.loading) {\r\n        var tierSelector = tiers.tier.map(tier => {\r\n            return {\r\n                value: tier.UNI_TIER, label: `${tier.UNI_TIER}`\r\n            }\r\n        })\r\n    \r\n        var tierHandler = (e) => {\r\n            if(e != null){\r\n                let value = e\r\n                const tierList = [];\r\n                for(const ti of value){\r\n                    if(!data.BANNED_TIERS.includes(ti)){\r\n                        tierList.push(ti.value)\r\n                    }\r\n                }\r\n                if(tierList){\r\n                    setData({\r\n                        ...data,\r\n                        BANNED_TIERS: tierList,\r\n                    })\r\n                }\r\n                \r\n            }\r\n        }\r\n            \r\n    }\r\n\r\n    if(!pets.loading) {\r\n        var petSelector = pets.pet.map(pet => {\r\n            return {\r\n                value: pet.PET, label: `${pet.PET}`\r\n            }\r\n        })\r\n    \r\n        var enemyPetHandler = (e) => {\r\n            let value = e[0]\r\n            pets.pet.map(pet => {\r\n                if (e.value === pet.PET) {\r\n                    setData({\r\n                        ...data,\r\n                        PET: pet.PET,\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n        var bannedPetHandler = (e) => {\r\n            if(e != null){\r\n                let value = e\r\n                const petList = [];\r\n                for(const p of value){\r\n                    if(!data.BANNED_PETS.includes(p)){\r\n                        petList.push(p.value)\r\n                    }\r\n                }\r\n                if(petList){\r\n                    setData({\r\n                        ...data,\r\n                        BANNED_PETS: petList,\r\n                    })\r\n                }\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    if(!titles.loading) {\r\n        var titleSelector = titles.title.map(title => {\r\n            return {\r\n                value: title.TITLE, label: `${title.TITLE}`\r\n            }\r\n        })\r\n    \r\n        var enemyTitleHandler = (e) => {\r\n            let value = e[0]\r\n            titles.title.map(title => {\r\n                if (e.value === title.TITLE) {\r\n                    setData({\r\n                        ...data,\r\n                        TITLE: title.TITLE,\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n        var bannedTitleHandler = (e) => {\r\n            if(e != null){\r\n                let value = e\r\n                const titleList = [];\r\n                for(const t of value){\r\n                    if(!data.BANNED_TITLES.includes(t)){\r\n                        titleList.push(t.value)\r\n                    }\r\n                }\r\n                if(titleList){\r\n                    setData({\r\n                        ...data,\r\n                        BANNED_TITLES: titleList,\r\n                    })\r\n                }\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    if(!arms.loading) {\r\n        var armSelector = arms.arm.map(arm => {\r\n            return {\r\n                value: arm.ARM, label: `${arm.ARM}`\r\n            }\r\n        })\r\n    \r\n        var enemyArmHandler = (e) => {\r\n            let value = e[0]\r\n            arms.arm.map(arm => {\r\n                if (e.value === arm.ARM) {\r\n                    setData({\r\n                        ...data,\r\n                        ARM: arm.ARM,\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n        var bannedArmHandler = (e) => {\r\n            if(e != null){\r\n                let value = e\r\n                const armList = [];\r\n                for(const a of value){\r\n                    if(!data.BANNED_ARMS.includes(a)){\r\n                        armList.push(a.value)\r\n                    }\r\n                }\r\n                if(armList){\r\n                    setData({\r\n                        ...data,\r\n                        BANNED_ARMS: armList,\r\n                    })\r\n                }\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    if(!cards.loading) {\r\n        var cardSelector = cards.card.map(card => {\r\n            return {\r\n                value: card.NAME, label: `${card.NAME}`\r\n            }\r\n        })\r\n\r\n        var enemyHandler = (e) => {\r\n            if(e != null){\r\n                let value = e\r\n                const enemyList = [];\r\n                for(const e of value){\r\n                    if(!data.ENEMIES.includes(e)){\r\n                        enemyList.push(e.value)\r\n                    }\r\n                }\r\n                if(enemyList){\r\n                    setData({\r\n                        ...data,\r\n                        ENEMIES: enemyList,\r\n                    })\r\n                }\r\n                \r\n            }\r\n        }\r\n\r\n        var bannedCardsHandler = (e) => {\r\n            if(e != null){\r\n                let value = e\r\n                const cardList = [];\r\n                for(const c of value){\r\n                    if(!data.BANNED_CARDS.includes(c)){\r\n                        cardList.push(c.value)\r\n                    }\r\n                }\r\n                if(cardList){\r\n                    setData({\r\n                        ...data,\r\n                        BANNED_CARDS: cardList,\r\n                    })\r\n                }\r\n                \r\n            }\r\n        }\r\n    }\r\n\r\n    if(!abyssData.loading){\r\n        var abyssFloorSelector = abyssData.data.map(abyss => {\r\n            return {\r\n                value: abyss.FLOOR, label: `${abyss.FLOOR}`\r\n            }\r\n        })\r\n\r\n        var floorHandler = (e) => {\r\n            let value = e[0]\r\n            abyssData.data.map(floor => {\r\n                if(e.value === floor.FLOOR) {\r\n                    setData({\r\n                        ...data,\r\n                        FLOOR: floor.FLOOR,\r\n                        ENEMIES: floor.ENEMIES,\r\n                        BANNED_CARDS: floor.BANNED_CARDS,\r\n                        BANNED_TITLES: floor.BANNED_TITLES,\r\n                        BANNED_ARMS: floor.BANNED_ARMS,\r\n                        BANNED_UNIVERSES: floor.BANNED_UNIVERSES,\r\n                        BANNED_TIERS: floor.BANNED_TIERS,\r\n                        BANNED_PETS: floor.BANNED_PETS,\r\n                        TITLE: floor.TITLE,\r\n                        ARM: floor.ARM,\r\n                        PET: floor.PET,\r\n                        SPECIAL_BUFF: floor.SPECIAL_BUFF\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n    \r\n    var submission_response = \"Success!\";\r\n    var submission_alert_dom = <Alert show={show} variant=\"success\"> {submission_response} </Alert>\r\n    const onSubmitHandler = async (e) => {\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            setShow(false)\r\n            setValidated(true);\r\n        } else {\r\n            setValidated(false)\r\n            e.preventDefault();\r\n\r\n            const res = await updateAbyss(data)\r\n\r\n            setData(abyssInitialState)\r\n            setTimeout(()=> {setShow(true)}, 1000)\r\n        }\r\n\r\n    }\r\n\r\n    const styleSheet = {\r\n        input: (base, state) => ({\r\n            ...base,\r\n            color: 'white'\r\n\r\n        })\r\n    };\r\n    \r\n    return auth.loading || universes.loading ? (\r\n        <Spinner />\r\n    ) : (\r\n            <div>\r\n                <div className=\"page-header\">\r\n                    <h3 className=\"page-title\">\r\n                        Update Abyss\r\n                    </h3>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 grid-margin\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <Form noValidate validated={validated} onSubmit={onSubmitHandler}>\r\n                                    <Form.Row>\r\n\r\n                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom01\">\r\n                                            <Form.Label>Abyss Floor</Form.Label>\r\n                                            <Select\r\n                                                onChange={floorHandler}\r\n                                                options={abyssFloorSelector}\r\n                                                className=\"basic-multi-select\"\r\n                                                classNamePrefix=\"select\"\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom01\">\r\n                                            <Form.Label>Abyss Title</Form.Label>\r\n                                            <Select\r\n                                                \r\n                                                onChange={enemyTitleHandler}\r\n                                                options={titleSelector}\r\n                                                className=\"basic-multi-select\"\r\n                                                classNamePrefix=\"select\"\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom01\">\r\n                                            <Form.Label>Abyss Arm</Form.Label>\r\n                                            <Select\r\n                                                onChange={enemyArmHandler}\r\n                                                options={armSelector}\r\n                                                className=\"basic-multi-select\"\r\n                                                classNamePrefix=\"select\"\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom01\">\r\n                                            <Form.Label>Abyss Pet</Form.Label>\r\n                                            <Select\r\n                                                onChange={enemyPetHandler}\r\n                                                options={petSelector}\r\n                                                className=\"basic-multi-select\"\r\n                                                classNamePrefix=\"select\"\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"1\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Special Buff</Form.Label>\r\n                                            <Form.Control\r\n                                                value={SPECIAL_BUFF}\r\n                                                onChange={onChangeHandler}\r\n                                                name=\"SPECIAL_BUFF\"\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n\r\n                                    <Form.Row>\r\n                                    <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                            <Form.Label>Banned Universes</Form.Label>\r\n                                            <Select\r\n                                                onChange={bannedUniverseHandler}\r\n                                                isMulti\r\n                                                \r\n                                                options={universeSelector}\r\n                                                className=\"basic-multi-select\"\r\n                                                classNamePrefix=\"select\"\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                            <Form.Label>Banned Universe Tiers</Form.Label>\r\n                                            <Select\r\n                                                onChange={tierHandler}\r\n                                                isMulti\r\n                                                options={tierSelector}\r\n                                                className=\"basic-multi-select\"\r\n                                                classNamePrefix=\"select\"\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n\r\n                                    <Form.Row>\r\n                                    <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                            <Form.Label>Banned Titles</Form.Label>\r\n                                            <Select\r\n                                                onChange={bannedTitleHandler}\r\n                                                isMulti\r\n                                                \r\n                                                options={titleSelector}\r\n                                                className=\"basic-multi-select\"\r\n                                                classNamePrefix=\"select\"\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                            <Form.Label>Banned Arms</Form.Label>\r\n                                            <Select\r\n                                                onChange={bannedArmHandler}\r\n                                                isMulti\r\n                                                options={armSelector}\r\n                                                className=\"basic-multi-select\"\r\n                                                classNamePrefix=\"select\"\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n\r\n                                    <Form.Row>\r\n                                    <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                            <Form.Label>Banned Cards</Form.Label>\r\n                                            <Select\r\n                                                onChange={bannedCardsHandler}\r\n                                                isMulti\r\n                                                \r\n                                                options={cardSelector}\r\n                                                className=\"basic-multi-select\"\r\n                                                classNamePrefix=\"select\"\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                            <Form.Label>Banned Pets</Form.Label>\r\n                                            <Select\r\n                                                onChange={bannedPetHandler}\r\n                                                isMulti\r\n                                                options={petSelector}\r\n                                                className=\"basic-multi-select\"\r\n                                                classNamePrefix=\"select\"\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n                                        \r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"12\" controlId=\"validationCustom01\">\r\n                                            <Form.Label>Abyss Enemies</Form.Label>\r\n                                            <Select\r\n                                                onChange={enemyHandler}\r\n                                                isMulti\r\n                                                options={cardSelector}\r\n                                                className=\"basic-multi-select\"\r\n                                                classNamePrefix=\"select\"\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n\r\n                                    <Button type=\"submit\">Update Abyss</Button>\r\n                                    <br />\r\n                                    <br />\r\n                                    <Link to=\"/newabyss\"><Button variant=\"warning\">Create Abyss</Button></Link> \r\n                                    <br/>\r\n                                    <br />\r\n                                    {submission_alert_dom}\r\n                                    \r\n                                </Form>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    titles: state.titles\r\n})\r\n\r\nexport default connect(mapStateToProps, {saveAbyss, updateAbyss})(UpdateAbyss)\r\n","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Spinner from '../isLoading/spinner';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport Select from 'react-select';\r\nimport { Form, Col, Button, Alert, Modal } from 'react-bootstrap';\r\nimport { petInitialState, enhancements } from '../STATE';\r\nimport { updatePet, deletePet } from '../../actions/pets';\r\nimport _ from 'lodash';\r\n\r\nexport const UpdatePet = ({auth, pets, history, updatePet, deletePet}) => {\r\n    const [universes, setUniverse] = useState({\r\n        universe: [],\r\n        loading: true\r\n    });\r\n    const [petData, setPetData] = useState({\r\n        loading: true\r\n    });\r\n    const [modalShow, setModalShow] = useState(false);\r\n    const handleClose = () => setModalShow(false);\r\n    const handleShow = () => setModalShow(true);\r\n    const [data, setData] = useState(petInitialState);\r\n    const [validated, setValidated] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n    const [ability, setAbility] = useState({\r\n        ABILITY: \"\",\r\n        POWER: 20,\r\n        ABILITY_TYPE: \"\"\r\n    });\r\n    // Build Ability\r\n    var pass_ability = ability.ABILITY.toString()\r\n    var pass_power = ability.POWER\r\n    var pass_type = ability.ABILITY_TYPE\r\n    var pass_key = pass_ability\r\n    var ability_Object = {}\r\n    ability_Object[pass_key] = pass_power\r\n    ability_Object[\"TYPE\"] = pass_type\r\n\r\n    const {\r\n        PET,\r\n        PATH,\r\n        UNIVERSE,\r\n        LVL,\r\n        ABILITIES,\r\n        COLLECTION,\r\n        AVAILABLE,\r\n        EXCLUSIVE} = data;\r\n\r\n    \r\n    useEffect(() => {\r\n        if(!auth.loading){\r\n            axios.get('/crown/universes')\r\n                .then((res) => {\r\n                    setUniverse({universe: res.data, loading: false})\r\n                })\r\n\r\n            axios.get('/crown/pets')\r\n                .then((res) => {\r\n                    setPetData({data: res.data, loading: false})\r\n                })\r\n        }\r\n      }, [auth])\r\n\r\n    const onChangeHandler = (e) => {\r\n        setShow(false)\r\n        if (e.target.type === \"number\"){\r\n            setData({\r\n                ...data,\r\n                [e.target.name]: e.target.valueAsNumber\r\n            })\r\n        } else if ((e.target.checked === true || e.target.checked === false) && e.target.name == \"formHorizontalRadios\") {\r\n            const radio = e.currentTarget.id === 'false' ? false : true\r\n            setData({\r\n                ...data,\r\n                HAS_COLLECTION: radio\r\n            })\r\n        } else {\r\n            setData({\r\n                ...data,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    const availableHandler = (e) => {\r\n        setData({\r\n            ...data,\r\n            AVAILABLE: Boolean(e.target.value)\r\n        })\r\n    }\r\n\r\n    const exclusiveHandler = (e) => {\r\n        setData({\r\n            ...data,\r\n            EXCLUSIVE: Boolean(e.target.value)\r\n        })\r\n    }\r\n\r\n    const abilityHandler = (e) => {\r\n        if (e.target.type === \"number\"){\r\n            setAbility({\r\n                ...ability,\r\n                [e.target.name]: e.target.valueAsNumber\r\n            })\r\n        } else {\r\n            setAbility({\r\n                ...ability,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n\r\n        // // Build Ability\r\n        // var pass_ability = ability.ABILITY.toString()\r\n        // var pass_power = ability.POWER\r\n        // var pass_type = ability.ABILITY_TYPE\r\n        // var pass_key = pass_ability\r\n        // var ability_Object = {}\r\n        // ability_Object[pass_key] = pass_power\r\n        // ability_Object[\"TYPE\"] = pass_type\r\n    }\r\n\r\n\r\n    if(!universes.loading) {\r\n        var universeSelector = universes.universe.map(universe => {\r\n            return {\r\n                value: universe.TITLE, label: `${universe.TITLE}`\r\n            }\r\n        })\r\n    \r\n        var universeHandler = (e) => {\r\n            let value = e[0]\r\n            universes.universe.map(universe => {\r\n                if (e.value === universe.TITLE) {\r\n                    setData({\r\n                        ...data,\r\n                        UNIVERSE: universe.TITLE,\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    var enhancementSelector = enhancements.map(enhancement => {\r\n        return {\r\n            value: enhancement, label: `${enhancement}`\r\n        }\r\n    })\r\n\r\n    var abilityEnhancementHandler = (e) => {\r\n        let value = e[0]\r\n        enhancements.map(enhancement => {\r\n            if (e.value === enhancement) {\r\n                setAbility({\r\n                    ...ability,\r\n                    ABILITY_TYPE: enhancement,\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n    if(!petData.loading) {\r\n        var petSelector = petData.data.map(pet => {\r\n            return {\r\n                value: pet.PET, label: `${pet.PET}`\r\n            }\r\n        })\r\n    \r\n        var petHandler = (e) => {\r\n            let value = e[0]\r\n            petData.data.map(pet => {\r\n                if (e.value === pet.PET) {\r\n                    // Ability Breakdown\r\n                    var ability_ability = Object.keys(pet.ABILITIES[0])[0]\r\n                    var ability_power = Object.values(pet.ABILITIES[0])[0]\r\n                    var ability_enhancement = Object.values(pet.ABILITIES[0])[1]\r\n                    setAbility({\r\n                        ...ability,\r\n                        ABILITY: ability_ability,\r\n                        POWER: ability_power,\r\n                        ABILITY_TYPE: ability_enhancement\r\n                    })\r\n\r\n                    // Build Ability\r\n                    var pass_ability = ability.ABILITY.toString()\r\n                    var pass_power = ability.POWER\r\n                    var pass_type = ability.ABILITY_TYPE\r\n                    var pass_key = pass_ability\r\n                    var ability_Object = {}\r\n                    ability_Object[pass_key] = pass_power\r\n                    ability_Object[\"TYPE\"] = pass_type\r\n                   \r\n                    setData({\r\n                        ...data,\r\n                        PET: pet.PET,\r\n                        PATH: pet.PATH,\r\n                        UNIVERSE: pet.UNIVERSE,\r\n                        LVL: pet.LVL,\r\n                        ABILITIES: [ability_Object],\r\n                        COLLECTION: pet.COLLECTION,\r\n                        AVAILABLE: pet.AVAILABLE,\r\n                        EXCLUSIVE: pet.EXCLUSIVE\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n    \r\n    var submission_response = \"Success!\";\r\n    var submission_alert_dom = <Alert show={show} variant=\"success\"> {submission_response} </Alert>\r\n    const onSubmitHandler = async (e) => {\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            setShow(false)\r\n            setValidated(true);\r\n        } else {\r\n            \r\n            setValidated(false)\r\n            e.preventDefault();\r\n\r\n            \r\n            var pet_update_data = data;\r\n            pet_update_data.ABILITIES = [ability_Object]\r\n            const res = await updatePet(pet_update_data)\r\n            \r\n            setData(petInitialState)\r\n            setTimeout(()=> {setShow(true)}, 1000)\r\n        }\r\n\r\n    }\r\n\r\n    const onDeleteHandler = async (e) => {\r\n        const form = e.currentTarget;\r\n        e.preventDefault();\r\n        const res = await deletePet(data);\r\n        setModalShow(false);\r\n    }\r\n\r\n    const styleSheet = {\r\n        input: (base, state) => ({\r\n            ...base,\r\n            color: 'white'\r\n\r\n        })\r\n    };\r\n\r\n    return auth.loading || universes.loading ? (\r\n        <Spinner />\r\n    ) : (\r\n            <div>\r\n                <div className=\"page-header\">\r\n                    <h3 className=\"page-title\">\r\n                        Update Pets\r\n                    </h3>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 grid-margin\">\r\n                        <div className=\"pet\">\r\n                            <div className=\"pet-body\">\r\n                                <Form noValidate validated={validated} onSubmit={onSubmitHandler}>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                            <Form.Label><h3>Select Pet</h3></Form.Label>\r\n                                            <Select\r\n                                                onChange={petHandler}\r\n                                                options={\r\n                                                    petSelector\r\n                                                }\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                        \r\n                                    </Form.Row>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Path</Form.Label>\r\n                                            <Form.Control\r\n                                                value={PATH}\r\n                                                onChange={onChangeHandler}\r\n                                                name=\"PATH\"\r\n                                                required\r\n                                                type=\"text\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom13\">\r\n                                            <Form.Label>Ability</Form.Label>\r\n                                            <Form.Control\r\n                                                value={ability.ABILITY}\r\n                                                name=\"ABILITY\"\r\n                                                onChange={abilityHandler}\r\n                                                required\r\n                                                type=\"text\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom14\">\r\n                                            <Form.Label>Ability Power</Form.Label>\r\n                                            <Form.Control\r\n                                                value={ability.POWER}\r\n                                                name=\"POWER\"\r\n                                                onChange={abilityHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n\r\n                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom15\">\r\n                                        <Form.Label>Ability Type - {ability.ABILITY_TYPE}</Form.Label>\r\n                                            <Select\r\n                                                onChange={abilityEnhancementHandler}\r\n                                                options={\r\n                                                    enhancementSelector\r\n                                                }\r\n                                                required\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom27\">\r\n                                            <Form.Label> Available </Form.Label>\r\n                                            \r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                id=\"inlineFormCustomSelectPref\"\r\n                                                onChange={availableHandler}\r\n                                            >\r\n                                                <option value={true} name=\"true\">Yes</option>\r\n                                                <option value={\"\"} name=\"false\">No</option>\r\n                                            </Form.Control>\r\n                                            \r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} md=\"2\" controlId=\"validationCustom28\">\r\n                                            <Form.Label> Exclusive </Form.Label>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                id=\"inlineFormCustomSelectPref\"\r\n                                                onChange={exclusiveHandler}\r\n                                            >\r\n                                                <option value={true} name=\"true\">Yes</option>\r\n                                                <option value={\"\"} name=\"false\">No</option>\r\n                                            </Form.Control>\r\n                                            </Form.Group>\r\n                                    </Form.Row>\r\n                                    <Button type=\"submit\">Update Pet</Button>\r\n                                    <br />\r\n                                    <br />\r\n                                    <Link to=\"/newpet\"><Button as={Col} md=\"2\" variant=\"outline-warning\">New Pet</Button></Link> \r\n                                    <br/>\r\n                                    <br />\r\n                                    {submission_alert_dom}\r\n                                    \r\n                                    <Button onClick={handleShow} as={Col} md=\"2\" variant=\"danger\">Delete</Button>\r\n\r\n                                    <Modal show={modalShow} onHide={handleClose}>\r\n                                        <Modal.Header closeButton>\r\n                                        <Modal.Title>Are you sure you want delete this pet?</Modal.Title>\r\n                                        </Modal.Header>\r\n                                        <Modal.Footer>\r\n                                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                                            Close\r\n                                        </Button>\r\n                                        <Button variant=\"danger\" onClick={onDeleteHandler}>\r\n                                            Delete Pet\r\n                                        </Button>\r\n                                        </Modal.Footer>\r\n                                    </Modal>\r\n\r\n                                </Form>\r\n\r\n                            </div>\r\n\r\n                            {/* <Alerts /> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    pets: state.pets\r\n})\r\n\r\nexport default connect(mapStateToProps, {updatePet, deletePet})(UpdatePet)\r\n","import axios from 'axios';\r\nimport {\r\n    ADD_PET,\r\n    GET_PETS,\r\n    DELETE_PET,\r\n    UPDATE_PET\r\n} from '../actiontypes/index';\r\nimport { loadUser } from \"./auth/auth\"; \r\n\r\n\r\nexport const loadPets = () => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get(\"/crown/pets\")\r\n        dispatch({\r\n            type: GET_PETS,\r\n            payload: res\r\n        })\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const loadSinglePet = (pet) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get(`/crown/pets/${pet}`)\r\n        dispatch({\r\n            type: GET_PETS,\r\n            payload: res\r\n        })\r\n        dispatch(loadUser());\r\n    } catch (err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const savePet = (pet) => async (dispatch) => {\r\n    try {\r\n        console.log(pet)\r\n        const res = await axios.post('/crown/pets/new', pet)\r\n        dispatch({\r\n            type: ADD_PET,\r\n            payload: res\r\n        })\r\n        dispatch(loadUser());\r\n    } catch(err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const updatePet = (pet) => async (dispatch) => {\r\n    try {\r\n        console.log(pet)\r\n        const res = await axios.post('/crown/pets/update', pet)\r\n        dispatch({\r\n            type: ADD_PET,\r\n            payload: res\r\n        })\r\n        dispatch(loadUser());\r\n    } catch(err) {\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport const deletePet = (pet) => async (dispatch) => {\r\n    \r\n    try {\r\n        const res = await axios.delete('/crown/pets/delete', {data: pet})\r\n        dispatch({\r\n            type: DELETE_PET,\r\n            payload: res\r\n        })\r\n        dispatch(loadUser());\r\n    } catch(err) {\r\n        console.error(err)\r\n    }\r\n}","import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport Spinner from '../isLoading/spinner';\r\nimport { Typeahead } from 'react-bootstrap-typeahead';\r\nimport Select from 'react-select';\r\nimport { Form, Col, Button, Alert } from 'react-bootstrap';\r\nimport { petInitialState, enhancements } from '../STATE'\r\nimport { savePet } from '../../actions/pets'\r\n\r\nexport const NewPet = ({auth, pets, history, savePet}) => {\r\n    const [universes, setUniverse] = useState({\r\n        universe: [],\r\n        loading: true\r\n    });\r\n    const [data, setData] = useState(petInitialState);\r\n    const [validated, setValidated] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n    const [ability, setAbility] = useState({\r\n        ABILITY: \"\",\r\n        POWER: 20,\r\n        ABILITY_TYPE: \"\"\r\n    });\r\n    // Build Ability\r\n    var ability_ability = ability.ABILITY.toString()\r\n    var ability_power = ability.POWER\r\n    var ability_type = ability.ABILITY_TYPE\r\n    var ability_key = ability_ability\r\n    var ability_Object = {}\r\n    ability_Object[ability_key] = ability_power\r\n    ability_Object[\"TYPE\"] = ability_type\r\n\r\n\r\n    const {\r\n        PET,\r\n        PATH,\r\n        UNIVERSE,\r\n        LVL,\r\n        ABILITIES,\r\n        COLLECTION,\r\n        AVAILABLE,\r\n        EXCLUSIVE} = data;\r\n\r\n    \r\n    useEffect(() => {\r\n        // if (!auth.isAuthenticated) {\r\n        //   history.push('/login')\r\n        // }\r\n\r\n        if(!auth.loading){\r\n            axios.get('/crown/universes')\r\n                .then((res) => {\r\n                    setUniverse({universe: res.data, loading: false})\r\n                })\r\n        }\r\n      }, [auth])\r\n\r\n    const onChangeHandler = (e) => {\r\n        setShow(false)\r\n        if (e.target.type === \"number\"){\r\n            setData({\r\n                ...data,\r\n                [e.target.name]: e.target.valueAsNumber\r\n            })\r\n        } else if ((e.target.checked === true || e.target.checked === false) && e.target.name == \"formHorizontalRadios\") {\r\n            const radio = e.currentTarget.id === 'false' ? false : true\r\n            setData({\r\n                ...data,\r\n                HAS_COLLECTION: radio\r\n            })\r\n        } else {\r\n            setData({\r\n                ...data,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    const availableHandler = (e) => {\r\n        setData({\r\n            ...data,\r\n            AVAILABLE: Boolean(e.target.value)\r\n        })\r\n    }\r\n\r\n    const exclusiveHandler = (e) => {\r\n        setData({\r\n            ...data,\r\n            EXCLUSIVE: Boolean(e.target.value)\r\n        })\r\n    }\r\n\r\n    const abilityHandler = (e) => {\r\n        if (e.target.type === \"number\"){\r\n            setAbility({\r\n                ...ability,\r\n                [e.target.name]: e.target.valueAsNumber\r\n            })\r\n        } else {\r\n            setAbility({\r\n                ...ability,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    if(!universes.loading) {\r\n        var universeSelector = universes.universe.map(universe => {\r\n            return {\r\n                value: universe.TITLE, label: `${universe.TITLE}`\r\n            }\r\n        })\r\n    \r\n        var universeHandler = (e) => {\r\n            let value = e[0]\r\n            universes.universe.map(universe => {\r\n                if (e.value === universe.TITLE) {\r\n                    setData({\r\n                        ...data,\r\n                        UNIVERSE: universe.TITLE,\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    var enhancementSelector = enhancements.map(enhancement => {\r\n        return {\r\n            value: enhancement, label: `${enhancement}`\r\n        }\r\n    })\r\n\r\n    var abilityEnhancementHandler = (e) => {\r\n        let value = e[0]\r\n        enhancements.map(enhancement => {\r\n            if (e.value === enhancement) {\r\n                setAbility({\r\n                    ...ability,\r\n                    ABILITY_TYPE: enhancement,\r\n                })\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    \r\n    var submission_response = \"Success!\";\r\n    var submission_alert_dom = <Alert show={show} variant=\"success\"> {submission_response} </Alert>\r\n    const onSubmitHandler = async (e) => {\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            setShow(false)\r\n            setValidated(true);\r\n        } else {\r\n            setValidated(false)\r\n            e.preventDefault();\r\n\r\n            var pet_update_data = data;\r\n            pet_update_data.ABILITIES = [ability_Object]\r\n\r\n            const res = await savePet(data)\r\n\r\n            setData(petInitialState)\r\n            setTimeout(()=> {setShow(true)}, 1000)\r\n        }\r\n\r\n    }\r\n\r\n    const styleSheet = {\r\n        input: (base, state) => ({\r\n            ...base,\r\n            color: 'white'\r\n\r\n        })\r\n    };\r\n    return auth.loading || universes.loading ? (\r\n        <Spinner />\r\n    ) : (\r\n            <div>\r\n                <div className=\"page-header\">\r\n                    <h3 className=\"page-title\">\r\n                        New Crown Unlimited Pet\r\n                    </h3>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 grid-margin\">\r\n                        <div className=\"pet\">\r\n                            <div className=\"pet-body\">\r\n                                <Form noValidate validated={validated} onSubmit={onSubmitHandler}>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom01\">\r\n                                            <Form.Label><h3>Select Universe</h3></Form.Label>\r\n                                            <Select\r\n                                                onChange={universeHandler}\r\n                                                options={\r\n                                                    universeSelector\r\n                                                }\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"4\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Path</Form.Label>\r\n                                            <Form.Control\r\n                                                value={PATH}\r\n                                                onChange={onChangeHandler}\r\n                                                name=\"PATH\"\r\n                                                required\r\n                                                type=\"text\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"6\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Name</Form.Label>\r\n                                            <Form.Control\r\n                                                value={PET}\r\n                                                name=\"PET\"\r\n                                                onChange={onChangeHandler}\r\n                                                required\r\n                                                type=\"text\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                    </Form.Row>\r\n\r\n\r\n                                    <Form.Row>\r\n                                        <Form.Group as={Col} md=\"11\" controlId=\"validationCustom02\">\r\n                                                <Form.Label>Ability</Form.Label>\r\n                                                <Form.Control\r\n                                                    value={ability.ABILITY}\r\n                                                    name=\"ABILITY\"\r\n                                                    onChange={abilityHandler}\r\n                                                    required\r\n                                                    type=\"text\"\r\n\r\n                                                />\r\n                                                <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                                \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom02\">\r\n                                            <Form.Label>Ability Power</Form.Label>\r\n                                            <Form.Control\r\n                                                value={ability.POWER}\r\n                                                name=\"POWER\"\r\n                                                onChange={abilityHandler}\r\n                                                required\r\n                                                type=\"number\"\r\n\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"3\" controlId=\"validationCustom02\">\r\n                                        <Form.Label>Type</Form.Label>\r\n                                            <Select\r\n                                                onChange={abilityEnhancementHandler}\r\n                                                options={\r\n                                                    enhancementSelector\r\n                                                }\r\n                                                required\r\n                                                styles={styleSheet}\r\n                                            />\r\n                                            <Form.Control.Feedback>Looks good!</Form.Control.Feedback>\r\n                                            \r\n                                        </Form.Group>\r\n                                        <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\r\n                                            <Form.Label> Available </Form.Label>\r\n                                            \r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                id=\"inlineFormCustomSelectPref\"\r\n                                                onChange={availableHandler}\r\n                                            >\r\n                                                <option value={true} name=\"true\">Yes</option>\r\n                                                <option value={\"\"} name=\"false\">No</option>\r\n                                            </Form.Control>\r\n                                            \r\n                                            </Form.Group>\r\n                                            <Form.Group as={Col} md=\"2\" controlId=\"validationCustom02\">\r\n                                            <Form.Label> Exclusive </Form.Label>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                id=\"inlineFormCustomSelectPref\"\r\n                                                onChange={exclusiveHandler}\r\n                                            >\r\n                                                <option value={true} name=\"true\">Yes</option>\r\n                                                <option value={\"\"} name=\"false\">No</option>\r\n                                            </Form.Control>\r\n                                            </Form.Group>\r\n                                    </Form.Row>\r\n                                    <Button type=\"submit\">Create Pet</Button>\r\n                                    <br />\r\n                                    <br />\r\n                                    <Link to=\"/updatepets\"><Button variant=\"warning\">Update Pets</Button></Link> \r\n                                    <br/>\r\n                                    <br />\r\n                                    {submission_alert_dom}\r\n                                    \r\n                                    \r\n\r\n                                </Form>\r\n\r\n                            </div>\r\n\r\n                            {/* <Alerts /> */}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth,\r\n    pets: state.pets\r\n})\r\n\r\nexport default connect(mapStateToProps, {savePet})(NewPet)\r\n","import store from './store';\r\nimport React, { Fragment, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { loadUser } from \"./actions/auth/auth\"; \r\nimport { Provider } from 'react-redux';\r\nimport Login from './components/auth/login';\r\nimport Landing from './components/landing/landing';\r\nimport Navbar from './components/navigation/navbar';\r\nimport Sidebar from './components/navigation/sidebar';\r\nimport NewCard from './components/cards/newcard';\r\nimport UpdateCard from './components/cards/updatecard';\r\nimport UpdateArm from './components/arms/updatearm';\r\nimport NewArm from './components/arms/newarm';\r\nimport NewUniverse from './components/universe/newuniverse';\r\nimport UpdateUniverse from './components/universe/updateuniverse';\r\nimport UpdateTitle from './components/titles/updatetitle';\r\nimport NewTitle from './components/titles/newtitle';\r\nimport NewAbyss from './components/abyss/newabyss';\r\nimport UpdateAbyss from './components/abyss/updateabyss';\r\nimport UpdatePet from './components/pets/updatepet';\r\nimport NewPet from './components/pets/newpet';\r\nimport logo from './logo.svg';\r\nimport './App.scss';\r\n\r\nconst App = () => {\r\n\r\n  useEffect(() => {\r\n    store.dispatch(loadUser());\r\n  }, [])\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n\r\n        <Fragment>\r\n          <section className=\"container-scroller\">\r\n\r\n            <Route component={Sidebar} />\r\n            <div className=\"container-fluid page-body-wrapper\">\r\n              <Route component={Navbar} />\r\n\r\n              <div className=\"main-panel\">\r\n                <div className=\"content-wrapper\">\r\n                  <Switch>\r\n                    <Route exact path=\"/login\" component={Login} />\r\n                    <Route exact path=\"/\" component={Landing} />\r\n                    <Route exact path=\"/newcard\" component={NewCard} />\r\n                    <Route exact path=\"/updatecards\" component={UpdateCard} />\r\n                    <Route exact path=\"/newarm\" component={NewArm} />\r\n                    <Route exact path=\"/updatearms\" component={UpdateArm} />\r\n                    <Route exact path=\"/newabyss\" component={NewAbyss} />\r\n                    <Route exact path=\"/updateabyss\" component={UpdateAbyss} />\r\n                    <Route exact path=\"/newuniverse\" component={NewUniverse} />\r\n                    <Route exact path=\"/updateuniverse\" component={UpdateUniverse} />\r\n                    <Route exact path=\"/newtitle\" component={NewTitle} />\r\n                    <Route exact path=\"/updatetitles\" component={UpdateTitle} />\r\n                    <Route exact path=\"/newpet\" component={NewPet} />\r\n                    <Route exact path=\"/updatepets\" component={UpdatePet} />\r\n                  </Switch>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n        </Fragment>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}